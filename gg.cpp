/*
** ゲームグラフィックス特論用補助プログラム GLFW3 版
**

Copyright (c) 2011-2017 Kohe Tokoi. All Rights Reserved.

Permission is hereby granted, free of charge,  to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction,  including without limitation the rights
to use, copy,  modify, merge,  publish, distribute,  sublicense,  and/or sell
copies or substantial portions of the Software.

The above  copyright notice  and this permission notice  shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE  IS PROVIDED "AS IS",  WITHOUT WARRANTY OF ANY KIND,  EXPRESS OR
IMPLIED,  INCLUDING  BUT  NOT LIMITED  TO THE WARRANTIES  OF MERCHANTABILITY,
FITNESS  FOR  A PARTICULAR PURPOSE  AND NONINFRINGEMENT.  IN  NO EVENT  SHALL
KOHE TOKOI  BE LIABLE FOR ANY CLAIM,  DAMAGES OR OTHER LIABILITY,  WHETHER IN
AN ACTION  OF CONTRACT,  TORT  OR  OTHERWISE,  ARISING  FROM,  OUT OF  OR  IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

**
*/

// 標準ライブラリ
#include <cmath>
#include <cfloat>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>

// クラス定義
#include "gg.h"

#if defined(_WIN32)
#  if defined(_WIN64)
#    define GLFW3_PLATFORM "x64"
#  else
#    define GLFW3_PLATFORM "x86"
#  endif
#  if defined(_DEBUG)
#    define GLFW3_CONFIGURATION "Debug"
#  else
#    define GLFW3_CONFIGURATION "Release"
#    pragma comment(linker, "/subsystem:\"windows\" /entry:\"mainCRTStartup\"")
#  endif
#  pragma comment(lib, "glfw3/" GLFW3_PLATFORM "/" GLFW3_CONFIGURATION "/glfw3.lib")
#  pragma comment(lib, "opengl32.lib")
PFNGLACCUMXOESPROC glAccumxOES;
PFNGLACTIVEPROGRAMEXTPROC glActiveProgramEXT;
PFNGLACTIVESHADERPROGRAMPROC glActiveShaderProgram;
PFNGLACTIVESTENCILFACEEXTPROC glActiveStencilFaceEXT;
PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
PFNGLACTIVETEXTUREPROC glActiveTexture;
PFNGLACTIVEVARYINGNVPROC glActiveVaryingNV;
PFNGLALPHAFRAGMENTOP1ATIPROC glAlphaFragmentOp1ATI;
PFNGLALPHAFRAGMENTOP2ATIPROC glAlphaFragmentOp2ATI;
PFNGLALPHAFRAGMENTOP3ATIPROC glAlphaFragmentOp3ATI;
PFNGLALPHAFUNCXOESPROC glAlphaFuncxOES;
PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC glAlphaToCoverageDitherControlNV;
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC glApplyFramebufferAttachmentCMAAINTEL;
PFNGLAPPLYTEXTUREEXTPROC glApplyTextureEXT;
PFNGLAREPROGRAMSRESIDENTNVPROC glAreProgramsResidentNV;
PFNGLARETEXTURESRESIDENTEXTPROC glAreTexturesResidentEXT;
PFNGLARRAYELEMENTEXTPROC glArrayElementEXT;
PFNGLARRAYOBJECTATIPROC glArrayObjectATI;
PFNGLASYNCMARKERSGIXPROC glAsyncMarkerSGIX;
PFNGLATTACHOBJECTARBPROC glAttachObjectARB;
PFNGLATTACHSHADERPROC glAttachShader;
PFNGLBEGINCONDITIONALRENDERNVPROC glBeginConditionalRenderNV;
PFNGLBEGINCONDITIONALRENDERNVXPROC glBeginConditionalRenderNVX;
PFNGLBEGINCONDITIONALRENDERPROC glBeginConditionalRender;
PFNGLBEGINFRAGMENTSHADERATIPROC glBeginFragmentShaderATI;
PFNGLBEGINOCCLUSIONQUERYNVPROC glBeginOcclusionQueryNV;
PFNGLBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
PFNGLBEGINPERFQUERYINTELPROC glBeginPerfQueryINTEL;
PFNGLBEGINQUERYARBPROC glBeginQueryARB;
PFNGLBEGINQUERYINDEXEDPROC glBeginQueryIndexed;
PFNGLBEGINQUERYPROC glBeginQuery;
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC glBeginTransformFeedbackEXT;
PFNGLBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
PFNGLBEGINTRANSFORMFEEDBACKPROC glBeginTransformFeedback;
PFNGLBEGINVERTEXSHADEREXTPROC glBeginVertexShaderEXT;
PFNGLBEGINVIDEOCAPTURENVPROC glBeginVideoCaptureNV;
PFNGLBINDATTRIBLOCATIONARBPROC glBindAttribLocationARB;
PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
PFNGLBINDBUFFERARBPROC glBindBufferARB;
PFNGLBINDBUFFERBASEEXTPROC glBindBufferBaseEXT;
PFNGLBINDBUFFERBASENVPROC glBindBufferBaseNV;
PFNGLBINDBUFFERBASEPROC glBindBufferBase;
PFNGLBINDBUFFEROFFSETEXTPROC glBindBufferOffsetEXT;
PFNGLBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
PFNGLBINDBUFFERPROC glBindBuffer;
PFNGLBINDBUFFERRANGEEXTPROC glBindBufferRangeEXT;
PFNGLBINDBUFFERRANGENVPROC glBindBufferRangeNV;
PFNGLBINDBUFFERRANGEPROC glBindBufferRange;
PFNGLBINDBUFFERSBASEPROC glBindBuffersBase;
PFNGLBINDBUFFERSRANGEPROC glBindBuffersRange;
PFNGLBINDFRAGDATALOCATIONEXTPROC glBindFragDataLocationEXT;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glBindFragDataLocationIndexed;
PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation;
PFNGLBINDFRAGMENTSHADERATIPROC glBindFragmentShaderATI;
PFNGLBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
PFNGLBINDIMAGETEXTUREEXTPROC glBindImageTextureEXT;
PFNGLBINDIMAGETEXTUREPROC glBindImageTexture;
PFNGLBINDIMAGETEXTURESPROC glBindImageTextures;
PFNGLBINDLIGHTPARAMETEREXTPROC glBindLightParameterEXT;
PFNGLBINDMATERIALPARAMETEREXTPROC glBindMaterialParameterEXT;
PFNGLBINDMULTITEXTUREEXTPROC glBindMultiTextureEXT;
PFNGLBINDPARAMETEREXTPROC glBindParameterEXT;
PFNGLBINDPROGRAMARBPROC glBindProgramARB;
PFNGLBINDPROGRAMNVPROC glBindProgramNV;
PFNGLBINDPROGRAMPIPELINEPROC glBindProgramPipeline;
PFNGLBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
PFNGLBINDSAMPLERPROC glBindSampler;
PFNGLBINDSAMPLERSPROC glBindSamplers;
PFNGLBINDTEXGENPARAMETEREXTPROC glBindTexGenParameterEXT;
PFNGLBINDTEXTUREEXTPROC glBindTextureEXT;
PFNGLBINDTEXTURESPROC glBindTextures;
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glBindTextureUnitParameterEXT;
PFNGLBINDTEXTUREUNITPROC glBindTextureUnit;
PFNGLBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
PFNGLBINDTRANSFORMFEEDBACKPROC glBindTransformFeedback;
PFNGLBINDVERTEXARRAYAPPLEPROC glBindVertexArrayAPPLE;
PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
PFNGLBINDVERTEXBUFFERPROC glBindVertexBuffer;
PFNGLBINDVERTEXBUFFERSPROC glBindVertexBuffers;
PFNGLBINDVERTEXSHADEREXTPROC glBindVertexShaderEXT;
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC glBindVideoCaptureStreamBufferNV;
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC glBindVideoCaptureStreamTextureNV;
PFNGLBINORMAL3BEXTPROC glBinormal3bEXT;
PFNGLBINORMAL3BVEXTPROC glBinormal3bvEXT;
PFNGLBINORMAL3DEXTPROC glBinormal3dEXT;
PFNGLBINORMAL3DVEXTPROC glBinormal3dvEXT;
PFNGLBINORMAL3FEXTPROC glBinormal3fEXT;
PFNGLBINORMAL3FVEXTPROC glBinormal3fvEXT;
PFNGLBINORMAL3IEXTPROC glBinormal3iEXT;
PFNGLBINORMAL3IVEXTPROC glBinormal3ivEXT;
PFNGLBINORMAL3SEXTPROC glBinormal3sEXT;
PFNGLBINORMAL3SVEXTPROC glBinormal3svEXT;
PFNGLBINORMALPOINTEREXTPROC glBinormalPointerEXT;
PFNGLBITMAPXOESPROC glBitmapxOES;
PFNGLBLENDBARRIERKHRPROC glBlendBarrierKHR;
PFNGLBLENDBARRIERNVPROC glBlendBarrierNV;
PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
PFNGLBLENDCOLORPROC glBlendColor;
PFNGLBLENDCOLORXOESPROC glBlendColorxOES;
PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
PFNGLBLENDEQUATIONIARBPROC glBlendEquationiARB;
PFNGLBLENDEQUATIONINDEXEDAMDPROC glBlendEquationIndexedAMD;
PFNGLBLENDEQUATIONIPROC glBlendEquationi;
PFNGLBLENDEQUATIONPROC glBlendEquation;
PFNGLBLENDEQUATIONSEPARATEEXTPROC glBlendEquationSeparateEXT;
PFNGLBLENDEQUATIONSEPARATEIARBPROC glBlendEquationSeparateiARB;
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC glBlendEquationSeparateIndexedAMD;
PFNGLBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
PFNGLBLENDFUNCIARBPROC glBlendFunciARB;
PFNGLBLENDFUNCINDEXEDAMDPROC glBlendFuncIndexedAMD;
PFNGLBLENDFUNCIPROC glBlendFunci;
PFNGLBLENDFUNCSEPARATEEXTPROC glBlendFuncSeparateEXT;
PFNGLBLENDFUNCSEPARATEIARBPROC glBlendFuncSeparateiARB;
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC glBlendFuncSeparateIndexedAMD;
PFNGLBLENDFUNCSEPARATEINGRPROC glBlendFuncSeparateINGR;
PFNGLBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
PFNGLBLENDPARAMETERINVPROC glBlendParameteriNV;
PFNGLBLITFRAMEBUFFEREXTPROC glBlitFramebufferEXT;
PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
PFNGLBLITNAMEDFRAMEBUFFERPROC glBlitNamedFramebuffer;
PFNGLBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
PFNGLBUFFERDATAARBPROC glBufferDataARB;
PFNGLBUFFERDATAPROC glBufferData;
PFNGLBUFFERPAGECOMMITMENTARBPROC glBufferPageCommitmentARB;
PFNGLBUFFERPARAMETERIAPPLEPROC glBufferParameteriAPPLE;
PFNGLBUFFERSTORAGEPROC glBufferStorage;
PFNGLBUFFERSUBDATAARBPROC glBufferSubDataARB;
PFNGLBUFFERSUBDATAPROC glBufferSubData;
PFNGLCALLCOMMANDLISTNVPROC glCallCommandListNV;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC glCheckNamedFramebufferStatusEXT;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glCheckNamedFramebufferStatus;
PFNGLCLAMPCOLORARBPROC glClampColorARB;
PFNGLCLAMPCOLORPROC glClampColor;
PFNGLCLEARACCUMXOESPROC glClearAccumxOES;
PFNGLCLEARBUFFERDATAPROC glClearBufferData;
PFNGLCLEARBUFFERFIPROC glClearBufferfi;
PFNGLCLEARBUFFERFVPROC glClearBufferfv;
PFNGLCLEARBUFFERIVPROC glClearBufferiv;
PFNGLCLEARBUFFERSUBDATAPROC glClearBufferSubData;
PFNGLCLEARBUFFERUIVPROC glClearBufferuiv;
PFNGLCLEARCOLORIIEXTPROC glClearColorIiEXT;
PFNGLCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
PFNGLCLEARCOLORXOESPROC glClearColorxOES;
PFNGLCLEARDEPTHDNVPROC glClearDepthdNV;
PFNGLCLEARDEPTHFOESPROC glClearDepthfOES;
PFNGLCLEARDEPTHFPROC glClearDepthf;
PFNGLCLEARDEPTHXOESPROC glClearDepthxOES;
PFNGLCLEARNAMEDBUFFERDATAEXTPROC glClearNamedBufferDataEXT;
PFNGLCLEARNAMEDBUFFERDATAPROC glClearNamedBufferData;
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC glClearNamedBufferSubDataEXT;
PFNGLCLEARNAMEDBUFFERSUBDATAPROC glClearNamedBufferSubData;
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC glClearNamedFramebufferfi;
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC glClearNamedFramebufferfv;
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC glClearNamedFramebufferiv;
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glClearNamedFramebufferuiv;
PFNGLCLEARTEXIMAGEPROC glClearTexImage;
PFNGLCLEARTEXSUBIMAGEPROC glClearTexSubImage;
PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC glClientActiveVertexStreamATI;
PFNGLCLIENTATTRIBDEFAULTEXTPROC glClientAttribDefaultEXT;
PFNGLCLIENTWAITSYNCPROC glClientWaitSync;
PFNGLCLIPCONTROLPROC glClipControl;
PFNGLCLIPPLANEFOESPROC glClipPlanefOES;
PFNGLCLIPPLANEXOESPROC glClipPlanexOES;
PFNGLCOLOR3FVERTEX3FSUNPROC glColor3fVertex3fSUN;
PFNGLCOLOR3FVERTEX3FVSUNPROC glColor3fVertex3fvSUN;
PFNGLCOLOR3HNVPROC glColor3hNV;
PFNGLCOLOR3HVNVPROC glColor3hvNV;
PFNGLCOLOR3XOESPROC glColor3xOES;
PFNGLCOLOR3XVOESPROC glColor3xvOES;
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC glColor4fNormal3fVertex3fSUN;
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC glColor4fNormal3fVertex3fvSUN;
PFNGLCOLOR4HNVPROC glColor4hNV;
PFNGLCOLOR4HVNVPROC glColor4hvNV;
PFNGLCOLOR4UBVERTEX2FSUNPROC glColor4ubVertex2fSUN;
PFNGLCOLOR4UBVERTEX2FVSUNPROC glColor4ubVertex2fvSUN;
PFNGLCOLOR4UBVERTEX3FSUNPROC glColor4ubVertex3fSUN;
PFNGLCOLOR4UBVERTEX3FVSUNPROC glColor4ubVertex3fvSUN;
PFNGLCOLOR4XOESPROC glColor4xOES;
PFNGLCOLOR4XVOESPROC glColor4xvOES;
PFNGLCOLORFORMATNVPROC glColorFormatNV;
PFNGLCOLORFRAGMENTOP1ATIPROC glColorFragmentOp1ATI;
PFNGLCOLORFRAGMENTOP2ATIPROC glColorFragmentOp2ATI;
PFNGLCOLORFRAGMENTOP3ATIPROC glColorFragmentOp3ATI;
PFNGLCOLORMASKINDEXEDEXTPROC glColorMaskIndexedEXT;
PFNGLCOLORMASKIPROC glColorMaski;
PFNGLCOLORP3UIPROC glColorP3ui;
PFNGLCOLORP3UIVPROC glColorP3uiv;
PFNGLCOLORP4UIPROC glColorP4ui;
PFNGLCOLORP4UIVPROC glColorP4uiv;
PFNGLCOLORPOINTEREXTPROC glColorPointerEXT;
PFNGLCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
PFNGLCOLORPOINTERVINTELPROC glColorPointervINTEL;
PFNGLCOLORSUBTABLEEXTPROC glColorSubTableEXT;
PFNGLCOLORSUBTABLEPROC glColorSubTable;
PFNGLCOLORTABLEEXTPROC glColorTableEXT;
PFNGLCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
PFNGLCOLORTABLEPARAMETERFVSGIPROC glColorTableParameterfvSGI;
PFNGLCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
PFNGLCOLORTABLEPARAMETERIVSGIPROC glColorTableParameterivSGI;
PFNGLCOLORTABLEPROC glColorTable;
PFNGLCOLORTABLESGIPROC glColorTableSGI;
PFNGLCOMBINERINPUTNVPROC glCombinerInputNV;
PFNGLCOMBINEROUTPUTNVPROC glCombinerOutputNV;
PFNGLCOMBINERPARAMETERFNVPROC glCombinerParameterfNV;
PFNGLCOMBINERPARAMETERFVNVPROC glCombinerParameterfvNV;
PFNGLCOMBINERPARAMETERINVPROC glCombinerParameteriNV;
PFNGLCOMBINERPARAMETERIVNVPROC glCombinerParameterivNV;
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC glCombinerStageParameterfvNV;
PFNGLCOMMANDLISTSEGMENTSNVPROC glCommandListSegmentsNV;
PFNGLCOMPILECOMMANDLISTNVPROC glCompileCommandListNV;
PFNGLCOMPILESHADERARBPROC glCompileShaderARB;
PFNGLCOMPILESHADERINCLUDEARBPROC glCompileShaderIncludeARB;
PFNGLCOMPILESHADERPROC glCompileShader;
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC glCompressedMultiTexImage1DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC glCompressedMultiTexImage2DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC glCompressedMultiTexImage3DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC glCompressedMultiTexSubImage1DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC glCompressedMultiTexSubImage2DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC glCompressedMultiTexSubImage3DEXT;
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC glCompressedTextureImage1DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC glCompressedTextureImage2DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC glCompressedTextureImage3DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC glCompressedTextureSubImage1DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glCompressedTextureSubImage1D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC glCompressedTextureSubImage2DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glCompressedTextureSubImage2D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC glCompressedTextureSubImage3DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glCompressedTextureSubImage3D;
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC glConservativeRasterParameterfNV;
PFNGLCONSERVATIVERASTERPARAMETERINVPROC glConservativeRasterParameteriNV;
PFNGLCONVOLUTIONFILTER1DEXTPROC glConvolutionFilter1DEXT;
PFNGLCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
PFNGLCONVOLUTIONFILTER2DEXTPROC glConvolutionFilter2DEXT;
PFNGLCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
PFNGLCONVOLUTIONPARAMETERFEXTPROC glConvolutionParameterfEXT;
PFNGLCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
PFNGLCONVOLUTIONPARAMETERFVEXTPROC glConvolutionParameterfvEXT;
PFNGLCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
PFNGLCONVOLUTIONPARAMETERIEXTPROC glConvolutionParameteriEXT;
PFNGLCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
PFNGLCONVOLUTIONPARAMETERIVEXTPROC glConvolutionParameterivEXT;
PFNGLCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
PFNGLCONVOLUTIONPARAMETERXOESPROC glConvolutionParameterxOES;
PFNGLCONVOLUTIONPARAMETERXVOESPROC glConvolutionParameterxvOES;
PFNGLCOPYBUFFERSUBDATAPROC glCopyBufferSubData;
PFNGLCOPYCOLORSUBTABLEEXTPROC glCopyColorSubTableEXT;
PFNGLCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
PFNGLCOPYCOLORTABLEPROC glCopyColorTable;
PFNGLCOPYCOLORTABLESGIPROC glCopyColorTableSGI;
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glCopyConvolutionFilter1DEXT;
PFNGLCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glCopyConvolutionFilter2DEXT;
PFNGLCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
PFNGLCOPYIMAGESUBDATANVPROC glCopyImageSubDataNV;
PFNGLCOPYIMAGESUBDATAPROC glCopyImageSubData;
PFNGLCOPYMULTITEXIMAGE1DEXTPROC glCopyMultiTexImage1DEXT;
PFNGLCOPYMULTITEXIMAGE2DEXTPROC glCopyMultiTexImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC glCopyMultiTexSubImage1DEXT;
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC glCopyMultiTexSubImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC glCopyMultiTexSubImage3DEXT;
PFNGLCOPYNAMEDBUFFERSUBDATAPROC glCopyNamedBufferSubData;
PFNGLCOPYPATHNVPROC glCopyPathNV;
PFNGLCOPYTEXIMAGE1DEXTPROC glCopyTexImage1DEXT;
PFNGLCOPYTEXIMAGE2DEXTPROC glCopyTexImage2DEXT;
PFNGLCOPYTEXSUBIMAGE1DEXTPROC glCopyTexSubImage1DEXT;
PFNGLCOPYTEXSUBIMAGE2DEXTPROC glCopyTexSubImage2DEXT;
PFNGLCOPYTEXSUBIMAGE3DEXTPROC glCopyTexSubImage3DEXT;
PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
PFNGLCOPYTEXTUREIMAGE1DEXTPROC glCopyTextureImage1DEXT;
PFNGLCOPYTEXTUREIMAGE2DEXTPROC glCopyTextureImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glCopyTextureSubImage1DEXT;
PFNGLCOPYTEXTURESUBIMAGE1DPROC glCopyTextureSubImage1D;
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glCopyTextureSubImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE2DPROC glCopyTextureSubImage2D;
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glCopyTextureSubImage3DEXT;
PFNGLCOPYTEXTURESUBIMAGE3DPROC glCopyTextureSubImage3D;
PFNGLCOVERAGEMODULATIONNVPROC glCoverageModulationNV;
PFNGLCOVERAGEMODULATIONTABLENVPROC glCoverageModulationTableNV;
PFNGLCOVERFILLPATHINSTANCEDNVPROC glCoverFillPathInstancedNV;
PFNGLCOVERFILLPATHNVPROC glCoverFillPathNV;
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC glCoverStrokePathInstancedNV;
PFNGLCOVERSTROKEPATHNVPROC glCoverStrokePathNV;
PFNGLCREATEBUFFERSPROC glCreateBuffers;
PFNGLCREATECOMMANDLISTSNVPROC glCreateCommandListsNV;
PFNGLCREATEFRAMEBUFFERSPROC glCreateFramebuffers;
PFNGLCREATEPERFQUERYINTELPROC glCreatePerfQueryINTEL;
PFNGLCREATEPROGRAMOBJECTARBPROC glCreateProgramObjectARB;
PFNGLCREATEPROGRAMPIPELINESPROC glCreateProgramPipelines;
PFNGLCREATEPROGRAMPROC glCreateProgram;
PFNGLCREATEQUERIESPROC glCreateQueries;
PFNGLCREATERENDERBUFFERSPROC glCreateRenderbuffers;
PFNGLCREATESAMPLERSPROC glCreateSamplers;
PFNGLCREATESHADEROBJECTARBPROC glCreateShaderObjectARB;
PFNGLCREATESHADERPROC glCreateShader;
PFNGLCREATESHADERPROGRAMEXTPROC glCreateShaderProgramEXT;
PFNGLCREATESHADERPROGRAMVPROC glCreateShaderProgramv;
PFNGLCREATESTATESNVPROC glCreateStatesNV;
PFNGLCREATESYNCFROMCLEVENTARBPROC glCreateSyncFromCLeventARB;
PFNGLCREATETEXTURESPROC glCreateTextures;
PFNGLCREATETRANSFORMFEEDBACKSPROC glCreateTransformFeedbacks;
PFNGLCREATEVERTEXARRAYSPROC glCreateVertexArrays;
PFNGLCULLPARAMETERDVEXTPROC glCullParameterdvEXT;
PFNGLCULLPARAMETERFVEXTPROC glCullParameterfvEXT;
PFNGLCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
PFNGLDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
PFNGLDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallbackARB;
PFNGLDEBUGMESSAGECALLBACKPROC glDebugMessageCallback;
PFNGLDEBUGMESSAGECONTROLARBPROC glDebugMessageControlARB;
PFNGLDEBUGMESSAGECONTROLPROC glDebugMessageControl;
PFNGLDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
PFNGLDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
PFNGLDEBUGMESSAGEINSERTARBPROC glDebugMessageInsertARB;
PFNGLDEBUGMESSAGEINSERTPROC glDebugMessageInsert;
PFNGLDEFORMATIONMAP3DSGIXPROC glDeformationMap3dSGIX;
PFNGLDEFORMATIONMAP3FSGIXPROC glDeformationMap3fSGIX;
PFNGLDEFORMSGIXPROC glDeformSGIX;
PFNGLDELETEASYNCMARKERSSGIXPROC glDeleteAsyncMarkersSGIX;
PFNGLDELETEBUFFERSARBPROC glDeleteBuffersARB;
PFNGLDELETEBUFFERSPROC glDeleteBuffers;
PFNGLDELETECOMMANDLISTSNVPROC glDeleteCommandListsNV;
PFNGLDELETEFENCESAPPLEPROC glDeleteFencesAPPLE;
PFNGLDELETEFENCESNVPROC glDeleteFencesNV;
PFNGLDELETEFRAGMENTSHADERATIPROC glDeleteFragmentShaderATI;
PFNGLDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
PFNGLDELETENAMEDSTRINGARBPROC glDeleteNamedStringARB;
PFNGLDELETENAMESAMDPROC glDeleteNamesAMD;
PFNGLDELETEOBJECTARBPROC glDeleteObjectARB;
PFNGLDELETEOCCLUSIONQUERIESNVPROC glDeleteOcclusionQueriesNV;
PFNGLDELETEPATHSNVPROC glDeletePathsNV;
PFNGLDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
PFNGLDELETEPERFQUERYINTELPROC glDeletePerfQueryINTEL;
PFNGLDELETEPROGRAMPIPELINESPROC glDeleteProgramPipelines;
PFNGLDELETEPROGRAMPROC glDeleteProgram;
PFNGLDELETEPROGRAMSARBPROC glDeleteProgramsARB;
PFNGLDELETEPROGRAMSNVPROC glDeleteProgramsNV;
PFNGLDELETEQUERIESARBPROC glDeleteQueriesARB;
PFNGLDELETEQUERIESPROC glDeleteQueries;
PFNGLDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
PFNGLDELETESAMPLERSPROC glDeleteSamplers;
PFNGLDELETESHADERPROC glDeleteShader;
PFNGLDELETESTATESNVPROC glDeleteStatesNV;
PFNGLDELETESYNCPROC glDeleteSync;
PFNGLDELETETEXTURESEXTPROC glDeleteTexturesEXT;
PFNGLDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
PFNGLDELETETRANSFORMFEEDBACKSPROC glDeleteTransformFeedbacks;
PFNGLDELETEVERTEXARRAYSAPPLEPROC glDeleteVertexArraysAPPLE;
PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
PFNGLDELETEVERTEXSHADEREXTPROC glDeleteVertexShaderEXT;
PFNGLDEPTHBOUNDSDNVPROC glDepthBoundsdNV;
PFNGLDEPTHBOUNDSEXTPROC glDepthBoundsEXT;
PFNGLDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
PFNGLDEPTHRANGEDNVPROC glDepthRangedNV;
PFNGLDEPTHRANGEFOESPROC glDepthRangefOES;
PFNGLDEPTHRANGEFPROC glDepthRangef;
PFNGLDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
PFNGLDEPTHRANGEXOESPROC glDepthRangexOES;
PFNGLDETACHOBJECTARBPROC glDetachObjectARB;
PFNGLDETACHSHADERPROC glDetachShader;
PFNGLDETAILTEXFUNCSGISPROC glDetailTexFuncSGIS;
PFNGLDISABLECLIENTSTATEIEXTPROC glDisableClientStateiEXT;
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glDisableClientStateIndexedEXT;
PFNGLDISABLEINDEXEDEXTPROC glDisableIndexedEXT;
PFNGLDISABLEIPROC glDisablei;
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glDisableVariantClientStateEXT;
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glDisableVertexArrayAttribEXT;
PFNGLDISABLEVERTEXARRAYATTRIBPROC glDisableVertexArrayAttrib;
PFNGLDISABLEVERTEXARRAYEXTPROC glDisableVertexArrayEXT;
PFNGLDISABLEVERTEXATTRIBAPPLEPROC glDisableVertexAttribAPPLE;
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glDisableVertexAttribArrayARB;
PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC glDispatchComputeGroupSizeARB;
PFNGLDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
PFNGLDISPATCHCOMPUTEPROC glDispatchCompute;
PFNGLDRAWARRAYSEXTPROC glDrawArraysEXT;
PFNGLDRAWARRAYSINDIRECTPROC glDrawArraysIndirect;
PFNGLDRAWARRAYSINSTANCEDARBPROC glDrawArraysInstancedARB;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glDrawArraysInstancedBaseInstance;
PFNGLDRAWARRAYSINSTANCEDEXTPROC glDrawArraysInstancedEXT;
PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
PFNGLDRAWBUFFERSARBPROC glDrawBuffersARB;
PFNGLDRAWBUFFERSATIPROC glDrawBuffersATI;
PFNGLDRAWBUFFERSPROC glDrawBuffers;
PFNGLDRAWCOMMANDSADDRESSNVPROC glDrawCommandsAddressNV;
PFNGLDRAWCOMMANDSNVPROC glDrawCommandsNV;
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC glDrawCommandsStatesAddressNV;
PFNGLDRAWCOMMANDSSTATESNVPROC glDrawCommandsStatesNV;
PFNGLDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
PFNGLDRAWELEMENTARRAYATIPROC glDrawElementArrayATI;
PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex;
PFNGLDRAWELEMENTSINDIRECTPROC glDrawElementsIndirect;
PFNGLDRAWELEMENTSINSTANCEDARBPROC glDrawElementsInstancedARB;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glDrawElementsInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glDrawElementsInstancedBaseVertexBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertex;
PFNGLDRAWELEMENTSINSTANCEDEXTPROC glDrawElementsInstancedEXT;
PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
PFNGLDRAWMESHARRAYSSUNPROC glDrawMeshArraysSUN;
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
PFNGLDRAWRANGEELEMENTARRAYATIPROC glDrawRangeElementArrayATI;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
PFNGLDRAWRANGEELEMENTSEXTPROC glDrawRangeElementsEXT;
PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
PFNGLDRAWTEXTURENVPROC glDrawTextureNV;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glDrawTransformFeedbackInstanced;
PFNGLDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
PFNGLDRAWTRANSFORMFEEDBACKPROC glDrawTransformFeedback;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glDrawTransformFeedbackStreamInstanced;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glDrawTransformFeedbackStream;
PFNGLDRAWVKIMAGENVPROC glDrawVkImageNV;
PFNGLEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
PFNGLEDGEFLAGPOINTEREXTPROC glEdgeFlagPointerEXT;
PFNGLEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
PFNGLELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
PFNGLELEMENTPOINTERATIPROC glElementPointerATI;
PFNGLENABLECLIENTSTATEIEXTPROC glEnableClientStateiEXT;
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glEnableClientStateIndexedEXT;
PFNGLENABLEINDEXEDEXTPROC glEnableIndexedEXT;
PFNGLENABLEIPROC glEnablei;
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glEnableVariantClientStateEXT;
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glEnableVertexArrayAttribEXT;
PFNGLENABLEVERTEXARRAYATTRIBPROC glEnableVertexArrayAttrib;
PFNGLENABLEVERTEXARRAYEXTPROC glEnableVertexArrayEXT;
PFNGLENABLEVERTEXATTRIBAPPLEPROC glEnableVertexAttribAPPLE;
PFNGLENABLEVERTEXATTRIBARRAYARBPROC glEnableVertexAttribArrayARB;
PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
PFNGLENDCONDITIONALRENDERNVPROC glEndConditionalRenderNV;
PFNGLENDCONDITIONALRENDERNVXPROC glEndConditionalRenderNVX;
PFNGLENDCONDITIONALRENDERPROC glEndConditionalRender;
PFNGLENDFRAGMENTSHADERATIPROC glEndFragmentShaderATI;
PFNGLENDOCCLUSIONQUERYNVPROC glEndOcclusionQueryNV;
PFNGLENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
PFNGLENDPERFQUERYINTELPROC glEndPerfQueryINTEL;
PFNGLENDQUERYARBPROC glEndQueryARB;
PFNGLENDQUERYINDEXEDPROC glEndQueryIndexed;
PFNGLENDQUERYPROC glEndQuery;
PFNGLENDTRANSFORMFEEDBACKEXTPROC glEndTransformFeedbackEXT;
PFNGLENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
PFNGLENDTRANSFORMFEEDBACKPROC glEndTransformFeedback;
PFNGLENDVERTEXSHADEREXTPROC glEndVertexShaderEXT;
PFNGLENDVIDEOCAPTURENVPROC glEndVideoCaptureNV;
PFNGLEVALCOORD1XOESPROC glEvalCoord1xOES;
PFNGLEVALCOORD1XVOESPROC glEvalCoord1xvOES;
PFNGLEVALCOORD2XOESPROC glEvalCoord2xOES;
PFNGLEVALCOORD2XVOESPROC glEvalCoord2xvOES;
PFNGLEVALMAPSNVPROC glEvalMapsNV;
PFNGLEVALUATEDEPTHVALUESARBPROC glEvaluateDepthValuesARB;
PFNGLEXECUTEPROGRAMNVPROC glExecuteProgramNV;
PFNGLEXTRACTCOMPONENTEXTPROC glExtractComponentEXT;
PFNGLFEEDBACKBUFFERXOESPROC glFeedbackBufferxOES;
PFNGLFENCESYNCPROC glFenceSync;
PFNGLFINALCOMBINERINPUTNVPROC glFinalCombinerInputNV;
PFNGLFINISHASYNCSGIXPROC glFinishAsyncSGIX;
PFNGLFINISHFENCEAPPLEPROC glFinishFenceAPPLE;
PFNGLFINISHFENCENVPROC glFinishFenceNV;
PFNGLFINISHOBJECTAPPLEPROC glFinishObjectAPPLE;
PFNGLFINISHTEXTURESUNXPROC glFinishTextureSUNX;
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glFlushMappedBufferRangeAPPLE;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC glFlushMappedBufferRange;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glFlushMappedNamedBufferRangeEXT;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glFlushMappedNamedBufferRange;
PFNGLFLUSHPIXELDATARANGENVPROC glFlushPixelDataRangeNV;
PFNGLFLUSHRASTERSGIXPROC glFlushRasterSGIX;
PFNGLFLUSHSTATICDATAIBMPROC glFlushStaticDataIBM;
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC glFlushVertexArrayRangeAPPLE;
PFNGLFLUSHVERTEXARRAYRANGENVPROC glFlushVertexArrayRangeNV;
PFNGLFOGCOORDDEXTPROC glFogCoorddEXT;
PFNGLFOGCOORDDPROC glFogCoordd;
PFNGLFOGCOORDDVEXTPROC glFogCoorddvEXT;
PFNGLFOGCOORDDVPROC glFogCoorddv;
PFNGLFOGCOORDFEXTPROC glFogCoordfEXT;
PFNGLFOGCOORDFORMATNVPROC glFogCoordFormatNV;
PFNGLFOGCOORDFPROC glFogCoordf;
PFNGLFOGCOORDFVEXTPROC glFogCoordfvEXT;
PFNGLFOGCOORDFVPROC glFogCoordfv;
PFNGLFOGCOORDHNVPROC glFogCoordhNV;
PFNGLFOGCOORDHVNVPROC glFogCoordhvNV;
PFNGLFOGCOORDPOINTEREXTPROC glFogCoordPointerEXT;
PFNGLFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
PFNGLFOGCOORDPOINTERPROC glFogCoordPointer;
PFNGLFOGFUNCSGISPROC glFogFuncSGIS;
PFNGLFOGXOESPROC glFogxOES;
PFNGLFOGXVOESPROC glFogxvOES;
PFNGLFRAGMENTCOLORMATERIALSGIXPROC glFragmentColorMaterialSGIX;
PFNGLFRAGMENTCOVERAGECOLORNVPROC glFragmentCoverageColorNV;
PFNGLFRAGMENTLIGHTFSGIXPROC glFragmentLightfSGIX;
PFNGLFRAGMENTLIGHTFVSGIXPROC glFragmentLightfvSGIX;
PFNGLFRAGMENTLIGHTISGIXPROC glFragmentLightiSGIX;
PFNGLFRAGMENTLIGHTIVSGIXPROC glFragmentLightivSGIX;
PFNGLFRAGMENTLIGHTMODELFSGIXPROC glFragmentLightModelfSGIX;
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC glFragmentLightModelfvSGIX;
PFNGLFRAGMENTLIGHTMODELISGIXPROC glFragmentLightModeliSGIX;
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC glFragmentLightModelivSGIX;
PFNGLFRAGMENTMATERIALFSGIXPROC glFragmentMaterialfSGIX;
PFNGLFRAGMENTMATERIALFVSGIXPROC glFragmentMaterialfvSGIX;
PFNGLFRAGMENTMATERIALISGIXPROC glFragmentMaterialiSGIX;
PFNGLFRAGMENTMATERIALIVSGIXPROC glFragmentMaterialivSGIX;
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glFramebufferDrawBufferEXT;
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glFramebufferDrawBuffersEXT;
PFNGLFRAMEBUFFERPARAMETERIPROC glFramebufferParameteri;
PFNGLFRAMEBUFFERREADBUFFEREXTPROC glFramebufferReadBufferEXT;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC glFramebufferSampleLocationsfvARB;
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glFramebufferSampleLocationsfvNV;
PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC glFramebufferSamplePositionsfvAMD;
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
PFNGLFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
PFNGLFRAMEBUFFERTEXTUREEXTPROC glFramebufferTextureEXT;
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glFramebufferTextureFaceEXT;
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glFramebufferTextureLayerEXT;
PFNGLFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC glFramebufferTextureMultiviewOVR;
PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
PFNGLFRAMETERMINATORGREMEDYPROC glFrameTerminatorGREMEDY;
PFNGLFRAMEZOOMSGIXPROC glFrameZoomSGIX;
PFNGLFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
PFNGLFRUSTUMFOESPROC glFrustumfOES;
PFNGLFRUSTUMXOESPROC glFrustumxOES;
PFNGLGENASYNCMARKERSSGIXPROC glGenAsyncMarkersSGIX;
PFNGLGENBUFFERSARBPROC glGenBuffersARB;
PFNGLGENBUFFERSPROC glGenBuffers;
PFNGLGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
PFNGLGENERATEMULTITEXMIPMAPEXTPROC glGenerateMultiTexMipmapEXT;
PFNGLGENERATETEXTUREMIPMAPEXTPROC glGenerateTextureMipmapEXT;
PFNGLGENERATETEXTUREMIPMAPPROC glGenerateTextureMipmap;
PFNGLGENFENCESAPPLEPROC glGenFencesAPPLE;
PFNGLGENFENCESNVPROC glGenFencesNV;
PFNGLGENFRAGMENTSHADERSATIPROC glGenFragmentShadersATI;
PFNGLGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
PFNGLGENNAMESAMDPROC glGenNamesAMD;
PFNGLGENOCCLUSIONQUERIESNVPROC glGenOcclusionQueriesNV;
PFNGLGENPATHSNVPROC glGenPathsNV;
PFNGLGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
PFNGLGENPROGRAMPIPELINESPROC glGenProgramPipelines;
PFNGLGENPROGRAMSARBPROC glGenProgramsARB;
PFNGLGENPROGRAMSNVPROC glGenProgramsNV;
PFNGLGENQUERIESARBPROC glGenQueriesARB;
PFNGLGENQUERIESPROC glGenQueries;
PFNGLGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
PFNGLGENSAMPLERSPROC glGenSamplers;
PFNGLGENSYMBOLSEXTPROC glGenSymbolsEXT;
PFNGLGENTEXTURESEXTPROC glGenTexturesEXT;
PFNGLGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
PFNGLGENTRANSFORMFEEDBACKSPROC glGenTransformFeedbacks;
PFNGLGENVERTEXARRAYSAPPLEPROC glGenVertexArraysAPPLE;
PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
PFNGLGENVERTEXSHADERSEXTPROC glGenVertexShadersEXT;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glGetActiveAtomicCounterBufferiv;
PFNGLGETACTIVEATTRIBARBPROC glGetActiveAttribARB;
PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib;
PFNGLGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
PFNGLGETACTIVEUNIFORMARBPROC glGetActiveUniformARB;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC glGetActiveUniformBlockiv;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glGetActiveUniformBlockName;
PFNGLGETACTIVEUNIFORMNAMEPROC glGetActiveUniformName;
PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
PFNGLGETACTIVEUNIFORMSIVPROC glGetActiveUniformsiv;
PFNGLGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
PFNGLGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
PFNGLGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
PFNGLGETATTACHEDOBJECTSARBPROC glGetAttachedObjectsARB;
PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders;
PFNGLGETATTRIBLOCATIONARBPROC glGetAttribLocationARB;
PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
PFNGLGETBOOLEANI_VPROC glGetBooleani_v;
PFNGLGETBOOLEANINDEXEDVEXTPROC glGetBooleanIndexedvEXT;
PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
PFNGLGETBUFFERPARAMETERIVARBPROC glGetBufferParameterivARB;
PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
PFNGLGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
PFNGLGETBUFFERPOINTERVARBPROC glGetBufferPointervARB;
PFNGLGETBUFFERPOINTERVPROC glGetBufferPointerv;
PFNGLGETBUFFERSUBDATAARBPROC glGetBufferSubDataARB;
PFNGLGETBUFFERSUBDATAPROC glGetBufferSubData;
PFNGLGETCLIPPLANEFOESPROC glGetClipPlanefOES;
PFNGLGETCLIPPLANEXOESPROC glGetClipPlanexOES;
PFNGLGETCOLORTABLEEXTPROC glGetColorTableEXT;
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glGetColorTableParameterfvEXT;
PFNGLGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC glGetColorTableParameterfvSGI;
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glGetColorTableParameterivEXT;
PFNGLGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC glGetColorTableParameterivSGI;
PFNGLGETCOLORTABLEPROC glGetColorTable;
PFNGLGETCOLORTABLESGIPROC glGetColorTableSGI;
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC glGetCombinerInputParameterfvNV;
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC glGetCombinerInputParameterivNV;
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC glGetCombinerOutputParameterfvNV;
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC glGetCombinerOutputParameterivNV;
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC glGetCombinerStageParameterfvNV;
PFNGLGETCOMMANDHEADERNVPROC glGetCommandHeaderNV;
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glGetCompressedMultiTexImageEXT;
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glGetCompressedTextureImageEXT;
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glGetCompressedTextureImage;
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glGetCompressedTextureSubImage;
PFNGLGETCONVOLUTIONFILTEREXTPROC glGetConvolutionFilterEXT;
PFNGLGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glGetConvolutionParameterfvEXT;
PFNGLGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glGetConvolutionParameterivEXT;
PFNGLGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC glGetConvolutionParameterxvOES;
PFNGLGETCOVERAGEMODULATIONTABLENVPROC glGetCoverageModulationTableNV;
PFNGLGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
PFNGLGETDEBUGMESSAGELOGARBPROC glGetDebugMessageLogARB;
PFNGLGETDEBUGMESSAGELOGPROC glGetDebugMessageLog;
PFNGLGETDETAILTEXFUNCSGISPROC glGetDetailTexFuncSGIS;
PFNGLGETDOUBLEI_VEXTPROC glGetDoublei_vEXT;
PFNGLGETDOUBLEI_VPROC glGetDoublei_v;
PFNGLGETDOUBLEINDEXEDVEXTPROC glGetDoubleIndexedvEXT;
PFNGLGETFENCEIVNVPROC glGetFenceivNV;
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC glGetFinalCombinerInputParameterfvNV;
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC glGetFinalCombinerInputParameterivNV;
PFNGLGETFIRSTPERFQUERYIDINTELPROC glGetFirstPerfQueryIdINTEL;
PFNGLGETFIXEDVOESPROC glGetFixedvOES;
PFNGLGETFLOATI_VEXTPROC glGetFloati_vEXT;
PFNGLGETFLOATI_VPROC glGetFloati_v;
PFNGLGETFLOATINDEXEDVEXTPROC glGetFloatIndexedvEXT;
PFNGLGETFOGFUNCSGISPROC glGetFogFuncSGIS;
PFNGLGETFRAGDATAINDEXPROC glGetFragDataIndex;
PFNGLGETFRAGDATALOCATIONEXTPROC glGetFragDataLocationEXT;
PFNGLGETFRAGDATALOCATIONPROC glGetFragDataLocation;
PFNGLGETFRAGMENTLIGHTFVSGIXPROC glGetFragmentLightfvSGIX;
PFNGLGETFRAGMENTLIGHTIVSGIXPROC glGetFragmentLightivSGIX;
PFNGLGETFRAGMENTMATERIALFVSGIXPROC glGetFragmentMaterialfvSGIX;
PFNGLGETFRAGMENTMATERIALIVSGIXPROC glGetFragmentMaterialivSGIX;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC glGetFramebufferParameterfvAMD;
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glGetFramebufferParameterivEXT;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC glGetFramebufferParameteriv;
PFNGLGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
PFNGLGETGRAPHICSRESETSTATUSPROC glGetGraphicsResetStatus;
PFNGLGETHANDLEARBPROC glGetHandleARB;
PFNGLGETHISTOGRAMEXTPROC glGetHistogramEXT;
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glGetHistogramParameterfvEXT;
PFNGLGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glGetHistogramParameterivEXT;
PFNGLGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
PFNGLGETHISTOGRAMPARAMETERXVOESPROC glGetHistogramParameterxvOES;
PFNGLGETHISTOGRAMPROC glGetHistogram;
PFNGLGETIMAGEHANDLEARBPROC glGetImageHandleARB;
PFNGLGETIMAGEHANDLENVPROC glGetImageHandleNV;
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
PFNGLGETINFOLOGARBPROC glGetInfoLogARB;
PFNGLGETINSTRUMENTSSGIXPROC glGetInstrumentsSGIX;
PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
PFNGLGETINTEGER64VPROC glGetInteger64v;
PFNGLGETINTEGERI_VPROC glGetIntegeri_v;
PFNGLGETINTEGERINDEXEDVEXTPROC glGetIntegerIndexedvEXT;
PFNGLGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
PFNGLGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
PFNGLGETINTERNALFORMATI64VPROC glGetInternalformati64v;
PFNGLGETINTERNALFORMATIVPROC glGetInternalformativ;
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC glGetInternalformatSampleivNV;
PFNGLGETINVARIANTBOOLEANVEXTPROC glGetInvariantBooleanvEXT;
PFNGLGETINVARIANTFLOATVEXTPROC glGetInvariantFloatvEXT;
PFNGLGETINVARIANTINTEGERVEXTPROC glGetInvariantIntegervEXT;
PFNGLGETLIGHTXOESPROC glGetLightxOES;
PFNGLGETLISTPARAMETERFVSGIXPROC glGetListParameterfvSGIX;
PFNGLGETLISTPARAMETERIVSGIXPROC glGetListParameterivSGIX;
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glGetLocalConstantBooleanvEXT;
PFNGLGETLOCALCONSTANTFLOATVEXTPROC glGetLocalConstantFloatvEXT;
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glGetLocalConstantIntegervEXT;
PFNGLGETMAPATTRIBPARAMETERFVNVPROC glGetMapAttribParameterfvNV;
PFNGLGETMAPATTRIBPARAMETERIVNVPROC glGetMapAttribParameterivNV;
PFNGLGETMAPCONTROLPOINTSNVPROC glGetMapControlPointsNV;
PFNGLGETMAPPARAMETERFVNVPROC glGetMapParameterfvNV;
PFNGLGETMAPPARAMETERIVNVPROC glGetMapParameterivNV;
PFNGLGETMAPXVOESPROC glGetMapxvOES;
PFNGLGETMATERIALXOESPROC glGetMaterialxOES;
PFNGLGETMINMAXEXTPROC glGetMinmaxEXT;
PFNGLGETMINMAXPARAMETERFVEXTPROC glGetMinmaxParameterfvEXT;
PFNGLGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
PFNGLGETMINMAXPARAMETERIVEXTPROC glGetMinmaxParameterivEXT;
PFNGLGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
PFNGLGETMINMAXPROC glGetMinmax;
PFNGLGETMULTISAMPLEFVNVPROC glGetMultisamplefvNV;
PFNGLGETMULTISAMPLEFVPROC glGetMultisamplefv;
PFNGLGETMULTITEXENVFVEXTPROC glGetMultiTexEnvfvEXT;
PFNGLGETMULTITEXENVIVEXTPROC glGetMultiTexEnvivEXT;
PFNGLGETMULTITEXGENDVEXTPROC glGetMultiTexGendvEXT;
PFNGLGETMULTITEXGENFVEXTPROC glGetMultiTexGenfvEXT;
PFNGLGETMULTITEXGENIVEXTPROC glGetMultiTexGenivEXT;
PFNGLGETMULTITEXIMAGEEXTPROC glGetMultiTexImageEXT;
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glGetMultiTexLevelParameterfvEXT;
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glGetMultiTexLevelParameterivEXT;
PFNGLGETMULTITEXPARAMETERFVEXTPROC glGetMultiTexParameterfvEXT;
PFNGLGETMULTITEXPARAMETERIIVEXTPROC glGetMultiTexParameterIivEXT;
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glGetMultiTexParameterIuivEXT;
PFNGLGETMULTITEXPARAMETERIVEXTPROC glGetMultiTexParameterivEXT;
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glGetNamedBufferParameteri64v;
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glGetNamedBufferParameterivEXT;
PFNGLGETNAMEDBUFFERPARAMETERIVPROC glGetNamedBufferParameteriv;
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glGetNamedBufferPointervEXT;
PFNGLGETNAMEDBUFFERPOINTERVPROC glGetNamedBufferPointerv;
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glGetNamedBufferSubDataEXT;
PFNGLGETNAMEDBUFFERSUBDATAPROC glGetNamedBufferSubData;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetNamedFramebufferAttachmentParameterivEXT;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetNamedFramebufferAttachmentParameteriv;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC glGetNamedFramebufferParameterfvAMD;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glGetNamedFramebufferParameterivEXT;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glGetNamedFramebufferParameteriv;
PFNGLGETNAMEDPROGRAMIVEXTPROC glGetNamedProgramivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glGetNamedProgramLocalParameterdvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glGetNamedProgramLocalParameterfvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glGetNamedProgramLocalParameterIivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glGetNamedProgramLocalParameterIuivEXT;
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glGetNamedProgramStringEXT;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glGetNamedRenderbufferParameterivEXT;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glGetNamedRenderbufferParameteriv;
PFNGLGETNAMEDSTRINGARBPROC glGetNamedStringARB;
PFNGLGETNAMEDSTRINGIVARBPROC glGetNamedStringivARB;
PFNGLGETNCOLORTABLEARBPROC glGetnColorTableARB;
PFNGLGETNCOLORTABLEPROC glGetnColorTable;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
PFNGLGETNCOMPRESSEDTEXIMAGEPROC glGetnCompressedTexImage;
PFNGLGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
PFNGLGETNCONVOLUTIONFILTERPROC glGetnConvolutionFilter;
PFNGLGETNEXTPERFQUERYIDINTELPROC glGetNextPerfQueryIdINTEL;
PFNGLGETNHISTOGRAMARBPROC glGetnHistogramARB;
PFNGLGETNHISTOGRAMPROC glGetnHistogram;
PFNGLGETNMAPDVARBPROC glGetnMapdvARB;
PFNGLGETNMAPDVPROC glGetnMapdv;
PFNGLGETNMAPFVARBPROC glGetnMapfvARB;
PFNGLGETNMAPFVPROC glGetnMapfv;
PFNGLGETNMAPIVARBPROC glGetnMapivARB;
PFNGLGETNMAPIVPROC glGetnMapiv;
PFNGLGETNMINMAXARBPROC glGetnMinmaxARB;
PFNGLGETNMINMAXPROC glGetnMinmax;
PFNGLGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
PFNGLGETNPIXELMAPFVPROC glGetnPixelMapfv;
PFNGLGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
PFNGLGETNPIXELMAPUIVPROC glGetnPixelMapuiv;
PFNGLGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
PFNGLGETNPIXELMAPUSVPROC glGetnPixelMapusv;
PFNGLGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
PFNGLGETNPOLYGONSTIPPLEPROC glGetnPolygonStipple;
PFNGLGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
PFNGLGETNSEPARABLEFILTERPROC glGetnSeparableFilter;
PFNGLGETNTEXIMAGEARBPROC glGetnTexImageARB;
PFNGLGETNTEXIMAGEPROC glGetnTexImage;
PFNGLGETNUNIFORMDVARBPROC glGetnUniformdvARB;
PFNGLGETNUNIFORMDVPROC glGetnUniformdv;
PFNGLGETNUNIFORMFVARBPROC glGetnUniformfvARB;
PFNGLGETNUNIFORMFVPROC glGetnUniformfv;
PFNGLGETNUNIFORMI64VARBPROC glGetnUniformi64vARB;
PFNGLGETNUNIFORMIVARBPROC glGetnUniformivARB;
PFNGLGETNUNIFORMIVPROC glGetnUniformiv;
PFNGLGETNUNIFORMUI64VARBPROC glGetnUniformui64vARB;
PFNGLGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
PFNGLGETNUNIFORMUIVPROC glGetnUniformuiv;
PFNGLGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
PFNGLGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
PFNGLGETOBJECTLABELEXTPROC glGetObjectLabelEXT;
PFNGLGETOBJECTLABELPROC glGetObjectLabel;
PFNGLGETOBJECTPARAMETERFVARBPROC glGetObjectParameterfvARB;
PFNGLGETOBJECTPARAMETERIVAPPLEPROC glGetObjectParameterivAPPLE;
PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;
PFNGLGETOBJECTPTRLABELPROC glGetObjectPtrLabel;
PFNGLGETOCCLUSIONQUERYIVNVPROC glGetOcclusionQueryivNV;
PFNGLGETOCCLUSIONQUERYUIVNVPROC glGetOcclusionQueryuivNV;
PFNGLGETPATHCOLORGENFVNVPROC glGetPathColorGenfvNV;
PFNGLGETPATHCOLORGENIVNVPROC glGetPathColorGenivNV;
PFNGLGETPATHCOMMANDSNVPROC glGetPathCommandsNV;
PFNGLGETPATHCOORDSNVPROC glGetPathCoordsNV;
PFNGLGETPATHDASHARRAYNVPROC glGetPathDashArrayNV;
PFNGLGETPATHLENGTHNVPROC glGetPathLengthNV;
PFNGLGETPATHMETRICRANGENVPROC glGetPathMetricRangeNV;
PFNGLGETPATHMETRICSNVPROC glGetPathMetricsNV;
PFNGLGETPATHPARAMETERFVNVPROC glGetPathParameterfvNV;
PFNGLGETPATHPARAMETERIVNVPROC glGetPathParameterivNV;
PFNGLGETPATHSPACINGNVPROC glGetPathSpacingNV;
PFNGLGETPATHTEXGENFVNVPROC glGetPathTexGenfvNV;
PFNGLGETPATHTEXGENIVNVPROC glGetPathTexGenivNV;
PFNGLGETPERFCOUNTERINFOINTELPROC glGetPerfCounterInfoINTEL;
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
PFNGLGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
PFNGLGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
PFNGLGETPERFQUERYDATAINTELPROC glGetPerfQueryDataINTEL;
PFNGLGETPERFQUERYIDBYNAMEINTELPROC glGetPerfQueryIdByNameINTEL;
PFNGLGETPERFQUERYINFOINTELPROC glGetPerfQueryInfoINTEL;
PFNGLGETPIXELMAPXVPROC glGetPixelMapxv;
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC glGetPixelTexGenParameterfvSGIS;
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC glGetPixelTexGenParameterivSGIS;
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC glGetPixelTransformParameterfvEXT;
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC glGetPixelTransformParameterivEXT;
PFNGLGETPOINTERI_VEXTPROC glGetPointeri_vEXT;
PFNGLGETPOINTERINDEXEDVEXTPROC glGetPointerIndexedvEXT;
PFNGLGETPOINTERVEXTPROC glGetPointervEXT;
PFNGLGETPROGRAMBINARYPROC glGetProgramBinary;
PFNGLGETPROGRAMENVPARAMETERDVARBPROC glGetProgramEnvParameterdvARB;
PFNGLGETPROGRAMENVPARAMETERFVARBPROC glGetProgramEnvParameterfvARB;
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC glGetProgramEnvParameterIivNV;
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC glGetProgramEnvParameterIuivNV;
PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
PFNGLGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
PFNGLGETPROGRAMIVARBPROC glGetProgramivARB;
PFNGLGETPROGRAMIVNVPROC glGetProgramivNV;
PFNGLGETPROGRAMIVPROC glGetProgramiv;
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glGetProgramLocalParameterdvARB;
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glGetProgramLocalParameterfvARB;
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC glGetProgramLocalParameterIivNV;
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC glGetProgramLocalParameterIuivNV;
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC glGetProgramNamedParameterdvNV;
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC glGetProgramNamedParameterfvNV;
PFNGLGETPROGRAMPARAMETERDVNVPROC glGetProgramParameterdvNV;
PFNGLGETPROGRAMPARAMETERFVNVPROC glGetProgramParameterfvNV;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC glGetProgramPipelineInfoLog;
PFNGLGETPROGRAMPIPELINEIVPROC glGetProgramPipelineiv;
PFNGLGETPROGRAMRESOURCEFVNVPROC glGetProgramResourcefvNV;
PFNGLGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
PFNGLGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
PFNGLGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
PFNGLGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
PFNGLGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
PFNGLGETPROGRAMSTRINGARBPROC glGetProgramStringARB;
PFNGLGETPROGRAMSTRINGNVPROC glGetProgramStringNV;
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC glGetProgramSubroutineParameteruivNV;
PFNGLGETQUERYBUFFEROBJECTI64VPROC glGetQueryBufferObjecti64v;
PFNGLGETQUERYBUFFEROBJECTIVPROC glGetQueryBufferObjectiv;
PFNGLGETQUERYBUFFEROBJECTUI64VPROC glGetQueryBufferObjectui64v;
PFNGLGETQUERYBUFFEROBJECTUIVPROC glGetQueryBufferObjectuiv;
PFNGLGETQUERYINDEXEDIVPROC glGetQueryIndexediv;
PFNGLGETQUERYIVARBPROC glGetQueryivARB;
PFNGLGETQUERYIVPROC glGetQueryiv;
PFNGLGETQUERYOBJECTI64VEXTPROC glGetQueryObjecti64vEXT;
PFNGLGETQUERYOBJECTI64VPROC glGetQueryObjecti64v;
PFNGLGETQUERYOBJECTIVARBPROC glGetQueryObjectivARB;
PFNGLGETQUERYOBJECTIVPROC glGetQueryObjectiv;
PFNGLGETQUERYOBJECTUI64VEXTPROC glGetQueryObjectui64vEXT;
PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v;
PFNGLGETQUERYOBJECTUIVARBPROC glGetQueryObjectuivARB;
PFNGLGETQUERYOBJECTUIVPROC glGetQueryObjectuiv;
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
PFNGLGETSAMPLERPARAMETERFVPROC glGetSamplerParameterfv;
PFNGLGETSAMPLERPARAMETERIIVPROC glGetSamplerParameterIiv;
PFNGLGETSAMPLERPARAMETERIUIVPROC glGetSamplerParameterIuiv;
PFNGLGETSAMPLERPARAMETERIVPROC glGetSamplerParameteriv;
PFNGLGETSEPARABLEFILTEREXTPROC glGetSeparableFilterEXT;
PFNGLGETSEPARABLEFILTERPROC glGetSeparableFilter;
PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
PFNGLGETSHADERIVPROC glGetShaderiv;
PFNGLGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
PFNGLGETSHADERSOURCEARBPROC glGetShaderSourceARB;
PFNGLGETSHADERSOURCEPROC glGetShaderSource;
PFNGLGETSHARPENTEXFUNCSGISPROC glGetSharpenTexFuncSGIS;
PFNGLGETSTAGEINDEXNVPROC glGetStageIndexNV;
PFNGLGETSTRINGIPROC glGetStringi;
PFNGLGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
PFNGLGETSYNCIVPROC glGetSynciv;
PFNGLGETTEXBUMPPARAMETERFVATIPROC glGetTexBumpParameterfvATI;
PFNGLGETTEXBUMPPARAMETERIVATIPROC glGetTexBumpParameterivATI;
PFNGLGETTEXENVXVOESPROC glGetTexEnvxvOES;
PFNGLGETTEXFILTERFUNCSGISPROC glGetTexFilterFuncSGIS;
PFNGLGETTEXGENXVOESPROC glGetTexGenxvOES;
PFNGLGETTEXLEVELPARAMETERXVOESPROC glGetTexLevelParameterxvOES;
PFNGLGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
PFNGLGETTEXPARAMETERIIVPROC glGetTexParameterIiv;
PFNGLGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
PFNGLGETTEXPARAMETERIUIVPROC glGetTexParameterIuiv;
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC glGetTexParameterPointervAPPLE;
PFNGLGETTEXPARAMETERXVOESPROC glGetTexParameterxvOES;
PFNGLGETTEXTUREHANDLEARBPROC glGetTextureHandleARB;
PFNGLGETTEXTUREHANDLENVPROC glGetTextureHandleNV;
PFNGLGETTEXTUREIMAGEEXTPROC glGetTextureImageEXT;
PFNGLGETTEXTUREIMAGEPROC glGetTextureImage;
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glGetTextureLevelParameterfvEXT;
PFNGLGETTEXTURELEVELPARAMETERFVPROC glGetTextureLevelParameterfv;
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glGetTextureLevelParameterivEXT;
PFNGLGETTEXTURELEVELPARAMETERIVPROC glGetTextureLevelParameteriv;
PFNGLGETTEXTUREPARAMETERFVEXTPROC glGetTextureParameterfvEXT;
PFNGLGETTEXTUREPARAMETERFVPROC glGetTextureParameterfv;
PFNGLGETTEXTUREPARAMETERIIVEXTPROC glGetTextureParameterIivEXT;
PFNGLGETTEXTUREPARAMETERIIVPROC glGetTextureParameterIiv;
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glGetTextureParameterIuivEXT;
PFNGLGETTEXTUREPARAMETERIUIVPROC glGetTextureParameterIuiv;
PFNGLGETTEXTUREPARAMETERIVEXTPROC glGetTextureParameterivEXT;
PFNGLGETTEXTUREPARAMETERIVPROC glGetTextureParameteriv;
PFNGLGETTEXTURESAMPLERHANDLEARBPROC glGetTextureSamplerHandleARB;
PFNGLGETTEXTURESAMPLERHANDLENVPROC glGetTextureSamplerHandleNV;
PFNGLGETTEXTURESUBIMAGEPROC glGetTextureSubImage;
PFNGLGETTRACKMATRIXIVNVPROC glGetTrackMatrixivNV;
PFNGLGETTRANSFORMFEEDBACKI_VPROC glGetTransformFeedbacki_v;
PFNGLGETTRANSFORMFEEDBACKI64_VPROC glGetTransformFeedbacki64_v;
PFNGLGETTRANSFORMFEEDBACKIVPROC glGetTransformFeedbackiv;
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glGetTransformFeedbackVaryingEXT;
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glGetTransformFeedbackVarying;
PFNGLGETUNIFORMBLOCKINDEXPROC glGetUniformBlockIndex;
PFNGLGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
PFNGLGETUNIFORMDVPROC glGetUniformdv;
PFNGLGETUNIFORMFVARBPROC glGetUniformfvARB;
PFNGLGETUNIFORMFVPROC glGetUniformfv;
PFNGLGETUNIFORMI64VARBPROC glGetUniformi64vARB;
PFNGLGETUNIFORMI64VNVPROC glGetUniformi64vNV;
PFNGLGETUNIFORMINDICESPROC glGetUniformIndices;
PFNGLGETUNIFORMIVARBPROC glGetUniformivARB;
PFNGLGETUNIFORMIVPROC glGetUniformiv;
PFNGLGETUNIFORMLOCATIONARBPROC glGetUniformLocationARB;
PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
PFNGLGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
PFNGLGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
PFNGLGETUNIFORMUI64VARBPROC glGetUniformui64vARB;
PFNGLGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
PFNGLGETUNIFORMUIVEXTPROC glGetUniformuivEXT;
PFNGLGETUNIFORMUIVPROC glGetUniformuiv;
PFNGLGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
PFNGLGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
PFNGLGETVARIANTBOOLEANVEXTPROC glGetVariantBooleanvEXT;
PFNGLGETVARIANTFLOATVEXTPROC glGetVariantFloatvEXT;
PFNGLGETVARIANTINTEGERVEXTPROC glGetVariantIntegervEXT;
PFNGLGETVARIANTPOINTERVEXTPROC glGetVariantPointervEXT;
PFNGLGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
PFNGLGETVERTEXARRAYINDEXED64IVPROC glGetVertexArrayIndexed64iv;
PFNGLGETVERTEXARRAYINDEXEDIVPROC glGetVertexArrayIndexediv;
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glGetVertexArrayIntegeri_vEXT;
PFNGLGETVERTEXARRAYINTEGERVEXTPROC glGetVertexArrayIntegervEXT;
PFNGLGETVERTEXARRAYIVPROC glGetVertexArrayiv;
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glGetVertexArrayPointeri_vEXT;
PFNGLGETVERTEXARRAYPOINTERVEXTPROC glGetVertexArrayPointervEXT;
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC glGetVertexAttribArrayObjectfvATI;
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC glGetVertexAttribArrayObjectivATI;
PFNGLGETVERTEXATTRIBDVARBPROC glGetVertexAttribdvARB;
PFNGLGETVERTEXATTRIBDVNVPROC glGetVertexAttribdvNV;
PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
PFNGLGETVERTEXATTRIBFVARBPROC glGetVertexAttribfvARB;
PFNGLGETVERTEXATTRIBFVNVPROC glGetVertexAttribfvNV;
PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
PFNGLGETVERTEXATTRIBIIVEXTPROC glGetVertexAttribIivEXT;
PFNGLGETVERTEXATTRIBIIVPROC glGetVertexAttribIiv;
PFNGLGETVERTEXATTRIBIUIVEXTPROC glGetVertexAttribIuivEXT;
PFNGLGETVERTEXATTRIBIUIVPROC glGetVertexAttribIuiv;
PFNGLGETVERTEXATTRIBIVARBPROC glGetVertexAttribivARB;
PFNGLGETVERTEXATTRIBIVNVPROC glGetVertexAttribivNV;
PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
PFNGLGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
PFNGLGETVERTEXATTRIBLDVPROC glGetVertexAttribLdv;
PFNGLGETVERTEXATTRIBLI64VNVPROC glGetVertexAttribLi64vNV;
PFNGLGETVERTEXATTRIBLUI64VARBPROC glGetVertexAttribLui64vARB;
PFNGLGETVERTEXATTRIBLUI64VNVPROC glGetVertexAttribLui64vNV;
PFNGLGETVERTEXATTRIBPOINTERVARBPROC glGetVertexAttribPointervARB;
PFNGLGETVERTEXATTRIBPOINTERVNVPROC glGetVertexAttribPointervNV;
PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
PFNGLGETVIDEOCAPTUREIVNVPROC glGetVideoCaptureivNV;
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC glGetVideoCaptureStreamdvNV;
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC glGetVideoCaptureStreamfvNV;
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC glGetVideoCaptureStreamivNV;
PFNGLGETVIDEOI64VNVPROC glGetVideoi64vNV;
PFNGLGETVIDEOIVNVPROC glGetVideoivNV;
PFNGLGETVIDEOUI64VNVPROC glGetVideoui64vNV;
PFNGLGETVIDEOUIVNVPROC glGetVideouivNV;
PFNGLGETVKPROCADDRNVPROC glGetVkProcAddrNV;
PFNGLGLOBALALPHAFACTORBSUNPROC glGlobalAlphaFactorbSUN;
PFNGLGLOBALALPHAFACTORDSUNPROC glGlobalAlphaFactordSUN;
PFNGLGLOBALALPHAFACTORFSUNPROC glGlobalAlphaFactorfSUN;
PFNGLGLOBALALPHAFACTORISUNPROC glGlobalAlphaFactoriSUN;
PFNGLGLOBALALPHAFACTORSSUNPROC glGlobalAlphaFactorsSUN;
PFNGLGLOBALALPHAFACTORUBSUNPROC glGlobalAlphaFactorubSUN;
PFNGLGLOBALALPHAFACTORUISUNPROC glGlobalAlphaFactoruiSUN;
PFNGLGLOBALALPHAFACTORUSSUNPROC glGlobalAlphaFactorusSUN;
PFNGLHINTPGIPROC glHintPGI;
PFNGLHISTOGRAMEXTPROC glHistogramEXT;
PFNGLHISTOGRAMPROC glHistogram;
PFNGLIGLOOINTERFACESGIXPROC glIglooInterfaceSGIX;
PFNGLIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
PFNGLIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
PFNGLIMPORTSYNCEXTPROC glImportSyncEXT;
PFNGLINDEXFORMATNVPROC glIndexFormatNV;
PFNGLINDEXFUNCEXTPROC glIndexFuncEXT;
PFNGLINDEXMATERIALEXTPROC glIndexMaterialEXT;
PFNGLINDEXPOINTEREXTPROC glIndexPointerEXT;
PFNGLINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
PFNGLINDEXXOESPROC glIndexxOES;
PFNGLINDEXXVOESPROC glIndexxvOES;
PFNGLINSERTCOMPONENTEXTPROC glInsertComponentEXT;
PFNGLINSERTEVENTMARKEREXTPROC glInsertEventMarkerEXT;
PFNGLINSTRUMENTSBUFFERSGIXPROC glInstrumentsBufferSGIX;
PFNGLINTERPOLATEPATHSNVPROC glInterpolatePathsNV;
PFNGLINVALIDATEBUFFERDATAPROC glInvalidateBufferData;
PFNGLINVALIDATEBUFFERSUBDATAPROC glInvalidateBufferSubData;
PFNGLINVALIDATEFRAMEBUFFERPROC glInvalidateFramebuffer;
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glInvalidateNamedFramebufferData;
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glInvalidateNamedFramebufferSubData;
PFNGLINVALIDATESUBFRAMEBUFFERPROC glInvalidateSubFramebuffer;
PFNGLINVALIDATETEXIMAGEPROC glInvalidateTexImage;
PFNGLINVALIDATETEXSUBIMAGEPROC glInvalidateTexSubImage;
PFNGLISASYNCMARKERSGIXPROC glIsAsyncMarkerSGIX;
PFNGLISBUFFERARBPROC glIsBufferARB;
PFNGLISBUFFERPROC glIsBuffer;
PFNGLISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
PFNGLISCOMMANDLISTNVPROC glIsCommandListNV;
PFNGLISENABLEDINDEXEDEXTPROC glIsEnabledIndexedEXT;
PFNGLISENABLEDIPROC glIsEnabledi;
PFNGLISFENCEAPPLEPROC glIsFenceAPPLE;
PFNGLISFENCENVPROC glIsFenceNV;
PFNGLISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
PFNGLISIMAGEHANDLERESIDENTARBPROC glIsImageHandleResidentARB;
PFNGLISIMAGEHANDLERESIDENTNVPROC glIsImageHandleResidentNV;
PFNGLISNAMEAMDPROC glIsNameAMD;
PFNGLISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
PFNGLISNAMEDSTRINGARBPROC glIsNamedStringARB;
PFNGLISOBJECTBUFFERATIPROC glIsObjectBufferATI;
PFNGLISOCCLUSIONQUERYNVPROC glIsOcclusionQueryNV;
PFNGLISPATHNVPROC glIsPathNV;
PFNGLISPOINTINFILLPATHNVPROC glIsPointInFillPathNV;
PFNGLISPOINTINSTROKEPATHNVPROC glIsPointInStrokePathNV;
PFNGLISPROGRAMARBPROC glIsProgramARB;
PFNGLISPROGRAMNVPROC glIsProgramNV;
PFNGLISPROGRAMPIPELINEPROC glIsProgramPipeline;
PFNGLISPROGRAMPROC glIsProgram;
PFNGLISQUERYARBPROC glIsQueryARB;
PFNGLISQUERYPROC glIsQuery;
PFNGLISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
PFNGLISSAMPLERPROC glIsSampler;
PFNGLISSHADERPROC glIsShader;
PFNGLISSTATENVPROC glIsStateNV;
PFNGLISSYNCPROC glIsSync;
PFNGLISTEXTUREEXTPROC glIsTextureEXT;
PFNGLISTEXTUREHANDLERESIDENTARBPROC glIsTextureHandleResidentARB;
PFNGLISTEXTUREHANDLERESIDENTNVPROC glIsTextureHandleResidentNV;
PFNGLISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
PFNGLISTRANSFORMFEEDBACKPROC glIsTransformFeedback;
PFNGLISVARIANTENABLEDEXTPROC glIsVariantEnabledEXT;
PFNGLISVERTEXARRAYAPPLEPROC glIsVertexArrayAPPLE;
PFNGLISVERTEXARRAYPROC glIsVertexArray;
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC glIsVertexAttribEnabledAPPLE;
PFNGLLABELOBJECTEXTPROC glLabelObjectEXT;
PFNGLLGPUCOPYIMAGESUBDATANVXPROC glLGPUCopyImageSubDataNVX;
PFNGLLGPUINTERLOCKNVXPROC glLGPUInterlockNVX;
PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC glLGPUNamedBufferSubDataNVX;
PFNGLLIGHTENVISGIXPROC glLightEnviSGIX;
PFNGLLIGHTMODELXOESPROC glLightModelxOES;
PFNGLLIGHTMODELXVOESPROC glLightModelxvOES;
PFNGLLIGHTXOESPROC glLightxOES;
PFNGLLIGHTXVOESPROC glLightxvOES;
PFNGLLINEWIDTHXOESPROC glLineWidthxOES;
PFNGLLINKPROGRAMARBPROC glLinkProgramARB;
PFNGLLINKPROGRAMPROC glLinkProgram;
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC glListDrawCommandsStatesClientNV;
PFNGLLISTPARAMETERFSGIXPROC glListParameterfSGIX;
PFNGLLISTPARAMETERFVSGIXPROC glListParameterfvSGIX;
PFNGLLISTPARAMETERISGIXPROC glListParameteriSGIX;
PFNGLLISTPARAMETERIVSGIXPROC glListParameterivSGIX;
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC glLoadIdentityDeformationMapSGIX;
PFNGLLOADMATRIXXOESPROC glLoadMatrixxOES;
PFNGLLOADPROGRAMNVPROC glLoadProgramNV;
PFNGLLOADTRANSPOSEMATRIXDARBPROC glLoadTransposeMatrixdARB;
PFNGLLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
PFNGLLOADTRANSPOSEMATRIXFARBPROC glLoadTransposeMatrixfARB;
PFNGLLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
PFNGLLOADTRANSPOSEMATRIXXOESPROC glLoadTransposeMatrixxOES;
PFNGLLOCKARRAYSEXTPROC glLockArraysEXT;
PFNGLMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
PFNGLMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC glMakeImageHandleNonResidentARB;
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC glMakeImageHandleNonResidentNV;
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC glMakeImageHandleResidentARB;
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC glMakeImageHandleResidentNV;
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC glMakeTextureHandleNonResidentARB;
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC glMakeTextureHandleNonResidentNV;
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC glMakeTextureHandleResidentARB;
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC glMakeTextureHandleResidentNV;
PFNGLMAP1XOESPROC glMap1xOES;
PFNGLMAP2XOESPROC glMap2xOES;
PFNGLMAPBUFFERARBPROC glMapBufferARB;
PFNGLMAPBUFFERPROC glMapBuffer;
PFNGLMAPBUFFERRANGEPROC glMapBufferRange;
PFNGLMAPCONTROLPOINTSNVPROC glMapControlPointsNV;
PFNGLMAPGRID1XOESPROC glMapGrid1xOES;
PFNGLMAPGRID2XOESPROC glMapGrid2xOES;
PFNGLMAPNAMEDBUFFEREXTPROC glMapNamedBufferEXT;
PFNGLMAPNAMEDBUFFERPROC glMapNamedBuffer;
PFNGLMAPNAMEDBUFFERRANGEEXTPROC glMapNamedBufferRangeEXT;
PFNGLMAPNAMEDBUFFERRANGEPROC glMapNamedBufferRange;
PFNGLMAPOBJECTBUFFERATIPROC glMapObjectBufferATI;
PFNGLMAPPARAMETERFVNVPROC glMapParameterfvNV;
PFNGLMAPPARAMETERIVNVPROC glMapParameterivNV;
PFNGLMAPTEXTURE2DINTELPROC glMapTexture2DINTEL;
PFNGLMAPVERTEXATTRIB1DAPPLEPROC glMapVertexAttrib1dAPPLE;
PFNGLMAPVERTEXATTRIB1FAPPLEPROC glMapVertexAttrib1fAPPLE;
PFNGLMAPVERTEXATTRIB2DAPPLEPROC glMapVertexAttrib2dAPPLE;
PFNGLMAPVERTEXATTRIB2FAPPLEPROC glMapVertexAttrib2fAPPLE;
PFNGLMATERIALXOESPROC glMaterialxOES;
PFNGLMATERIALXVOESPROC glMaterialxvOES;
PFNGLMATRIXFRUSTUMEXTPROC glMatrixFrustumEXT;
PFNGLMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
PFNGLMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
PFNGLMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
PFNGLMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
PFNGLMATRIXLOAD3X2FNVPROC glMatrixLoad3x2fNV;
PFNGLMATRIXLOAD3X3FNVPROC glMatrixLoad3x3fNV;
PFNGLMATRIXLOADDEXTPROC glMatrixLoaddEXT;
PFNGLMATRIXLOADFEXTPROC glMatrixLoadfEXT;
PFNGLMATRIXLOADIDENTITYEXTPROC glMatrixLoadIdentityEXT;
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC glMatrixLoadTranspose3x3fNV;
PFNGLMATRIXLOADTRANSPOSEDEXTPROC glMatrixLoadTransposedEXT;
PFNGLMATRIXLOADTRANSPOSEFEXTPROC glMatrixLoadTransposefEXT;
PFNGLMATRIXMULT3X2FNVPROC glMatrixMult3x2fNV;
PFNGLMATRIXMULT3X3FNVPROC glMatrixMult3x3fNV;
PFNGLMATRIXMULTDEXTPROC glMatrixMultdEXT;
PFNGLMATRIXMULTFEXTPROC glMatrixMultfEXT;
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC glMatrixMultTranspose3x3fNV;
PFNGLMATRIXMULTTRANSPOSEDEXTPROC glMatrixMultTransposedEXT;
PFNGLMATRIXMULTTRANSPOSEFEXTPROC glMatrixMultTransposefEXT;
PFNGLMATRIXORTHOEXTPROC glMatrixOrthoEXT;
PFNGLMATRIXPOPEXTPROC glMatrixPopEXT;
PFNGLMATRIXPUSHEXTPROC glMatrixPushEXT;
PFNGLMATRIXROTATEDEXTPROC glMatrixRotatedEXT;
PFNGLMATRIXROTATEFEXTPROC glMatrixRotatefEXT;
PFNGLMATRIXSCALEDEXTPROC glMatrixScaledEXT;
PFNGLMATRIXSCALEFEXTPROC glMatrixScalefEXT;
PFNGLMATRIXTRANSLATEDEXTPROC glMatrixTranslatedEXT;
PFNGLMATRIXTRANSLATEFEXTPROC glMatrixTranslatefEXT;
PFNGLMAXSHADERCOMPILERTHREADSARBPROC glMaxShaderCompilerThreadsARB;
PFNGLMEMORYBARRIERBYREGIONPROC glMemoryBarrierByRegion;
PFNGLMEMORYBARRIEREXTPROC glMemoryBarrierEXT;
PFNGLMEMORYBARRIERPROC glMemoryBarrier;
PFNGLMINMAXEXTPROC glMinmaxEXT;
PFNGLMINMAXPROC glMinmax;
PFNGLMINSAMPLESHADINGARBPROC glMinSampleShadingARB;
PFNGLMINSAMPLESHADINGPROC glMinSampleShading;
PFNGLMULTICASTBARRIERNVPROC glMulticastBarrierNV;
PFNGLMULTICASTBLITFRAMEBUFFERNVPROC glMulticastBlitFramebufferNV;
PFNGLMULTICASTBUFFERSUBDATANVPROC glMulticastBufferSubDataNV;
PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC glMulticastCopyBufferSubDataNV;
PFNGLMULTICASTCOPYIMAGESUBDATANVPROC glMulticastCopyImageSubDataNV;
PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glMulticastFramebufferSampleLocationsfvNV;
PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC glMulticastGetQueryObjecti64vNV;
PFNGLMULTICASTGETQUERYOBJECTIVNVPROC glMulticastGetQueryObjectivNV;
PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC glMulticastGetQueryObjectui64vNV;
PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC glMulticastGetQueryObjectuivNV;
PFNGLMULTICASTWAITSYNCNVPROC glMulticastWaitSyncNV;
PFNGLMULTIDRAWARRAYSEXTPROC glMultiDrawArraysEXT;
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glMultiDrawArraysIndirectAMD;
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC glMultiDrawArraysIndirectBindlessCountNV;
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC glMultiDrawArraysIndirectBindlessNV;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glMultiDrawArraysIndirectCountARB;
PFNGLMULTIDRAWARRAYSINDIRECTPROC glMultiDrawArraysIndirect;
PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glMultiDrawElementsBaseVertex;
PFNGLMULTIDRAWELEMENTSEXTPROC glMultiDrawElementsEXT;
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glMultiDrawElementsIndirectAMD;
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC glMultiDrawElementsIndirectBindlessCountNV;
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC glMultiDrawElementsIndirectBindlessNV;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glMultiDrawElementsIndirectCountARB;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC glMultiDrawElementsIndirect;
PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
PFNGLMULTIMODEDRAWARRAYSIBMPROC glMultiModeDrawArraysIBM;
PFNGLMULTIMODEDRAWELEMENTSIBMPROC glMultiModeDrawElementsIBM;
PFNGLMULTITEXBUFFEREXTPROC glMultiTexBufferEXT;
PFNGLMULTITEXCOORD1BOESPROC glMultiTexCoord1bOES;
PFNGLMULTITEXCOORD1BVOESPROC glMultiTexCoord1bvOES;
PFNGLMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
PFNGLMULTITEXCOORD1DPROC glMultiTexCoord1d;
PFNGLMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
PFNGLMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
PFNGLMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
PFNGLMULTITEXCOORD1FPROC glMultiTexCoord1f;
PFNGLMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
PFNGLMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
PFNGLMULTITEXCOORD1HNVPROC glMultiTexCoord1hNV;
PFNGLMULTITEXCOORD1HVNVPROC glMultiTexCoord1hvNV;
PFNGLMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
PFNGLMULTITEXCOORD1IPROC glMultiTexCoord1i;
PFNGLMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
PFNGLMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
PFNGLMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
PFNGLMULTITEXCOORD1SPROC glMultiTexCoord1s;
PFNGLMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
PFNGLMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
PFNGLMULTITEXCOORD1XOESPROC glMultiTexCoord1xOES;
PFNGLMULTITEXCOORD1XVOESPROC glMultiTexCoord1xvOES;
PFNGLMULTITEXCOORD2BOESPROC glMultiTexCoord2bOES;
PFNGLMULTITEXCOORD2BVOESPROC glMultiTexCoord2bvOES;
PFNGLMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
PFNGLMULTITEXCOORD2DPROC glMultiTexCoord2d;
PFNGLMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
PFNGLMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
PFNGLMULTITEXCOORD2FPROC glMultiTexCoord2f;
PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
PFNGLMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
PFNGLMULTITEXCOORD2HNVPROC glMultiTexCoord2hNV;
PFNGLMULTITEXCOORD2HVNVPROC glMultiTexCoord2hvNV;
PFNGLMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
PFNGLMULTITEXCOORD2IPROC glMultiTexCoord2i;
PFNGLMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
PFNGLMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
PFNGLMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
PFNGLMULTITEXCOORD2SPROC glMultiTexCoord2s;
PFNGLMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
PFNGLMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
PFNGLMULTITEXCOORD2XOESPROC glMultiTexCoord2xOES;
PFNGLMULTITEXCOORD2XVOESPROC glMultiTexCoord2xvOES;
PFNGLMULTITEXCOORD3BOESPROC glMultiTexCoord3bOES;
PFNGLMULTITEXCOORD3BVOESPROC glMultiTexCoord3bvOES;
PFNGLMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
PFNGLMULTITEXCOORD3DPROC glMultiTexCoord3d;
PFNGLMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
PFNGLMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
PFNGLMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
PFNGLMULTITEXCOORD3FPROC glMultiTexCoord3f;
PFNGLMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
PFNGLMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
PFNGLMULTITEXCOORD3HNVPROC glMultiTexCoord3hNV;
PFNGLMULTITEXCOORD3HVNVPROC glMultiTexCoord3hvNV;
PFNGLMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
PFNGLMULTITEXCOORD3IPROC glMultiTexCoord3i;
PFNGLMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
PFNGLMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
PFNGLMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
PFNGLMULTITEXCOORD3SPROC glMultiTexCoord3s;
PFNGLMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
PFNGLMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
PFNGLMULTITEXCOORD3XOESPROC glMultiTexCoord3xOES;
PFNGLMULTITEXCOORD3XVOESPROC glMultiTexCoord3xvOES;
PFNGLMULTITEXCOORD4BOESPROC glMultiTexCoord4bOES;
PFNGLMULTITEXCOORD4BVOESPROC glMultiTexCoord4bvOES;
PFNGLMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
PFNGLMULTITEXCOORD4DPROC glMultiTexCoord4d;
PFNGLMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
PFNGLMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
PFNGLMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
PFNGLMULTITEXCOORD4FPROC glMultiTexCoord4f;
PFNGLMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
PFNGLMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
PFNGLMULTITEXCOORD4HNVPROC glMultiTexCoord4hNV;
PFNGLMULTITEXCOORD4HVNVPROC glMultiTexCoord4hvNV;
PFNGLMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
PFNGLMULTITEXCOORD4IPROC glMultiTexCoord4i;
PFNGLMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
PFNGLMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
PFNGLMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
PFNGLMULTITEXCOORD4SPROC glMultiTexCoord4s;
PFNGLMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
PFNGLMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
PFNGLMULTITEXCOORD4XOESPROC glMultiTexCoord4xOES;
PFNGLMULTITEXCOORD4XVOESPROC glMultiTexCoord4xvOES;
PFNGLMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
PFNGLMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
PFNGLMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
PFNGLMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
PFNGLMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
PFNGLMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
PFNGLMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
PFNGLMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
PFNGLMULTITEXCOORDPOINTEREXTPROC glMultiTexCoordPointerEXT;
PFNGLMULTITEXENVFEXTPROC glMultiTexEnvfEXT;
PFNGLMULTITEXENVFVEXTPROC glMultiTexEnvfvEXT;
PFNGLMULTITEXENVIEXTPROC glMultiTexEnviEXT;
PFNGLMULTITEXENVIVEXTPROC glMultiTexEnvivEXT;
PFNGLMULTITEXGENDEXTPROC glMultiTexGendEXT;
PFNGLMULTITEXGENDVEXTPROC glMultiTexGendvEXT;
PFNGLMULTITEXGENFEXTPROC glMultiTexGenfEXT;
PFNGLMULTITEXGENFVEXTPROC glMultiTexGenfvEXT;
PFNGLMULTITEXGENIEXTPROC glMultiTexGeniEXT;
PFNGLMULTITEXGENIVEXTPROC glMultiTexGenivEXT;
PFNGLMULTITEXIMAGE1DEXTPROC glMultiTexImage1DEXT;
PFNGLMULTITEXIMAGE2DEXTPROC glMultiTexImage2DEXT;
PFNGLMULTITEXIMAGE3DEXTPROC glMultiTexImage3DEXT;
PFNGLMULTITEXPARAMETERFEXTPROC glMultiTexParameterfEXT;
PFNGLMULTITEXPARAMETERFVEXTPROC glMultiTexParameterfvEXT;
PFNGLMULTITEXPARAMETERIEXTPROC glMultiTexParameteriEXT;
PFNGLMULTITEXPARAMETERIIVEXTPROC glMultiTexParameterIivEXT;
PFNGLMULTITEXPARAMETERIUIVEXTPROC glMultiTexParameterIuivEXT;
PFNGLMULTITEXPARAMETERIVEXTPROC glMultiTexParameterivEXT;
PFNGLMULTITEXRENDERBUFFEREXTPROC glMultiTexRenderbufferEXT;
PFNGLMULTITEXSUBIMAGE1DEXTPROC glMultiTexSubImage1DEXT;
PFNGLMULTITEXSUBIMAGE2DEXTPROC glMultiTexSubImage2DEXT;
PFNGLMULTITEXSUBIMAGE3DEXTPROC glMultiTexSubImage3DEXT;
PFNGLMULTMATRIXXOESPROC glMultMatrixxOES;
PFNGLMULTTRANSPOSEMATRIXDARBPROC glMultTransposeMatrixdARB;
PFNGLMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
PFNGLMULTTRANSPOSEMATRIXFARBPROC glMultTransposeMatrixfARB;
PFNGLMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
PFNGLMULTTRANSPOSEMATRIXXOESPROC glMultTransposeMatrixxOES;
PFNGLNAMEDBUFFERDATAEXTPROC glNamedBufferDataEXT;
PFNGLNAMEDBUFFERDATAPROC glNamedBufferData;
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC glNamedBufferPageCommitmentARB;
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC glNamedBufferPageCommitmentEXT;
PFNGLNAMEDBUFFERSTORAGEEXTPROC glNamedBufferStorageEXT;
PFNGLNAMEDBUFFERSTORAGEPROC glNamedBufferStorage;
PFNGLNAMEDBUFFERSUBDATAEXTPROC glNamedBufferSubDataEXT;
PFNGLNAMEDBUFFERSUBDATAPROC glNamedBufferSubData;
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glNamedCopyBufferSubDataEXT;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glNamedFramebufferDrawBuffer;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glNamedFramebufferDrawBuffers;
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glNamedFramebufferParameteriEXT;
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glNamedFramebufferParameteri;
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glNamedFramebufferReadBuffer;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glNamedFramebufferRenderbufferEXT;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glNamedFramebufferRenderbuffer;
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC glNamedFramebufferSampleLocationsfvARB;
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glNamedFramebufferSampleLocationsfvNV;
PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC glNamedFramebufferSamplePositionsfvAMD;
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glNamedFramebufferTexture1DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glNamedFramebufferTexture2DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glNamedFramebufferTexture3DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glNamedFramebufferTextureEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glNamedFramebufferTextureFaceEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glNamedFramebufferTextureLayerEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glNamedFramebufferTextureLayer;
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glNamedFramebufferTexture;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glNamedProgramLocalParameter4dEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glNamedProgramLocalParameter4dvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glNamedProgramLocalParameter4fEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glNamedProgramLocalParameter4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glNamedProgramLocalParameterI4iEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glNamedProgramLocalParameterI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glNamedProgramLocalParameterI4uiEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glNamedProgramLocalParameterI4uivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glNamedProgramLocalParameters4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glNamedProgramLocalParametersI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glNamedProgramLocalParametersI4uivEXT;
PFNGLNAMEDPROGRAMSTRINGEXTPROC glNamedProgramStringEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glNamedRenderbufferStorageEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glNamedRenderbufferStorageMultisampleCoverageEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glNamedRenderbufferStorageMultisampleEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glNamedRenderbufferStorageMultisample;
PFNGLNAMEDRENDERBUFFERSTORAGEPROC glNamedRenderbufferStorage;
PFNGLNAMEDSTRINGARBPROC glNamedStringARB;
PFNGLNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
PFNGLNORMAL3FVERTEX3FSUNPROC glNormal3fVertex3fSUN;
PFNGLNORMAL3FVERTEX3FVSUNPROC glNormal3fVertex3fvSUN;
PFNGLNORMAL3HNVPROC glNormal3hNV;
PFNGLNORMAL3HVNVPROC glNormal3hvNV;
PFNGLNORMAL3XOESPROC glNormal3xOES;
PFNGLNORMAL3XVOESPROC glNormal3xvOES;
PFNGLNORMALFORMATNVPROC glNormalFormatNV;
PFNGLNORMALP3UIPROC glNormalP3ui;
PFNGLNORMALP3UIVPROC glNormalP3uiv;
PFNGLNORMALPOINTEREXTPROC glNormalPointerEXT;
PFNGLNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
PFNGLNORMALPOINTERVINTELPROC glNormalPointervINTEL;
PFNGLNORMALSTREAM3BATIPROC glNormalStream3bATI;
PFNGLNORMALSTREAM3BVATIPROC glNormalStream3bvATI;
PFNGLNORMALSTREAM3DATIPROC glNormalStream3dATI;
PFNGLNORMALSTREAM3DVATIPROC glNormalStream3dvATI;
PFNGLNORMALSTREAM3FATIPROC glNormalStream3fATI;
PFNGLNORMALSTREAM3FVATIPROC glNormalStream3fvATI;
PFNGLNORMALSTREAM3IATIPROC glNormalStream3iATI;
PFNGLNORMALSTREAM3IVATIPROC glNormalStream3ivATI;
PFNGLNORMALSTREAM3SATIPROC glNormalStream3sATI;
PFNGLNORMALSTREAM3SVATIPROC glNormalStream3svATI;
PFNGLOBJECTLABELPROC glObjectLabel;
PFNGLOBJECTPTRLABELPROC glObjectPtrLabel;
PFNGLOBJECTPURGEABLEAPPLEPROC glObjectPurgeableAPPLE;
PFNGLOBJECTUNPURGEABLEAPPLEPROC glObjectUnpurgeableAPPLE;
PFNGLORTHOFOESPROC glOrthofOES;
PFNGLORTHOXOESPROC glOrthoxOES;
PFNGLPASSTEXCOORDATIPROC glPassTexCoordATI;
PFNGLPASSTHROUGHXOESPROC glPassThroughxOES;
PFNGLPATCHPARAMETERFVPROC glPatchParameterfv;
PFNGLPATCHPARAMETERIPROC glPatchParameteri;
PFNGLPATHCOLORGENNVPROC glPathColorGenNV;
PFNGLPATHCOMMANDSNVPROC glPathCommandsNV;
PFNGLPATHCOORDSNVPROC glPathCoordsNV;
PFNGLPATHCOVERDEPTHFUNCNVPROC glPathCoverDepthFuncNV;
PFNGLPATHDASHARRAYNVPROC glPathDashArrayNV;
PFNGLPATHFOGGENNVPROC glPathFogGenNV;
PFNGLPATHGLYPHINDEXARRAYNVPROC glPathGlyphIndexArrayNV;
PFNGLPATHGLYPHINDEXRANGENVPROC glPathGlyphIndexRangeNV;
PFNGLPATHGLYPHRANGENVPROC glPathGlyphRangeNV;
PFNGLPATHGLYPHSNVPROC glPathGlyphsNV;
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC glPathMemoryGlyphIndexArrayNV;
PFNGLPATHPARAMETERFNVPROC glPathParameterfNV;
PFNGLPATHPARAMETERFVNVPROC glPathParameterfvNV;
PFNGLPATHPARAMETERINVPROC glPathParameteriNV;
PFNGLPATHPARAMETERIVNVPROC glPathParameterivNV;
PFNGLPATHSTENCILDEPTHOFFSETNVPROC glPathStencilDepthOffsetNV;
PFNGLPATHSTENCILFUNCNVPROC glPathStencilFuncNV;
PFNGLPATHSTRINGNVPROC glPathStringNV;
PFNGLPATHSUBCOMMANDSNVPROC glPathSubCommandsNV;
PFNGLPATHSUBCOORDSNVPROC glPathSubCoordsNV;
PFNGLPATHTEXGENNVPROC glPathTexGenNV;
PFNGLPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
PFNGLPAUSETRANSFORMFEEDBACKPROC glPauseTransformFeedback;
PFNGLPIXELDATARANGENVPROC glPixelDataRangeNV;
PFNGLPIXELMAPXPROC glPixelMapx;
PFNGLPIXELSTOREXPROC glPixelStorex;
PFNGLPIXELTEXGENPARAMETERFSGISPROC glPixelTexGenParameterfSGIS;
PFNGLPIXELTEXGENPARAMETERFVSGISPROC glPixelTexGenParameterfvSGIS;
PFNGLPIXELTEXGENPARAMETERISGISPROC glPixelTexGenParameteriSGIS;
PFNGLPIXELTEXGENPARAMETERIVSGISPROC glPixelTexGenParameterivSGIS;
PFNGLPIXELTEXGENSGIXPROC glPixelTexGenSGIX;
PFNGLPIXELTRANSFERXOESPROC glPixelTransferxOES;
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glPixelTransformParameterfEXT;
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glPixelTransformParameterfvEXT;
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glPixelTransformParameteriEXT;
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glPixelTransformParameterivEXT;
PFNGLPIXELZOOMXOESPROC glPixelZoomxOES;
PFNGLPNTRIANGLESFATIPROC glPNTrianglesfATI;
PFNGLPNTRIANGLESIATIPROC glPNTrianglesiATI;
PFNGLPOINTALONGPATHNVPROC glPointAlongPathNV;
PFNGLPOINTPARAMETERFARBPROC glPointParameterfARB;
PFNGLPOINTPARAMETERFEXTPROC glPointParameterfEXT;
PFNGLPOINTPARAMETERFPROC glPointParameterf;
PFNGLPOINTPARAMETERFSGISPROC glPointParameterfSGIS;
PFNGLPOINTPARAMETERFVARBPROC glPointParameterfvARB;
PFNGLPOINTPARAMETERFVEXTPROC glPointParameterfvEXT;
PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
PFNGLPOINTPARAMETERFVSGISPROC glPointParameterfvSGIS;
PFNGLPOINTPARAMETERINVPROC glPointParameteriNV;
PFNGLPOINTPARAMETERIPROC glPointParameteri;
PFNGLPOINTPARAMETERIVNVPROC glPointParameterivNV;
PFNGLPOINTPARAMETERIVPROC glPointParameteriv;
PFNGLPOINTPARAMETERXVOESPROC glPointParameterxvOES;
PFNGLPOINTSIZEXOESPROC glPointSizexOES;
PFNGLPOLLASYNCSGIXPROC glPollAsyncSGIX;
PFNGLPOLLINSTRUMENTSSGIXPROC glPollInstrumentsSGIX;
PFNGLPOLYGONOFFSETCLAMPEXTPROC glPolygonOffsetClampEXT;
PFNGLPOLYGONOFFSETEXTPROC glPolygonOffsetEXT;
PFNGLPOLYGONOFFSETXOESPROC glPolygonOffsetxOES;
PFNGLPOPDEBUGGROUPPROC glPopDebugGroup;
PFNGLPOPGROUPMARKEREXTPROC glPopGroupMarkerEXT;
PFNGLPRESENTFRAMEDUALFILLNVPROC glPresentFrameDualFillNV;
PFNGLPRESENTFRAMEKEYEDNVPROC glPresentFrameKeyedNV;
PFNGLPRIMITIVEBOUNDINGBOXARBPROC glPrimitiveBoundingBoxARB;
PFNGLPRIMITIVERESTARTINDEXNVPROC glPrimitiveRestartIndexNV;
PFNGLPRIMITIVERESTARTINDEXPROC glPrimitiveRestartIndex;
PFNGLPRIMITIVERESTARTNVPROC glPrimitiveRestartNV;
PFNGLPRIORITIZETEXTURESEXTPROC glPrioritizeTexturesEXT;
PFNGLPRIORITIZETEXTURESXOESPROC glPrioritizeTexturesxOES;
PFNGLPROGRAMBINARYPROC glProgramBinary;
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC glProgramBufferParametersfvNV;
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC glProgramBufferParametersIivNV;
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC glProgramBufferParametersIuivNV;
PFNGLPROGRAMENVPARAMETER4DARBPROC glProgramEnvParameter4dARB;
PFNGLPROGRAMENVPARAMETER4DVARBPROC glProgramEnvParameter4dvARB;
PFNGLPROGRAMENVPARAMETER4FARBPROC glProgramEnvParameter4fARB;
PFNGLPROGRAMENVPARAMETER4FVARBPROC glProgramEnvParameter4fvARB;
PFNGLPROGRAMENVPARAMETERI4INVPROC glProgramEnvParameterI4iNV;
PFNGLPROGRAMENVPARAMETERI4IVNVPROC glProgramEnvParameterI4ivNV;
PFNGLPROGRAMENVPARAMETERI4UINVPROC glProgramEnvParameterI4uiNV;
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC glProgramEnvParameterI4uivNV;
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC glProgramEnvParameters4fvEXT;
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC glProgramEnvParametersI4ivNV;
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC glProgramEnvParametersI4uivNV;
PFNGLPROGRAMLOCALPARAMETER4DARBPROC glProgramLocalParameter4dARB;
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glProgramLocalParameter4dvARB;
PFNGLPROGRAMLOCALPARAMETER4FARBPROC glProgramLocalParameter4fARB;
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glProgramLocalParameter4fvARB;
PFNGLPROGRAMLOCALPARAMETERI4INVPROC glProgramLocalParameterI4iNV;
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC glProgramLocalParameterI4ivNV;
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC glProgramLocalParameterI4uiNV;
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC glProgramLocalParameterI4uivNV;
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC glProgramLocalParameters4fvEXT;
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC glProgramLocalParametersI4ivNV;
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC glProgramLocalParametersI4uivNV;
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC glProgramNamedParameter4dNV;
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC glProgramNamedParameter4dvNV;
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC glProgramNamedParameter4fNV;
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC glProgramNamedParameter4fvNV;
PFNGLPROGRAMPARAMETER4DNVPROC glProgramParameter4dNV;
PFNGLPROGRAMPARAMETER4DVNVPROC glProgramParameter4dvNV;
PFNGLPROGRAMPARAMETER4FNVPROC glProgramParameter4fNV;
PFNGLPROGRAMPARAMETER4FVNVPROC glProgramParameter4fvNV;
PFNGLPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
PFNGLPROGRAMPARAMETERIEXTPROC glProgramParameteriEXT;
PFNGLPROGRAMPARAMETERIPROC glProgramParameteri;
PFNGLPROGRAMPARAMETERS4DVNVPROC glProgramParameters4dvNV;
PFNGLPROGRAMPARAMETERS4FVNVPROC glProgramParameters4fvNV;
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC glProgramPathFragmentInputGenNV;
PFNGLPROGRAMSTRINGARBPROC glProgramStringARB;
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC glProgramSubroutineParametersuivNV;
PFNGLPROGRAMUNIFORM1DEXTPROC glProgramUniform1dEXT;
PFNGLPROGRAMUNIFORM1DPROC glProgramUniform1d;
PFNGLPROGRAMUNIFORM1DVEXTPROC glProgramUniform1dvEXT;
PFNGLPROGRAMUNIFORM1DVPROC glProgramUniform1dv;
PFNGLPROGRAMUNIFORM1FEXTPROC glProgramUniform1fEXT;
PFNGLPROGRAMUNIFORM1FPROC glProgramUniform1f;
PFNGLPROGRAMUNIFORM1FVEXTPROC glProgramUniform1fvEXT;
PFNGLPROGRAMUNIFORM1FVPROC glProgramUniform1fv;
PFNGLPROGRAMUNIFORM1I64ARBPROC glProgramUniform1i64ARB;
PFNGLPROGRAMUNIFORM1I64NVPROC glProgramUniform1i64NV;
PFNGLPROGRAMUNIFORM1I64VARBPROC glProgramUniform1i64vARB;
PFNGLPROGRAMUNIFORM1I64VNVPROC glProgramUniform1i64vNV;
PFNGLPROGRAMUNIFORM1IEXTPROC glProgramUniform1iEXT;
PFNGLPROGRAMUNIFORM1IPROC glProgramUniform1i;
PFNGLPROGRAMUNIFORM1IVEXTPROC glProgramUniform1ivEXT;
PFNGLPROGRAMUNIFORM1IVPROC glProgramUniform1iv;
PFNGLPROGRAMUNIFORM1UI64ARBPROC glProgramUniform1ui64ARB;
PFNGLPROGRAMUNIFORM1UI64NVPROC glProgramUniform1ui64NV;
PFNGLPROGRAMUNIFORM1UI64VARBPROC glProgramUniform1ui64vARB;
PFNGLPROGRAMUNIFORM1UI64VNVPROC glProgramUniform1ui64vNV;
PFNGLPROGRAMUNIFORM1UIEXTPROC glProgramUniform1uiEXT;
PFNGLPROGRAMUNIFORM1UIPROC glProgramUniform1ui;
PFNGLPROGRAMUNIFORM1UIVEXTPROC glProgramUniform1uivEXT;
PFNGLPROGRAMUNIFORM1UIVPROC glProgramUniform1uiv;
PFNGLPROGRAMUNIFORM2DEXTPROC glProgramUniform2dEXT;
PFNGLPROGRAMUNIFORM2DPROC glProgramUniform2d;
PFNGLPROGRAMUNIFORM2DVEXTPROC glProgramUniform2dvEXT;
PFNGLPROGRAMUNIFORM2DVPROC glProgramUniform2dv;
PFNGLPROGRAMUNIFORM2FEXTPROC glProgramUniform2fEXT;
PFNGLPROGRAMUNIFORM2FPROC glProgramUniform2f;
PFNGLPROGRAMUNIFORM2FVEXTPROC glProgramUniform2fvEXT;
PFNGLPROGRAMUNIFORM2FVPROC glProgramUniform2fv;
PFNGLPROGRAMUNIFORM2I64ARBPROC glProgramUniform2i64ARB;
PFNGLPROGRAMUNIFORM2I64NVPROC glProgramUniform2i64NV;
PFNGLPROGRAMUNIFORM2I64VARBPROC glProgramUniform2i64vARB;
PFNGLPROGRAMUNIFORM2I64VNVPROC glProgramUniform2i64vNV;
PFNGLPROGRAMUNIFORM2IEXTPROC glProgramUniform2iEXT;
PFNGLPROGRAMUNIFORM2IPROC glProgramUniform2i;
PFNGLPROGRAMUNIFORM2IVEXTPROC glProgramUniform2ivEXT;
PFNGLPROGRAMUNIFORM2IVPROC glProgramUniform2iv;
PFNGLPROGRAMUNIFORM2UI64ARBPROC glProgramUniform2ui64ARB;
PFNGLPROGRAMUNIFORM2UI64NVPROC glProgramUniform2ui64NV;
PFNGLPROGRAMUNIFORM2UI64VARBPROC glProgramUniform2ui64vARB;
PFNGLPROGRAMUNIFORM2UI64VNVPROC glProgramUniform2ui64vNV;
PFNGLPROGRAMUNIFORM2UIEXTPROC glProgramUniform2uiEXT;
PFNGLPROGRAMUNIFORM2UIPROC glProgramUniform2ui;
PFNGLPROGRAMUNIFORM2UIVEXTPROC glProgramUniform2uivEXT;
PFNGLPROGRAMUNIFORM2UIVPROC glProgramUniform2uiv;
PFNGLPROGRAMUNIFORM3DEXTPROC glProgramUniform3dEXT;
PFNGLPROGRAMUNIFORM3DPROC glProgramUniform3d;
PFNGLPROGRAMUNIFORM3DVEXTPROC glProgramUniform3dvEXT;
PFNGLPROGRAMUNIFORM3DVPROC glProgramUniform3dv;
PFNGLPROGRAMUNIFORM3FEXTPROC glProgramUniform3fEXT;
PFNGLPROGRAMUNIFORM3FPROC glProgramUniform3f;
PFNGLPROGRAMUNIFORM3FVEXTPROC glProgramUniform3fvEXT;
PFNGLPROGRAMUNIFORM3FVPROC glProgramUniform3fv;
PFNGLPROGRAMUNIFORM3I64ARBPROC glProgramUniform3i64ARB;
PFNGLPROGRAMUNIFORM3I64NVPROC glProgramUniform3i64NV;
PFNGLPROGRAMUNIFORM3I64VARBPROC glProgramUniform3i64vARB;
PFNGLPROGRAMUNIFORM3I64VNVPROC glProgramUniform3i64vNV;
PFNGLPROGRAMUNIFORM3IEXTPROC glProgramUniform3iEXT;
PFNGLPROGRAMUNIFORM3IPROC glProgramUniform3i;
PFNGLPROGRAMUNIFORM3IVEXTPROC glProgramUniform3ivEXT;
PFNGLPROGRAMUNIFORM3IVPROC glProgramUniform3iv;
PFNGLPROGRAMUNIFORM3UI64ARBPROC glProgramUniform3ui64ARB;
PFNGLPROGRAMUNIFORM3UI64NVPROC glProgramUniform3ui64NV;
PFNGLPROGRAMUNIFORM3UI64VARBPROC glProgramUniform3ui64vARB;
PFNGLPROGRAMUNIFORM3UI64VNVPROC glProgramUniform3ui64vNV;
PFNGLPROGRAMUNIFORM3UIEXTPROC glProgramUniform3uiEXT;
PFNGLPROGRAMUNIFORM3UIPROC glProgramUniform3ui;
PFNGLPROGRAMUNIFORM3UIVEXTPROC glProgramUniform3uivEXT;
PFNGLPROGRAMUNIFORM3UIVPROC glProgramUniform3uiv;
PFNGLPROGRAMUNIFORM4DEXTPROC glProgramUniform4dEXT;
PFNGLPROGRAMUNIFORM4DPROC glProgramUniform4d;
PFNGLPROGRAMUNIFORM4DVEXTPROC glProgramUniform4dvEXT;
PFNGLPROGRAMUNIFORM4DVPROC glProgramUniform4dv;
PFNGLPROGRAMUNIFORM4FEXTPROC glProgramUniform4fEXT;
PFNGLPROGRAMUNIFORM4FPROC glProgramUniform4f;
PFNGLPROGRAMUNIFORM4FVEXTPROC glProgramUniform4fvEXT;
PFNGLPROGRAMUNIFORM4FVPROC glProgramUniform4fv;
PFNGLPROGRAMUNIFORM4I64ARBPROC glProgramUniform4i64ARB;
PFNGLPROGRAMUNIFORM4I64NVPROC glProgramUniform4i64NV;
PFNGLPROGRAMUNIFORM4I64VARBPROC glProgramUniform4i64vARB;
PFNGLPROGRAMUNIFORM4I64VNVPROC glProgramUniform4i64vNV;
PFNGLPROGRAMUNIFORM4IEXTPROC glProgramUniform4iEXT;
PFNGLPROGRAMUNIFORM4IPROC glProgramUniform4i;
PFNGLPROGRAMUNIFORM4IVEXTPROC glProgramUniform4ivEXT;
PFNGLPROGRAMUNIFORM4IVPROC glProgramUniform4iv;
PFNGLPROGRAMUNIFORM4UI64ARBPROC glProgramUniform4ui64ARB;
PFNGLPROGRAMUNIFORM4UI64NVPROC glProgramUniform4ui64NV;
PFNGLPROGRAMUNIFORM4UI64VARBPROC glProgramUniform4ui64vARB;
PFNGLPROGRAMUNIFORM4UI64VNVPROC glProgramUniform4ui64vNV;
PFNGLPROGRAMUNIFORM4UIEXTPROC glProgramUniform4uiEXT;
PFNGLPROGRAMUNIFORM4UIPROC glProgramUniform4ui;
PFNGLPROGRAMUNIFORM4UIVEXTPROC glProgramUniform4uivEXT;
PFNGLPROGRAMUNIFORM4UIVPROC glProgramUniform4uiv;
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC glProgramUniformHandleui64ARB;
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC glProgramUniformHandleui64NV;
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC glProgramUniformHandleui64vARB;
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC glProgramUniformHandleui64vNV;
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glProgramUniformMatrix2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC glProgramUniformMatrix2dv;
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glProgramUniformMatrix2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC glProgramUniformMatrix2fv;
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glProgramUniformMatrix2x3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glProgramUniformMatrix2x3dv;
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glProgramUniformMatrix2x3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glProgramUniformMatrix2x3fv;
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glProgramUniformMatrix2x4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glProgramUniformMatrix2x4dv;
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glProgramUniformMatrix2x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glProgramUniformMatrix2x4fv;
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glProgramUniformMatrix3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC glProgramUniformMatrix3dv;
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glProgramUniformMatrix3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC glProgramUniformMatrix3fv;
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glProgramUniformMatrix3x2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glProgramUniformMatrix3x2dv;
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glProgramUniformMatrix3x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glProgramUniformMatrix3x2fv;
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glProgramUniformMatrix3x4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glProgramUniformMatrix3x4dv;
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glProgramUniformMatrix3x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glProgramUniformMatrix3x4fv;
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glProgramUniformMatrix4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC glProgramUniformMatrix4dv;
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glProgramUniformMatrix4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC glProgramUniformMatrix4fv;
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glProgramUniformMatrix4x2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glProgramUniformMatrix4x2dv;
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glProgramUniformMatrix4x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glProgramUniformMatrix4x2fv;
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glProgramUniformMatrix4x3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glProgramUniformMatrix4x3dv;
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glProgramUniformMatrix4x3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glProgramUniformMatrix4x3fv;
PFNGLPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
PFNGLPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
PFNGLPROGRAMVERTEXLIMITNVPROC glProgramVertexLimitNV;
PFNGLPROVOKINGVERTEXEXTPROC glProvokingVertexEXT;
PFNGLPROVOKINGVERTEXPROC glProvokingVertex;
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glPushClientAttribDefaultEXT;
PFNGLPUSHDEBUGGROUPPROC glPushDebugGroup;
PFNGLPUSHGROUPMARKEREXTPROC glPushGroupMarkerEXT;
PFNGLQUERYCOUNTERPROC glQueryCounter;
PFNGLQUERYMATRIXXOESPROC glQueryMatrixxOES;
PFNGLQUERYOBJECTPARAMETERUIAMDPROC glQueryObjectParameteruiAMD;
PFNGLRASTERPOS2XOESPROC glRasterPos2xOES;
PFNGLRASTERPOS2XVOESPROC glRasterPos2xvOES;
PFNGLRASTERPOS3XOESPROC glRasterPos3xOES;
PFNGLRASTERPOS3XVOESPROC glRasterPos3xvOES;
PFNGLRASTERPOS4XOESPROC glRasterPos4xOES;
PFNGLRASTERPOS4XVOESPROC glRasterPos4xvOES;
PFNGLRASTERSAMPLESEXTPROC glRasterSamplesEXT;
PFNGLREADINSTRUMENTSSGIXPROC glReadInstrumentsSGIX;
PFNGLREADNPIXELSARBPROC glReadnPixelsARB;
PFNGLREADNPIXELSPROC glReadnPixels;
PFNGLRECTXOESPROC glRectxOES;
PFNGLRECTXVOESPROC glRectxvOES;
PFNGLREFERENCEPLANESGIXPROC glReferencePlaneSGIX;
PFNGLRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
PFNGLRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC glRenderbufferStorageMultisampleCoverageNV;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glRenderbufferStorageMultisampleEXT;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
PFNGLRENDERGPUMASKNVPROC glRenderGpuMaskNV;
PFNGLREPLACEMENTCODEPOINTERSUNPROC glReplacementCodePointerSUN;
PFNGLREPLACEMENTCODEUBSUNPROC glReplacementCodeubSUN;
PFNGLREPLACEMENTCODEUBVSUNPROC glReplacementCodeubvSUN;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC glReplacementCodeuiColor3fVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC glReplacementCodeuiColor3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC glReplacementCodeuiColor4ubVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC glReplacementCodeuiColor4ubVertex3fvSUN;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC glReplacementCodeuiNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUISUNPROC glReplacementCodeuiSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fVertex3fvSUN;
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC glReplacementCodeuiVertex3fSUN;
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC glReplacementCodeuiVertex3fvSUN;
PFNGLREPLACEMENTCODEUIVSUNPROC glReplacementCodeuivSUN;
PFNGLREPLACEMENTCODEUSSUNPROC glReplacementCodeusSUN;
PFNGLREPLACEMENTCODEUSVSUNPROC glReplacementCodeusvSUN;
PFNGLREQUESTRESIDENTPROGRAMSNVPROC glRequestResidentProgramsNV;
PFNGLRESETHISTOGRAMEXTPROC glResetHistogramEXT;
PFNGLRESETHISTOGRAMPROC glResetHistogram;
PFNGLRESETMINMAXEXTPROC glResetMinmaxEXT;
PFNGLRESETMINMAXPROC glResetMinmax;
PFNGLRESIZEBUFFERSMESAPROC glResizeBuffersMESA;
PFNGLRESOLVEDEPTHVALUESNVPROC glResolveDepthValuesNV;
PFNGLRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
PFNGLRESUMETRANSFORMFEEDBACKPROC glResumeTransformFeedback;
PFNGLROTATEXOESPROC glRotatexOES;
PFNGLSAMPLECOVERAGEARBPROC glSampleCoverageARB;
PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
PFNGLSAMPLEMAPATIPROC glSampleMapATI;
PFNGLSAMPLEMASKEXTPROC glSampleMaskEXT;
PFNGLSAMPLEMASKINDEXEDNVPROC glSampleMaskIndexedNV;
PFNGLSAMPLEMASKIPROC glSampleMaski;
PFNGLSAMPLEMASKSGISPROC glSampleMaskSGIS;
PFNGLSAMPLEPATTERNEXTPROC glSamplePatternEXT;
PFNGLSAMPLEPATTERNSGISPROC glSamplePatternSGIS;
PFNGLSAMPLERPARAMETERFPROC glSamplerParameterf;
PFNGLSAMPLERPARAMETERFVPROC glSamplerParameterfv;
PFNGLSAMPLERPARAMETERIIVPROC glSamplerParameterIiv;
PFNGLSAMPLERPARAMETERIPROC glSamplerParameteri;
PFNGLSAMPLERPARAMETERIUIVPROC glSamplerParameterIuiv;
PFNGLSAMPLERPARAMETERIVPROC glSamplerParameteriv;
PFNGLSCALEXOESPROC glScalexOES;
PFNGLSCISSORARRAYVPROC glScissorArrayv;
PFNGLSCISSORINDEXEDPROC glScissorIndexed;
PFNGLSCISSORINDEXEDVPROC glScissorIndexedv;
PFNGLSECONDARYCOLOR3BEXTPROC glSecondaryColor3bEXT;
PFNGLSECONDARYCOLOR3BPROC glSecondaryColor3b;
PFNGLSECONDARYCOLOR3BVEXTPROC glSecondaryColor3bvEXT;
PFNGLSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
PFNGLSECONDARYCOLOR3DEXTPROC glSecondaryColor3dEXT;
PFNGLSECONDARYCOLOR3DPROC glSecondaryColor3d;
PFNGLSECONDARYCOLOR3DVEXTPROC glSecondaryColor3dvEXT;
PFNGLSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
PFNGLSECONDARYCOLOR3FEXTPROC glSecondaryColor3fEXT;
PFNGLSECONDARYCOLOR3FPROC glSecondaryColor3f;
PFNGLSECONDARYCOLOR3FVEXTPROC glSecondaryColor3fvEXT;
PFNGLSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
PFNGLSECONDARYCOLOR3HNVPROC glSecondaryColor3hNV;
PFNGLSECONDARYCOLOR3HVNVPROC glSecondaryColor3hvNV;
PFNGLSECONDARYCOLOR3IEXTPROC glSecondaryColor3iEXT;
PFNGLSECONDARYCOLOR3IPROC glSecondaryColor3i;
PFNGLSECONDARYCOLOR3IVEXTPROC glSecondaryColor3ivEXT;
PFNGLSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
PFNGLSECONDARYCOLOR3SEXTPROC glSecondaryColor3sEXT;
PFNGLSECONDARYCOLOR3SPROC glSecondaryColor3s;
PFNGLSECONDARYCOLOR3SVEXTPROC glSecondaryColor3svEXT;
PFNGLSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
PFNGLSECONDARYCOLOR3UBEXTPROC glSecondaryColor3ubEXT;
PFNGLSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
PFNGLSECONDARYCOLOR3UBVEXTPROC glSecondaryColor3ubvEXT;
PFNGLSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
PFNGLSECONDARYCOLOR3UIEXTPROC glSecondaryColor3uiEXT;
PFNGLSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
PFNGLSECONDARYCOLOR3UIVEXTPROC glSecondaryColor3uivEXT;
PFNGLSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
PFNGLSECONDARYCOLOR3USEXTPROC glSecondaryColor3usEXT;
PFNGLSECONDARYCOLOR3USPROC glSecondaryColor3us;
PFNGLSECONDARYCOLOR3USVEXTPROC glSecondaryColor3usvEXT;
PFNGLSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
PFNGLSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
PFNGLSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
PFNGLSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
PFNGLSECONDARYCOLORPOINTEREXTPROC glSecondaryColorPointerEXT;
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
PFNGLSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
PFNGLSEPARABLEFILTER2DEXTPROC glSeparableFilter2DEXT;
PFNGLSEPARABLEFILTER2DPROC glSeparableFilter2D;
PFNGLSETFENCEAPPLEPROC glSetFenceAPPLE;
PFNGLSETFENCENVPROC glSetFenceNV;
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC glSetFragmentShaderConstantATI;
PFNGLSETINVARIANTEXTPROC glSetInvariantEXT;
PFNGLSETLOCALCONSTANTEXTPROC glSetLocalConstantEXT;
PFNGLSETMULTISAMPLEFVAMDPROC glSetMultisamplefvAMD;
PFNGLSHADERBINARYPROC glShaderBinary;
PFNGLSHADEROP1EXTPROC glShaderOp1EXT;
PFNGLSHADEROP2EXTPROC glShaderOp2EXT;
PFNGLSHADEROP3EXTPROC glShaderOp3EXT;
PFNGLSHADERSOURCEARBPROC glShaderSourceARB;
PFNGLSHADERSOURCEPROC glShaderSource;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC glShaderStorageBlockBinding;
PFNGLSHARPENTEXFUNCSGISPROC glSharpenTexFuncSGIS;
PFNGLSIGNALVKFENCENVPROC glSignalVkFenceNV;
PFNGLSIGNALVKSEMAPHORENVPROC glSignalVkSemaphoreNV;
PFNGLSPECIALIZESHADERARBPROC glSpecializeShaderARB;
PFNGLSPRITEPARAMETERFSGIXPROC glSpriteParameterfSGIX;
PFNGLSPRITEPARAMETERFVSGIXPROC glSpriteParameterfvSGIX;
PFNGLSPRITEPARAMETERISGIXPROC glSpriteParameteriSGIX;
PFNGLSPRITEPARAMETERIVSGIXPROC glSpriteParameterivSGIX;
PFNGLSTARTINSTRUMENTSSGIXPROC glStartInstrumentsSGIX;
PFNGLSTATECAPTURENVPROC glStateCaptureNV;
PFNGLSTENCILCLEARTAGEXTPROC glStencilClearTagEXT;
PFNGLSTENCILFILLPATHINSTANCEDNVPROC glStencilFillPathInstancedNV;
PFNGLSTENCILFILLPATHNVPROC glStencilFillPathNV;
PFNGLSTENCILFUNCSEPARATEATIPROC glStencilFuncSeparateATI;
PFNGLSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
PFNGLSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
PFNGLSTENCILOPSEPARATEATIPROC glStencilOpSeparateATI;
PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate;
PFNGLSTENCILOPVALUEAMDPROC glStencilOpValueAMD;
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC glStencilStrokePathInstancedNV;
PFNGLSTENCILSTROKEPATHNVPROC glStencilStrokePathNV;
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC glStencilThenCoverFillPathInstancedNV;
PFNGLSTENCILTHENCOVERFILLPATHNVPROC glStencilThenCoverFillPathNV;
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC glStencilThenCoverStrokePathInstancedNV;
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC glStencilThenCoverStrokePathNV;
PFNGLSTOPINSTRUMENTSSGIXPROC glStopInstrumentsSGIX;
PFNGLSTRINGMARKERGREMEDYPROC glStringMarkerGREMEDY;
PFNGLSUBPIXELPRECISIONBIASNVPROC glSubpixelPrecisionBiasNV;
PFNGLSWIZZLEEXTPROC glSwizzleEXT;
PFNGLSYNCTEXTUREINTELPROC glSyncTextureINTEL;
PFNGLTAGSAMPLEBUFFERSGIXPROC glTagSampleBufferSGIX;
PFNGLTANGENT3BEXTPROC glTangent3bEXT;
PFNGLTANGENT3BVEXTPROC glTangent3bvEXT;
PFNGLTANGENT3DEXTPROC glTangent3dEXT;
PFNGLTANGENT3DVEXTPROC glTangent3dvEXT;
PFNGLTANGENT3FEXTPROC glTangent3fEXT;
PFNGLTANGENT3FVEXTPROC glTangent3fvEXT;
PFNGLTANGENT3IEXTPROC glTangent3iEXT;
PFNGLTANGENT3IVEXTPROC glTangent3ivEXT;
PFNGLTANGENT3SEXTPROC glTangent3sEXT;
PFNGLTANGENT3SVEXTPROC glTangent3svEXT;
PFNGLTANGENTPOINTEREXTPROC glTangentPointerEXT;
PFNGLTBUFFERMASK3DFXPROC glTbufferMask3DFX;
PFNGLTESSELLATIONFACTORAMDPROC glTessellationFactorAMD;
PFNGLTESSELLATIONMODEAMDPROC glTessellationModeAMD;
PFNGLTESTFENCEAPPLEPROC glTestFenceAPPLE;
PFNGLTESTFENCENVPROC glTestFenceNV;
PFNGLTESTOBJECTAPPLEPROC glTestObjectAPPLE;
PFNGLTEXBUFFERARBPROC glTexBufferARB;
PFNGLTEXBUFFEREXTPROC glTexBufferEXT;
PFNGLTEXBUFFERPROC glTexBuffer;
PFNGLTEXBUFFERRANGEPROC glTexBufferRange;
PFNGLTEXBUMPPARAMETERFVATIPROC glTexBumpParameterfvATI;
PFNGLTEXBUMPPARAMETERIVATIPROC glTexBumpParameterivATI;
PFNGLTEXCOORD1BOESPROC glTexCoord1bOES;
PFNGLTEXCOORD1BVOESPROC glTexCoord1bvOES;
PFNGLTEXCOORD1HNVPROC glTexCoord1hNV;
PFNGLTEXCOORD1HVNVPROC glTexCoord1hvNV;
PFNGLTEXCOORD1XOESPROC glTexCoord1xOES;
PFNGLTEXCOORD1XVOESPROC glTexCoord1xvOES;
PFNGLTEXCOORD2BOESPROC glTexCoord2bOES;
PFNGLTEXCOORD2BVOESPROC glTexCoord2bvOES;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC glTexCoord2fColor3fVertex3fSUN;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC glTexCoord2fColor3fVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glTexCoord2fColor4fNormal3fVertex3fSUN;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fColor4fNormal3fVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC glTexCoord2fColor4ubVertex3fSUN;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC glTexCoord2fColor4ubVertex3fvSUN;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC glTexCoord2fNormal3fVertex3fSUN;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fNormal3fVertex3fvSUN;
PFNGLTEXCOORD2FVERTEX3FSUNPROC glTexCoord2fVertex3fSUN;
PFNGLTEXCOORD2FVERTEX3FVSUNPROC glTexCoord2fVertex3fvSUN;
PFNGLTEXCOORD2HNVPROC glTexCoord2hNV;
PFNGLTEXCOORD2HVNVPROC glTexCoord2hvNV;
PFNGLTEXCOORD2XOESPROC glTexCoord2xOES;
PFNGLTEXCOORD2XVOESPROC glTexCoord2xvOES;
PFNGLTEXCOORD3BOESPROC glTexCoord3bOES;
PFNGLTEXCOORD3BVOESPROC glTexCoord3bvOES;
PFNGLTEXCOORD3HNVPROC glTexCoord3hNV;
PFNGLTEXCOORD3HVNVPROC glTexCoord3hvNV;
PFNGLTEXCOORD3XOESPROC glTexCoord3xOES;
PFNGLTEXCOORD3XVOESPROC glTexCoord3xvOES;
PFNGLTEXCOORD4BOESPROC glTexCoord4bOES;
PFNGLTEXCOORD4BVOESPROC glTexCoord4bvOES;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC glTexCoord4fColor4fNormal3fVertex4fSUN;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC glTexCoord4fColor4fNormal3fVertex4fvSUN;
PFNGLTEXCOORD4FVERTEX4FSUNPROC glTexCoord4fVertex4fSUN;
PFNGLTEXCOORD4FVERTEX4FVSUNPROC glTexCoord4fVertex4fvSUN;
PFNGLTEXCOORD4HNVPROC glTexCoord4hNV;
PFNGLTEXCOORD4HVNVPROC glTexCoord4hvNV;
PFNGLTEXCOORD4XOESPROC glTexCoord4xOES;
PFNGLTEXCOORD4XVOESPROC glTexCoord4xvOES;
PFNGLTEXCOORDFORMATNVPROC glTexCoordFormatNV;
PFNGLTEXCOORDP1UIPROC glTexCoordP1ui;
PFNGLTEXCOORDP1UIVPROC glTexCoordP1uiv;
PFNGLTEXCOORDP2UIPROC glTexCoordP2ui;
PFNGLTEXCOORDP2UIVPROC glTexCoordP2uiv;
PFNGLTEXCOORDP3UIPROC glTexCoordP3ui;
PFNGLTEXCOORDP3UIVPROC glTexCoordP3uiv;
PFNGLTEXCOORDP4UIPROC glTexCoordP4ui;
PFNGLTEXCOORDP4UIVPROC glTexCoordP4uiv;
PFNGLTEXCOORDPOINTEREXTPROC glTexCoordPointerEXT;
PFNGLTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
PFNGLTEXCOORDPOINTERVINTELPROC glTexCoordPointervINTEL;
PFNGLTEXENVXOESPROC glTexEnvxOES;
PFNGLTEXENVXVOESPROC glTexEnvxvOES;
PFNGLTEXFILTERFUNCSGISPROC glTexFilterFuncSGIS;
PFNGLTEXGENXOESPROC glTexGenxOES;
PFNGLTEXGENXVOESPROC glTexGenxvOES;
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC glTexImage2DMultisampleCoverageNV;
PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
PFNGLTEXIMAGE3DEXTPROC glTexImage3DEXT;
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC glTexImage3DMultisampleCoverageNV;
PFNGLTEXIMAGE3DMULTISAMPLEPROC glTexImage3DMultisample;
PFNGLTEXIMAGE3DPROC glTexImage3D;
PFNGLTEXIMAGE4DSGISPROC glTexImage4DSGIS;
PFNGLTEXPAGECOMMITMENTARBPROC glTexPageCommitmentARB;
PFNGLTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
PFNGLTEXPARAMETERIIVPROC glTexParameterIiv;
PFNGLTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
PFNGLTEXPARAMETERIUIVPROC glTexParameterIuiv;
PFNGLTEXPARAMETERXOESPROC glTexParameterxOES;
PFNGLTEXPARAMETERXVOESPROC glTexParameterxvOES;
PFNGLTEXRENDERBUFFERNVPROC glTexRenderbufferNV;
PFNGLTEXSTORAGE1DPROC glTexStorage1D;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC glTexStorage2DMultisample;
PFNGLTEXSTORAGE2DPROC glTexStorage2D;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC glTexStorage3DMultisample;
PFNGLTEXSTORAGE3DPROC glTexStorage3D;
PFNGLTEXSTORAGESPARSEAMDPROC glTexStorageSparseAMD;
PFNGLTEXSUBIMAGE1DEXTPROC glTexSubImage1DEXT;
PFNGLTEXSUBIMAGE2DEXTPROC glTexSubImage2DEXT;
PFNGLTEXSUBIMAGE3DEXTPROC glTexSubImage3DEXT;
PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
PFNGLTEXSUBIMAGE4DSGISPROC glTexSubImage4DSGIS;
PFNGLTEXTUREBARRIERNVPROC glTextureBarrierNV;
PFNGLTEXTUREBARRIERPROC glTextureBarrier;
PFNGLTEXTUREBUFFEREXTPROC glTextureBufferEXT;
PFNGLTEXTUREBUFFERPROC glTextureBuffer;
PFNGLTEXTUREBUFFERRANGEEXTPROC glTextureBufferRangeEXT;
PFNGLTEXTUREBUFFERRANGEPROC glTextureBufferRange;
PFNGLTEXTURECOLORMASKSGISPROC glTextureColorMaskSGIS;
PFNGLTEXTUREIMAGE1DEXTPROC glTextureImage1DEXT;
PFNGLTEXTUREIMAGE2DEXTPROC glTextureImage2DEXT;
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC glTextureImage2DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC glTextureImage2DMultisampleNV;
PFNGLTEXTUREIMAGE3DEXTPROC glTextureImage3DEXT;
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC glTextureImage3DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC glTextureImage3DMultisampleNV;
PFNGLTEXTURELIGHTEXTPROC glTextureLightEXT;
PFNGLTEXTUREMATERIALEXTPROC glTextureMaterialEXT;
PFNGLTEXTURENORMALEXTPROC glTextureNormalEXT;
PFNGLTEXTUREPAGECOMMITMENTEXTPROC glTexturePageCommitmentEXT;
PFNGLTEXTUREPARAMETERFEXTPROC glTextureParameterfEXT;
PFNGLTEXTUREPARAMETERFPROC glTextureParameterf;
PFNGLTEXTUREPARAMETERFVEXTPROC glTextureParameterfvEXT;
PFNGLTEXTUREPARAMETERFVPROC glTextureParameterfv;
PFNGLTEXTUREPARAMETERIEXTPROC glTextureParameteriEXT;
PFNGLTEXTUREPARAMETERIIVEXTPROC glTextureParameterIivEXT;
PFNGLTEXTUREPARAMETERIIVPROC glTextureParameterIiv;
PFNGLTEXTUREPARAMETERIPROC glTextureParameteri;
PFNGLTEXTUREPARAMETERIUIVEXTPROC glTextureParameterIuivEXT;
PFNGLTEXTUREPARAMETERIUIVPROC glTextureParameterIuiv;
PFNGLTEXTUREPARAMETERIVEXTPROC glTextureParameterivEXT;
PFNGLTEXTUREPARAMETERIVPROC glTextureParameteriv;
PFNGLTEXTURERANGEAPPLEPROC glTextureRangeAPPLE;
PFNGLTEXTURERENDERBUFFEREXTPROC glTextureRenderbufferEXT;
PFNGLTEXTURESTORAGE1DEXTPROC glTextureStorage1DEXT;
PFNGLTEXTURESTORAGE1DPROC glTextureStorage1D;
PFNGLTEXTURESTORAGE2DEXTPROC glTextureStorage2DEXT;
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC glTextureStorage2DMultisampleEXT;
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glTextureStorage2DMultisample;
PFNGLTEXTURESTORAGE2DPROC glTextureStorage2D;
PFNGLTEXTURESTORAGE3DEXTPROC glTextureStorage3DEXT;
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC glTextureStorage3DMultisampleEXT;
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glTextureStorage3DMultisample;
PFNGLTEXTURESTORAGE3DPROC glTextureStorage3D;
PFNGLTEXTURESTORAGESPARSEAMDPROC glTextureStorageSparseAMD;
PFNGLTEXTURESUBIMAGE1DEXTPROC glTextureSubImage1DEXT;
PFNGLTEXTURESUBIMAGE1DPROC glTextureSubImage1D;
PFNGLTEXTURESUBIMAGE2DEXTPROC glTextureSubImage2DEXT;
PFNGLTEXTURESUBIMAGE2DPROC glTextureSubImage2D;
PFNGLTEXTURESUBIMAGE3DEXTPROC glTextureSubImage3DEXT;
PFNGLTEXTURESUBIMAGE3DPROC glTextureSubImage3D;
PFNGLTEXTUREVIEWPROC glTextureView;
PFNGLTRACKMATRIXNVPROC glTrackMatrixNV;
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glTransformFeedbackBufferBase;
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glTransformFeedbackBufferRange;
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC glTransformFeedbackVaryingsEXT;
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC glTransformFeedbackVaryings;
PFNGLTRANSFORMPATHNVPROC glTransformPathNV;
PFNGLTRANSLATEXOESPROC glTranslatexOES;
PFNGLUNIFORM1DPROC glUniform1d;
PFNGLUNIFORM1DVPROC glUniform1dv;
PFNGLUNIFORM1FARBPROC glUniform1fARB;
PFNGLUNIFORM1FPROC glUniform1f;
PFNGLUNIFORM1FVARBPROC glUniform1fvARB;
PFNGLUNIFORM1FVPROC glUniform1fv;
PFNGLUNIFORM1I64ARBPROC glUniform1i64ARB;
PFNGLUNIFORM1I64NVPROC glUniform1i64NV;
PFNGLUNIFORM1I64VARBPROC glUniform1i64vARB;
PFNGLUNIFORM1I64VNVPROC glUniform1i64vNV;
PFNGLUNIFORM1IARBPROC glUniform1iARB;
PFNGLUNIFORM1IPROC glUniform1i;
PFNGLUNIFORM1IVARBPROC glUniform1ivARB;
PFNGLUNIFORM1IVPROC glUniform1iv;
PFNGLUNIFORM1UI64ARBPROC glUniform1ui64ARB;
PFNGLUNIFORM1UI64NVPROC glUniform1ui64NV;
PFNGLUNIFORM1UI64VARBPROC glUniform1ui64vARB;
PFNGLUNIFORM1UI64VNVPROC glUniform1ui64vNV;
PFNGLUNIFORM1UIEXTPROC glUniform1uiEXT;
PFNGLUNIFORM1UIPROC glUniform1ui;
PFNGLUNIFORM1UIVEXTPROC glUniform1uivEXT;
PFNGLUNIFORM1UIVPROC glUniform1uiv;
PFNGLUNIFORM2DPROC glUniform2d;
PFNGLUNIFORM2DVPROC glUniform2dv;
PFNGLUNIFORM2FARBPROC glUniform2fARB;
PFNGLUNIFORM2FPROC glUniform2f;
PFNGLUNIFORM2FVARBPROC glUniform2fvARB;
PFNGLUNIFORM2FVPROC glUniform2fv;
PFNGLUNIFORM2I64ARBPROC glUniform2i64ARB;
PFNGLUNIFORM2I64NVPROC glUniform2i64NV;
PFNGLUNIFORM2I64VARBPROC glUniform2i64vARB;
PFNGLUNIFORM2I64VNVPROC glUniform2i64vNV;
PFNGLUNIFORM2IARBPROC glUniform2iARB;
PFNGLUNIFORM2IPROC glUniform2i;
PFNGLUNIFORM2IVARBPROC glUniform2ivARB;
PFNGLUNIFORM2IVPROC glUniform2iv;
PFNGLUNIFORM2UI64ARBPROC glUniform2ui64ARB;
PFNGLUNIFORM2UI64NVPROC glUniform2ui64NV;
PFNGLUNIFORM2UI64VARBPROC glUniform2ui64vARB;
PFNGLUNIFORM2UI64VNVPROC glUniform2ui64vNV;
PFNGLUNIFORM2UIEXTPROC glUniform2uiEXT;
PFNGLUNIFORM2UIPROC glUniform2ui;
PFNGLUNIFORM2UIVEXTPROC glUniform2uivEXT;
PFNGLUNIFORM2UIVPROC glUniform2uiv;
PFNGLUNIFORM3DPROC glUniform3d;
PFNGLUNIFORM3DVPROC glUniform3dv;
PFNGLUNIFORM3FARBPROC glUniform3fARB;
PFNGLUNIFORM3FPROC glUniform3f;
PFNGLUNIFORM3FVARBPROC glUniform3fvARB;
PFNGLUNIFORM3FVPROC glUniform3fv;
PFNGLUNIFORM3I64ARBPROC glUniform3i64ARB;
PFNGLUNIFORM3I64NVPROC glUniform3i64NV;
PFNGLUNIFORM3I64VARBPROC glUniform3i64vARB;
PFNGLUNIFORM3I64VNVPROC glUniform3i64vNV;
PFNGLUNIFORM3IARBPROC glUniform3iARB;
PFNGLUNIFORM3IPROC glUniform3i;
PFNGLUNIFORM3IVARBPROC glUniform3ivARB;
PFNGLUNIFORM3IVPROC glUniform3iv;
PFNGLUNIFORM3UI64ARBPROC glUniform3ui64ARB;
PFNGLUNIFORM3UI64NVPROC glUniform3ui64NV;
PFNGLUNIFORM3UI64VARBPROC glUniform3ui64vARB;
PFNGLUNIFORM3UI64VNVPROC glUniform3ui64vNV;
PFNGLUNIFORM3UIEXTPROC glUniform3uiEXT;
PFNGLUNIFORM3UIPROC glUniform3ui;
PFNGLUNIFORM3UIVEXTPROC glUniform3uivEXT;
PFNGLUNIFORM3UIVPROC glUniform3uiv;
PFNGLUNIFORM4DPROC glUniform4d;
PFNGLUNIFORM4DVPROC glUniform4dv;
PFNGLUNIFORM4FARBPROC glUniform4fARB;
PFNGLUNIFORM4FPROC glUniform4f;
PFNGLUNIFORM4FVARBPROC glUniform4fvARB;
PFNGLUNIFORM4FVPROC glUniform4fv;
PFNGLUNIFORM4I64ARBPROC glUniform4i64ARB;
PFNGLUNIFORM4I64NVPROC glUniform4i64NV;
PFNGLUNIFORM4I64VARBPROC glUniform4i64vARB;
PFNGLUNIFORM4I64VNVPROC glUniform4i64vNV;
PFNGLUNIFORM4IARBPROC glUniform4iARB;
PFNGLUNIFORM4IPROC glUniform4i;
PFNGLUNIFORM4IVARBPROC glUniform4ivARB;
PFNGLUNIFORM4IVPROC glUniform4iv;
PFNGLUNIFORM4UI64ARBPROC glUniform4ui64ARB;
PFNGLUNIFORM4UI64NVPROC glUniform4ui64NV;
PFNGLUNIFORM4UI64VARBPROC glUniform4ui64vARB;
PFNGLUNIFORM4UI64VNVPROC glUniform4ui64vNV;
PFNGLUNIFORM4UIEXTPROC glUniform4uiEXT;
PFNGLUNIFORM4UIPROC glUniform4ui;
PFNGLUNIFORM4UIVEXTPROC glUniform4uivEXT;
PFNGLUNIFORM4UIVPROC glUniform4uiv;
PFNGLUNIFORMBLOCKBINDINGPROC glUniformBlockBinding;
PFNGLUNIFORMBUFFEREXTPROC glUniformBufferEXT;
PFNGLUNIFORMHANDLEUI64ARBPROC glUniformHandleui64ARB;
PFNGLUNIFORMHANDLEUI64NVPROC glUniformHandleui64NV;
PFNGLUNIFORMHANDLEUI64VARBPROC glUniformHandleui64vARB;
PFNGLUNIFORMHANDLEUI64VNVPROC glUniformHandleui64vNV;
PFNGLUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
PFNGLUNIFORMMATRIX2FVARBPROC glUniformMatrix2fvARB;
PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
PFNGLUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
PFNGLUNIFORMMATRIX2X3FVPROC glUniformMatrix2x3fv;
PFNGLUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
PFNGLUNIFORMMATRIX2X4FVPROC glUniformMatrix2x4fv;
PFNGLUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
PFNGLUNIFORMMATRIX3FVARBPROC glUniformMatrix3fvARB;
PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
PFNGLUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
PFNGLUNIFORMMATRIX3X2FVPROC glUniformMatrix3x2fv;
PFNGLUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
PFNGLUNIFORMMATRIX3X4FVPROC glUniformMatrix3x4fv;
PFNGLUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
PFNGLUNIFORMMATRIX4FVARBPROC glUniformMatrix4fvARB;
PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
PFNGLUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
PFNGLUNIFORMMATRIX4X2FVPROC glUniformMatrix4x2fv;
PFNGLUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
PFNGLUNIFORMMATRIX4X3FVPROC glUniformMatrix4x3fv;
PFNGLUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
PFNGLUNIFORMUI64NVPROC glUniformui64NV;
PFNGLUNIFORMUI64VNVPROC glUniformui64vNV;
PFNGLUNLOCKARRAYSEXTPROC glUnlockArraysEXT;
PFNGLUNMAPBUFFERARBPROC glUnmapBufferARB;
PFNGLUNMAPBUFFERPROC glUnmapBuffer;
PFNGLUNMAPNAMEDBUFFEREXTPROC glUnmapNamedBufferEXT;
PFNGLUNMAPNAMEDBUFFERPROC glUnmapNamedBuffer;
PFNGLUNMAPOBJECTBUFFERATIPROC glUnmapObjectBufferATI;
PFNGLUNMAPTEXTURE2DINTELPROC glUnmapTexture2DINTEL;
PFNGLUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
PFNGLUSEPROGRAMOBJECTARBPROC glUseProgramObjectARB;
PFNGLUSEPROGRAMPROC glUseProgram;
PFNGLUSEPROGRAMSTAGESPROC glUseProgramStages;
PFNGLUSESHADERPROGRAMEXTPROC glUseShaderProgramEXT;
PFNGLVALIDATEPROGRAMARBPROC glValidateProgramARB;
PFNGLVALIDATEPROGRAMPIPELINEPROC glValidateProgramPipeline;
PFNGLVALIDATEPROGRAMPROC glValidateProgram;
PFNGLVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
PFNGLVARIANTBVEXTPROC glVariantbvEXT;
PFNGLVARIANTDVEXTPROC glVariantdvEXT;
PFNGLVARIANTFVEXTPROC glVariantfvEXT;
PFNGLVARIANTIVEXTPROC glVariantivEXT;
PFNGLVARIANTPOINTEREXTPROC glVariantPointerEXT;
PFNGLVARIANTSVEXTPROC glVariantsvEXT;
PFNGLVARIANTUBVEXTPROC glVariantubvEXT;
PFNGLVARIANTUIVEXTPROC glVariantuivEXT;
PFNGLVARIANTUSVEXTPROC glVariantusvEXT;
PFNGLVDPAUFININVPROC glVDPAUFiniNV;
PFNGLVDPAUGETSURFACEIVNVPROC glVDPAUGetSurfaceivNV;
PFNGLVDPAUINITNVPROC glVDPAUInitNV;
PFNGLVDPAUISSURFACENVPROC glVDPAUIsSurfaceNV;
PFNGLVDPAUMAPSURFACESNVPROC glVDPAUMapSurfacesNV;
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC glVDPAURegisterOutputSurfaceNV;
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC glVDPAURegisterVideoSurfaceNV;
PFNGLVDPAUSURFACEACCESSNVPROC glVDPAUSurfaceAccessNV;
PFNGLVDPAUUNMAPSURFACESNVPROC glVDPAUUnmapSurfacesNV;
PFNGLVDPAUUNREGISTERSURFACENVPROC glVDPAUUnregisterSurfaceNV;
PFNGLVERTEX2BOESPROC glVertex2bOES;
PFNGLVERTEX2BVOESPROC glVertex2bvOES;
PFNGLVERTEX2HNVPROC glVertex2hNV;
PFNGLVERTEX2HVNVPROC glVertex2hvNV;
PFNGLVERTEX2XOESPROC glVertex2xOES;
PFNGLVERTEX2XVOESPROC glVertex2xvOES;
PFNGLVERTEX3BOESPROC glVertex3bOES;
PFNGLVERTEX3BVOESPROC glVertex3bvOES;
PFNGLVERTEX3HNVPROC glVertex3hNV;
PFNGLVERTEX3HVNVPROC glVertex3hvNV;
PFNGLVERTEX3XOESPROC glVertex3xOES;
PFNGLVERTEX3XVOESPROC glVertex3xvOES;
PFNGLVERTEX4BOESPROC glVertex4bOES;
PFNGLVERTEX4BVOESPROC glVertex4bvOES;
PFNGLVERTEX4HNVPROC glVertex4hNV;
PFNGLVERTEX4HVNVPROC glVertex4hvNV;
PFNGLVERTEX4XOESPROC glVertex4xOES;
PFNGLVERTEX4XVOESPROC glVertex4xvOES;
PFNGLVERTEXARRAYATTRIBBINDINGPROC glVertexArrayAttribBinding;
PFNGLVERTEXARRAYATTRIBFORMATPROC glVertexArrayAttribFormat;
PFNGLVERTEXARRAYATTRIBIFORMATPROC glVertexArrayAttribIFormat;
PFNGLVERTEXARRAYATTRIBLFORMATPROC glVertexArrayAttribLFormat;
PFNGLVERTEXARRAYBINDINGDIVISORPROC glVertexArrayBindingDivisor;
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC glVertexArrayColorOffsetEXT;
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC glVertexArrayEdgeFlagOffsetEXT;
PFNGLVERTEXARRAYELEMENTBUFFERPROC glVertexArrayElementBuffer;
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC glVertexArrayFogCoordOffsetEXT;
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC glVertexArrayIndexOffsetEXT;
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC glVertexArrayMultiTexCoordOffsetEXT;
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC glVertexArrayNormalOffsetEXT;
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC glVertexArrayParameteriAPPLE;
PFNGLVERTEXARRAYRANGEAPPLEPROC glVertexArrayRangeAPPLE;
PFNGLVERTEXARRAYRANGENVPROC glVertexArrayRangeNV;
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC glVertexArraySecondaryColorOffsetEXT;
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC glVertexArrayTexCoordOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC glVertexArrayVertexAttribDivisorEXT;
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC glVertexArrayVertexAttribIOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC glVertexArrayVertexAttribOffsetEXT;
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
PFNGLVERTEXARRAYVERTEXBUFFERPROC glVertexArrayVertexBuffer;
PFNGLVERTEXARRAYVERTEXBUFFERSPROC glVertexArrayVertexBuffers;
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC glVertexArrayVertexOffsetEXT;
PFNGLVERTEXATTRIB1DARBPROC glVertexAttrib1dARB;
PFNGLVERTEXATTRIB1DNVPROC glVertexAttrib1dNV;
PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d;
PFNGLVERTEXATTRIB1DVARBPROC glVertexAttrib1dvARB;
PFNGLVERTEXATTRIB1DVNVPROC glVertexAttrib1dvNV;
PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv;
PFNGLVERTEXATTRIB1FARBPROC glVertexAttrib1fARB;
PFNGLVERTEXATTRIB1FNVPROC glVertexAttrib1fNV;
PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
PFNGLVERTEXATTRIB1FVARBPROC glVertexAttrib1fvARB;
PFNGLVERTEXATTRIB1FVNVPROC glVertexAttrib1fvNV;
PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
PFNGLVERTEXATTRIB1HNVPROC glVertexAttrib1hNV;
PFNGLVERTEXATTRIB1HVNVPROC glVertexAttrib1hvNV;
PFNGLVERTEXATTRIB1SARBPROC glVertexAttrib1sARB;
PFNGLVERTEXATTRIB1SNVPROC glVertexAttrib1sNV;
PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s;
PFNGLVERTEXATTRIB1SVARBPROC glVertexAttrib1svARB;
PFNGLVERTEXATTRIB1SVNVPROC glVertexAttrib1svNV;
PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv;
PFNGLVERTEXATTRIB2DARBPROC glVertexAttrib2dARB;
PFNGLVERTEXATTRIB2DNVPROC glVertexAttrib2dNV;
PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d;
PFNGLVERTEXATTRIB2DVARBPROC glVertexAttrib2dvARB;
PFNGLVERTEXATTRIB2DVNVPROC glVertexAttrib2dvNV;
PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv;
PFNGLVERTEXATTRIB2FARBPROC glVertexAttrib2fARB;
PFNGLVERTEXATTRIB2FNVPROC glVertexAttrib2fNV;
PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
PFNGLVERTEXATTRIB2FVARBPROC glVertexAttrib2fvARB;
PFNGLVERTEXATTRIB2FVNVPROC glVertexAttrib2fvNV;
PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
PFNGLVERTEXATTRIB2HNVPROC glVertexAttrib2hNV;
PFNGLVERTEXATTRIB2HVNVPROC glVertexAttrib2hvNV;
PFNGLVERTEXATTRIB2SARBPROC glVertexAttrib2sARB;
PFNGLVERTEXATTRIB2SNVPROC glVertexAttrib2sNV;
PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s;
PFNGLVERTEXATTRIB2SVARBPROC glVertexAttrib2svARB;
PFNGLVERTEXATTRIB2SVNVPROC glVertexAttrib2svNV;
PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv;
PFNGLVERTEXATTRIB3DARBPROC glVertexAttrib3dARB;
PFNGLVERTEXATTRIB3DNVPROC glVertexAttrib3dNV;
PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d;
PFNGLVERTEXATTRIB3DVARBPROC glVertexAttrib3dvARB;
PFNGLVERTEXATTRIB3DVNVPROC glVertexAttrib3dvNV;
PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv;
PFNGLVERTEXATTRIB3FARBPROC glVertexAttrib3fARB;
PFNGLVERTEXATTRIB3FNVPROC glVertexAttrib3fNV;
PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
PFNGLVERTEXATTRIB3FVARBPROC glVertexAttrib3fvARB;
PFNGLVERTEXATTRIB3FVNVPROC glVertexAttrib3fvNV;
PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
PFNGLVERTEXATTRIB3HNVPROC glVertexAttrib3hNV;
PFNGLVERTEXATTRIB3HVNVPROC glVertexAttrib3hvNV;
PFNGLVERTEXATTRIB3SARBPROC glVertexAttrib3sARB;
PFNGLVERTEXATTRIB3SNVPROC glVertexAttrib3sNV;
PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s;
PFNGLVERTEXATTRIB3SVARBPROC glVertexAttrib3svARB;
PFNGLVERTEXATTRIB3SVNVPROC glVertexAttrib3svNV;
PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv;
PFNGLVERTEXATTRIB4BVARBPROC glVertexAttrib4bvARB;
PFNGLVERTEXATTRIB4BVPROC glVertexAttrib4bv;
PFNGLVERTEXATTRIB4DARBPROC glVertexAttrib4dARB;
PFNGLVERTEXATTRIB4DNVPROC glVertexAttrib4dNV;
PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d;
PFNGLVERTEXATTRIB4DVARBPROC glVertexAttrib4dvARB;
PFNGLVERTEXATTRIB4DVNVPROC glVertexAttrib4dvNV;
PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv;
PFNGLVERTEXATTRIB4FARBPROC glVertexAttrib4fARB;
PFNGLVERTEXATTRIB4FNVPROC glVertexAttrib4fNV;
PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
PFNGLVERTEXATTRIB4FVARBPROC glVertexAttrib4fvARB;
PFNGLVERTEXATTRIB4FVNVPROC glVertexAttrib4fvNV;
PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;
PFNGLVERTEXATTRIB4HNVPROC glVertexAttrib4hNV;
PFNGLVERTEXATTRIB4HVNVPROC glVertexAttrib4hvNV;
PFNGLVERTEXATTRIB4IVARBPROC glVertexAttrib4ivARB;
PFNGLVERTEXATTRIB4IVPROC glVertexAttrib4iv;
PFNGLVERTEXATTRIB4NBVARBPROC glVertexAttrib4NbvARB;
PFNGLVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
PFNGLVERTEXATTRIB4NIVARBPROC glVertexAttrib4NivARB;
PFNGLVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
PFNGLVERTEXATTRIB4NSVARBPROC glVertexAttrib4NsvARB;
PFNGLVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
PFNGLVERTEXATTRIB4NUBARBPROC glVertexAttrib4NubARB;
PFNGLVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
PFNGLVERTEXATTRIB4NUBVARBPROC glVertexAttrib4NubvARB;
PFNGLVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
PFNGLVERTEXATTRIB4NUIVARBPROC glVertexAttrib4NuivARB;
PFNGLVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
PFNGLVERTEXATTRIB4NUSVARBPROC glVertexAttrib4NusvARB;
PFNGLVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
PFNGLVERTEXATTRIB4SARBPROC glVertexAttrib4sARB;
PFNGLVERTEXATTRIB4SNVPROC glVertexAttrib4sNV;
PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s;
PFNGLVERTEXATTRIB4SVARBPROC glVertexAttrib4svARB;
PFNGLVERTEXATTRIB4SVNVPROC glVertexAttrib4svNV;
PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv;
PFNGLVERTEXATTRIB4UBNVPROC glVertexAttrib4ubNV;
PFNGLVERTEXATTRIB4UBVARBPROC glVertexAttrib4ubvARB;
PFNGLVERTEXATTRIB4UBVNVPROC glVertexAttrib4ubvNV;
PFNGLVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
PFNGLVERTEXATTRIB4UIVARBPROC glVertexAttrib4uivARB;
PFNGLVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
PFNGLVERTEXATTRIB4USVARBPROC glVertexAttrib4usvARB;
PFNGLVERTEXATTRIB4USVPROC glVertexAttrib4usv;
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC glVertexAttribArrayObjectATI;
PFNGLVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
PFNGLVERTEXATTRIBDIVISORARBPROC glVertexAttribDivisorARB;
PFNGLVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
PFNGLVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
PFNGLVERTEXATTRIBFORMATPROC glVertexAttribFormat;
PFNGLVERTEXATTRIBI1IEXTPROC glVertexAttribI1iEXT;
PFNGLVERTEXATTRIBI1IPROC glVertexAttribI1i;
PFNGLVERTEXATTRIBI1IVEXTPROC glVertexAttribI1ivEXT;
PFNGLVERTEXATTRIBI1IVPROC glVertexAttribI1iv;
PFNGLVERTEXATTRIBI1UIEXTPROC glVertexAttribI1uiEXT;
PFNGLVERTEXATTRIBI1UIPROC glVertexAttribI1ui;
PFNGLVERTEXATTRIBI1UIVEXTPROC glVertexAttribI1uivEXT;
PFNGLVERTEXATTRIBI1UIVPROC glVertexAttribI1uiv;
PFNGLVERTEXATTRIBI2IEXTPROC glVertexAttribI2iEXT;
PFNGLVERTEXATTRIBI2IPROC glVertexAttribI2i;
PFNGLVERTEXATTRIBI2IVEXTPROC glVertexAttribI2ivEXT;
PFNGLVERTEXATTRIBI2IVPROC glVertexAttribI2iv;
PFNGLVERTEXATTRIBI2UIEXTPROC glVertexAttribI2uiEXT;
PFNGLVERTEXATTRIBI2UIPROC glVertexAttribI2ui;
PFNGLVERTEXATTRIBI2UIVEXTPROC glVertexAttribI2uivEXT;
PFNGLVERTEXATTRIBI2UIVPROC glVertexAttribI2uiv;
PFNGLVERTEXATTRIBI3IEXTPROC glVertexAttribI3iEXT;
PFNGLVERTEXATTRIBI3IPROC glVertexAttribI3i;
PFNGLVERTEXATTRIBI3IVEXTPROC glVertexAttribI3ivEXT;
PFNGLVERTEXATTRIBI3IVPROC glVertexAttribI3iv;
PFNGLVERTEXATTRIBI3UIEXTPROC glVertexAttribI3uiEXT;
PFNGLVERTEXATTRIBI3UIPROC glVertexAttribI3ui;
PFNGLVERTEXATTRIBI3UIVEXTPROC glVertexAttribI3uivEXT;
PFNGLVERTEXATTRIBI3UIVPROC glVertexAttribI3uiv;
PFNGLVERTEXATTRIBI4BVEXTPROC glVertexAttribI4bvEXT;
PFNGLVERTEXATTRIBI4BVPROC glVertexAttribI4bv;
PFNGLVERTEXATTRIBI4IEXTPROC glVertexAttribI4iEXT;
PFNGLVERTEXATTRIBI4IPROC glVertexAttribI4i;
PFNGLVERTEXATTRIBI4IVEXTPROC glVertexAttribI4ivEXT;
PFNGLVERTEXATTRIBI4IVPROC glVertexAttribI4iv;
PFNGLVERTEXATTRIBI4SVEXTPROC glVertexAttribI4svEXT;
PFNGLVERTEXATTRIBI4SVPROC glVertexAttribI4sv;
PFNGLVERTEXATTRIBI4UBVEXTPROC glVertexAttribI4ubvEXT;
PFNGLVERTEXATTRIBI4UBVPROC glVertexAttribI4ubv;
PFNGLVERTEXATTRIBI4UIEXTPROC glVertexAttribI4uiEXT;
PFNGLVERTEXATTRIBI4UIPROC glVertexAttribI4ui;
PFNGLVERTEXATTRIBI4UIVEXTPROC glVertexAttribI4uivEXT;
PFNGLVERTEXATTRIBI4UIVPROC glVertexAttribI4uiv;
PFNGLVERTEXATTRIBI4USVEXTPROC glVertexAttribI4usvEXT;
PFNGLVERTEXATTRIBI4USVPROC glVertexAttribI4usv;
PFNGLVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
PFNGLVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
PFNGLVERTEXATTRIBIPOINTEREXTPROC glVertexAttribIPointerEXT;
PFNGLVERTEXATTRIBIPOINTERPROC glVertexAttribIPointer;
PFNGLVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
PFNGLVERTEXATTRIBL1DPROC glVertexAttribL1d;
PFNGLVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
PFNGLVERTEXATTRIBL1DVPROC glVertexAttribL1dv;
PFNGLVERTEXATTRIBL1I64NVPROC glVertexAttribL1i64NV;
PFNGLVERTEXATTRIBL1I64VNVPROC glVertexAttribL1i64vNV;
PFNGLVERTEXATTRIBL1UI64ARBPROC glVertexAttribL1ui64ARB;
PFNGLVERTEXATTRIBL1UI64NVPROC glVertexAttribL1ui64NV;
PFNGLVERTEXATTRIBL1UI64VARBPROC glVertexAttribL1ui64vARB;
PFNGLVERTEXATTRIBL1UI64VNVPROC glVertexAttribL1ui64vNV;
PFNGLVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
PFNGLVERTEXATTRIBL2DPROC glVertexAttribL2d;
PFNGLVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
PFNGLVERTEXATTRIBL2DVPROC glVertexAttribL2dv;
PFNGLVERTEXATTRIBL2I64NVPROC glVertexAttribL2i64NV;
PFNGLVERTEXATTRIBL2I64VNVPROC glVertexAttribL2i64vNV;
PFNGLVERTEXATTRIBL2UI64NVPROC glVertexAttribL2ui64NV;
PFNGLVERTEXATTRIBL2UI64VNVPROC glVertexAttribL2ui64vNV;
PFNGLVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
PFNGLVERTEXATTRIBL3DPROC glVertexAttribL3d;
PFNGLVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
PFNGLVERTEXATTRIBL3DVPROC glVertexAttribL3dv;
PFNGLVERTEXATTRIBL3I64NVPROC glVertexAttribL3i64NV;
PFNGLVERTEXATTRIBL3I64VNVPROC glVertexAttribL3i64vNV;
PFNGLVERTEXATTRIBL3UI64NVPROC glVertexAttribL3ui64NV;
PFNGLVERTEXATTRIBL3UI64VNVPROC glVertexAttribL3ui64vNV;
PFNGLVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
PFNGLVERTEXATTRIBL4DPROC glVertexAttribL4d;
PFNGLVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
PFNGLVERTEXATTRIBL4DVPROC glVertexAttribL4dv;
PFNGLVERTEXATTRIBL4I64NVPROC glVertexAttribL4i64NV;
PFNGLVERTEXATTRIBL4I64VNVPROC glVertexAttribL4i64vNV;
PFNGLVERTEXATTRIBL4UI64NVPROC glVertexAttribL4ui64NV;
PFNGLVERTEXATTRIBL4UI64VNVPROC glVertexAttribL4ui64vNV;
PFNGLVERTEXATTRIBLFORMATNVPROC glVertexAttribLFormatNV;
PFNGLVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
PFNGLVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
PFNGLVERTEXATTRIBLPOINTERPROC glVertexAttribLPointer;
PFNGLVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
PFNGLVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
PFNGLVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
PFNGLVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
PFNGLVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
PFNGLVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
PFNGLVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
PFNGLVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
PFNGLVERTEXATTRIBPARAMETERIAMDPROC glVertexAttribParameteriAMD;
PFNGLVERTEXATTRIBPOINTERARBPROC glVertexAttribPointerARB;
PFNGLVERTEXATTRIBPOINTERNVPROC glVertexAttribPointerNV;
PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
PFNGLVERTEXATTRIBS1DVNVPROC glVertexAttribs1dvNV;
PFNGLVERTEXATTRIBS1FVNVPROC glVertexAttribs1fvNV;
PFNGLVERTEXATTRIBS1HVNVPROC glVertexAttribs1hvNV;
PFNGLVERTEXATTRIBS1SVNVPROC glVertexAttribs1svNV;
PFNGLVERTEXATTRIBS2DVNVPROC glVertexAttribs2dvNV;
PFNGLVERTEXATTRIBS2FVNVPROC glVertexAttribs2fvNV;
PFNGLVERTEXATTRIBS2HVNVPROC glVertexAttribs2hvNV;
PFNGLVERTEXATTRIBS2SVNVPROC glVertexAttribs2svNV;
PFNGLVERTEXATTRIBS3DVNVPROC glVertexAttribs3dvNV;
PFNGLVERTEXATTRIBS3FVNVPROC glVertexAttribs3fvNV;
PFNGLVERTEXATTRIBS3HVNVPROC glVertexAttribs3hvNV;
PFNGLVERTEXATTRIBS3SVNVPROC glVertexAttribs3svNV;
PFNGLVERTEXATTRIBS4DVNVPROC glVertexAttribs4dvNV;
PFNGLVERTEXATTRIBS4FVNVPROC glVertexAttribs4fvNV;
PFNGLVERTEXATTRIBS4HVNVPROC glVertexAttribs4hvNV;
PFNGLVERTEXATTRIBS4SVNVPROC glVertexAttribs4svNV;
PFNGLVERTEXATTRIBS4UBVNVPROC glVertexAttribs4ubvNV;
PFNGLVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
PFNGLVERTEXBLENDARBPROC glVertexBlendARB;
PFNGLVERTEXBLENDENVFATIPROC glVertexBlendEnvfATI;
PFNGLVERTEXBLENDENVIATIPROC glVertexBlendEnviATI;
PFNGLVERTEXFORMATNVPROC glVertexFormatNV;
PFNGLVERTEXP2UIPROC glVertexP2ui;
PFNGLVERTEXP2UIVPROC glVertexP2uiv;
PFNGLVERTEXP3UIPROC glVertexP3ui;
PFNGLVERTEXP3UIVPROC glVertexP3uiv;
PFNGLVERTEXP4UIPROC glVertexP4ui;
PFNGLVERTEXP4UIVPROC glVertexP4uiv;
PFNGLVERTEXPOINTEREXTPROC glVertexPointerEXT;
PFNGLVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
PFNGLVERTEXPOINTERVINTELPROC glVertexPointervINTEL;
PFNGLVERTEXSTREAM1DATIPROC glVertexStream1dATI;
PFNGLVERTEXSTREAM1DVATIPROC glVertexStream1dvATI;
PFNGLVERTEXSTREAM1FATIPROC glVertexStream1fATI;
PFNGLVERTEXSTREAM1FVATIPROC glVertexStream1fvATI;
PFNGLVERTEXSTREAM1IATIPROC glVertexStream1iATI;
PFNGLVERTEXSTREAM1IVATIPROC glVertexStream1ivATI;
PFNGLVERTEXSTREAM1SATIPROC glVertexStream1sATI;
PFNGLVERTEXSTREAM1SVATIPROC glVertexStream1svATI;
PFNGLVERTEXSTREAM2DATIPROC glVertexStream2dATI;
PFNGLVERTEXSTREAM2DVATIPROC glVertexStream2dvATI;
PFNGLVERTEXSTREAM2FATIPROC glVertexStream2fATI;
PFNGLVERTEXSTREAM2FVATIPROC glVertexStream2fvATI;
PFNGLVERTEXSTREAM2IATIPROC glVertexStream2iATI;
PFNGLVERTEXSTREAM2IVATIPROC glVertexStream2ivATI;
PFNGLVERTEXSTREAM2SATIPROC glVertexStream2sATI;
PFNGLVERTEXSTREAM2SVATIPROC glVertexStream2svATI;
PFNGLVERTEXSTREAM3DATIPROC glVertexStream3dATI;
PFNGLVERTEXSTREAM3DVATIPROC glVertexStream3dvATI;
PFNGLVERTEXSTREAM3FATIPROC glVertexStream3fATI;
PFNGLVERTEXSTREAM3FVATIPROC glVertexStream3fvATI;
PFNGLVERTEXSTREAM3IATIPROC glVertexStream3iATI;
PFNGLVERTEXSTREAM3IVATIPROC glVertexStream3ivATI;
PFNGLVERTEXSTREAM3SATIPROC glVertexStream3sATI;
PFNGLVERTEXSTREAM3SVATIPROC glVertexStream3svATI;
PFNGLVERTEXSTREAM4DATIPROC glVertexStream4dATI;
PFNGLVERTEXSTREAM4DVATIPROC glVertexStream4dvATI;
PFNGLVERTEXSTREAM4FATIPROC glVertexStream4fATI;
PFNGLVERTEXSTREAM4FVATIPROC glVertexStream4fvATI;
PFNGLVERTEXSTREAM4IATIPROC glVertexStream4iATI;
PFNGLVERTEXSTREAM4IVATIPROC glVertexStream4ivATI;
PFNGLVERTEXSTREAM4SATIPROC glVertexStream4sATI;
PFNGLVERTEXSTREAM4SVATIPROC glVertexStream4svATI;
PFNGLVERTEXWEIGHTFEXTPROC glVertexWeightfEXT;
PFNGLVERTEXWEIGHTFVEXTPROC glVertexWeightfvEXT;
PFNGLVERTEXWEIGHTHNVPROC glVertexWeighthNV;
PFNGLVERTEXWEIGHTHVNVPROC glVertexWeighthvNV;
PFNGLVERTEXWEIGHTPOINTEREXTPROC glVertexWeightPointerEXT;
PFNGLVIDEOCAPTURENVPROC glVideoCaptureNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC glVideoCaptureStreamParameterdvNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC glVideoCaptureStreamParameterfvNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC glVideoCaptureStreamParameterivNV;
PFNGLVIEWPORTARRAYVPROC glViewportArrayv;
PFNGLVIEWPORTINDEXEDFPROC glViewportIndexedf;
PFNGLVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
PFNGLVIEWPORTPOSITIONWSCALENVPROC glViewportPositionWScaleNV;
PFNGLVIEWPORTSWIZZLENVPROC glViewportSwizzleNV;
PFNGLWAITSYNCPROC glWaitSync;
PFNGLWAITVKSEMAPHORENVPROC glWaitVkSemaphoreNV;
PFNGLWEIGHTBVARBPROC glWeightbvARB;
PFNGLWEIGHTDVARBPROC glWeightdvARB;
PFNGLWEIGHTFVARBPROC glWeightfvARB;
PFNGLWEIGHTIVARBPROC glWeightivARB;
PFNGLWEIGHTPATHSNVPROC glWeightPathsNV;
PFNGLWEIGHTPOINTERARBPROC glWeightPointerARB;
PFNGLWEIGHTSVARBPROC glWeightsvARB;
PFNGLWEIGHTUBVARBPROC glWeightubvARB;
PFNGLWEIGHTUIVARBPROC glWeightuivARB;
PFNGLWEIGHTUSVARBPROC glWeightusvARB;
PFNGLWINDOWPOS2DARBPROC glWindowPos2dARB;
PFNGLWINDOWPOS2DMESAPROC glWindowPos2dMESA;
PFNGLWINDOWPOS2DPROC glWindowPos2d;
PFNGLWINDOWPOS2DVARBPROC glWindowPos2dvARB;
PFNGLWINDOWPOS2DVMESAPROC glWindowPos2dvMESA;
PFNGLWINDOWPOS2DVPROC glWindowPos2dv;
PFNGLWINDOWPOS2FARBPROC glWindowPos2fARB;
PFNGLWINDOWPOS2FMESAPROC glWindowPos2fMESA;
PFNGLWINDOWPOS2FPROC glWindowPos2f;
PFNGLWINDOWPOS2FVARBPROC glWindowPos2fvARB;
PFNGLWINDOWPOS2FVMESAPROC glWindowPos2fvMESA;
PFNGLWINDOWPOS2FVPROC glWindowPos2fv;
PFNGLWINDOWPOS2IARBPROC glWindowPos2iARB;
PFNGLWINDOWPOS2IMESAPROC glWindowPos2iMESA;
PFNGLWINDOWPOS2IPROC glWindowPos2i;
PFNGLWINDOWPOS2IVARBPROC glWindowPos2ivARB;
PFNGLWINDOWPOS2IVMESAPROC glWindowPos2ivMESA;
PFNGLWINDOWPOS2IVPROC glWindowPos2iv;
PFNGLWINDOWPOS2SARBPROC glWindowPos2sARB;
PFNGLWINDOWPOS2SMESAPROC glWindowPos2sMESA;
PFNGLWINDOWPOS2SPROC glWindowPos2s;
PFNGLWINDOWPOS2SVARBPROC glWindowPos2svARB;
PFNGLWINDOWPOS2SVMESAPROC glWindowPos2svMESA;
PFNGLWINDOWPOS2SVPROC glWindowPos2sv;
PFNGLWINDOWPOS3DARBPROC glWindowPos3dARB;
PFNGLWINDOWPOS3DMESAPROC glWindowPos3dMESA;
PFNGLWINDOWPOS3DPROC glWindowPos3d;
PFNGLWINDOWPOS3DVARBPROC glWindowPos3dvARB;
PFNGLWINDOWPOS3DVMESAPROC glWindowPos3dvMESA;
PFNGLWINDOWPOS3DVPROC glWindowPos3dv;
PFNGLWINDOWPOS3FARBPROC glWindowPos3fARB;
PFNGLWINDOWPOS3FMESAPROC glWindowPos3fMESA;
PFNGLWINDOWPOS3FPROC glWindowPos3f;
PFNGLWINDOWPOS3FVARBPROC glWindowPos3fvARB;
PFNGLWINDOWPOS3FVMESAPROC glWindowPos3fvMESA;
PFNGLWINDOWPOS3FVPROC glWindowPos3fv;
PFNGLWINDOWPOS3IARBPROC glWindowPos3iARB;
PFNGLWINDOWPOS3IMESAPROC glWindowPos3iMESA;
PFNGLWINDOWPOS3IPROC glWindowPos3i;
PFNGLWINDOWPOS3IVARBPROC glWindowPos3ivARB;
PFNGLWINDOWPOS3IVMESAPROC glWindowPos3ivMESA;
PFNGLWINDOWPOS3IVPROC glWindowPos3iv;
PFNGLWINDOWPOS3SARBPROC glWindowPos3sARB;
PFNGLWINDOWPOS3SMESAPROC glWindowPos3sMESA;
PFNGLWINDOWPOS3SPROC glWindowPos3s;
PFNGLWINDOWPOS3SVARBPROC glWindowPos3svARB;
PFNGLWINDOWPOS3SVMESAPROC glWindowPos3svMESA;
PFNGLWINDOWPOS3SVPROC glWindowPos3sv;
PFNGLWINDOWPOS4DMESAPROC glWindowPos4dMESA;
PFNGLWINDOWPOS4DVMESAPROC glWindowPos4dvMESA;
PFNGLWINDOWPOS4FMESAPROC glWindowPos4fMESA;
PFNGLWINDOWPOS4FVMESAPROC glWindowPos4fvMESA;
PFNGLWINDOWPOS4IMESAPROC glWindowPos4iMESA;
PFNGLWINDOWPOS4IVMESAPROC glWindowPos4ivMESA;
PFNGLWINDOWPOS4SMESAPROC glWindowPos4sMESA;
PFNGLWINDOWPOS4SVMESAPROC glWindowPos4svMESA;
PFNGLWINDOWRECTANGLESEXTPROC glWindowRectanglesEXT;
PFNGLWRITEMASKEXTPROC glWriteMaskEXT;
#endif

/*!
** \brief ゲームグラフィックス特論の都合にもとづく初期化を行う.
**
**   Windows で OpenGL 1.2 以降の API を有効化する.
*/
void gg::ggInit()
{
  // この関数がまだ実行されていなければ false
  static bool initialized(false);

  // すでにこの関数が実行されていたら以降の処理を行わない
  if (initialized) return;

  // この関数が実行されたことを記録する
  initialized = true;

#if defined(_WIN32)
  // OpenGL 1.2 以降の API を有効化する
  glAccumxOES = PFNGLACCUMXOESPROC(glfwGetProcAddress("glAccumxOES"));
  glActiveProgramEXT = PFNGLACTIVEPROGRAMEXTPROC(glfwGetProcAddress("glActiveProgramEXT"));
  glActiveShaderProgram = PFNGLACTIVESHADERPROGRAMPROC(glfwGetProcAddress("glActiveShaderProgram"));
  glActiveStencilFaceEXT = PFNGLACTIVESTENCILFACEEXTPROC(glfwGetProcAddress("glActiveStencilFaceEXT"));
  glActiveTexture = PFNGLACTIVETEXTUREPROC(glfwGetProcAddress("glActiveTexture"));
  glActiveTextureARB = PFNGLACTIVETEXTUREARBPROC(glfwGetProcAddress("glActiveTextureARB"));
  glActiveVaryingNV = PFNGLACTIVEVARYINGNVPROC(glfwGetProcAddress("glActiveVaryingNV"));
  glAlphaFragmentOp1ATI = PFNGLALPHAFRAGMENTOP1ATIPROC(glfwGetProcAddress("glAlphaFragmentOp1ATI"));
  glAlphaFragmentOp2ATI = PFNGLALPHAFRAGMENTOP2ATIPROC(glfwGetProcAddress("glAlphaFragmentOp2ATI"));
  glAlphaFragmentOp3ATI = PFNGLALPHAFRAGMENTOP3ATIPROC(glfwGetProcAddress("glAlphaFragmentOp3ATI"));
  glAlphaFuncxOES = PFNGLALPHAFUNCXOESPROC(glfwGetProcAddress("glAlphaFuncxOES"));
  glAlphaToCoverageDitherControlNV = PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC(glfwGetProcAddress("glAlphaToCoverageDitherControlNV"));
  glApplyFramebufferAttachmentCMAAINTEL = PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC(glfwGetProcAddress("glApplyFramebufferAttachmentCMAAINTEL"));
  glApplyTextureEXT = PFNGLAPPLYTEXTUREEXTPROC(glfwGetProcAddress("glApplyTextureEXT"));
  glAreProgramsResidentNV = PFNGLAREPROGRAMSRESIDENTNVPROC(glfwGetProcAddress("glAreProgramsResidentNV"));
  glAreTexturesResidentEXT = PFNGLARETEXTURESRESIDENTEXTPROC(glfwGetProcAddress("glAreTexturesResidentEXT"));
  glArrayElementEXT = PFNGLARRAYELEMENTEXTPROC(glfwGetProcAddress("glArrayElementEXT"));
  glArrayObjectATI = PFNGLARRAYOBJECTATIPROC(glfwGetProcAddress("glArrayObjectATI"));
  glAsyncMarkerSGIX = PFNGLASYNCMARKERSGIXPROC(glfwGetProcAddress("glAsyncMarkerSGIX"));
  glAttachObjectARB = PFNGLATTACHOBJECTARBPROC(glfwGetProcAddress("glAttachObjectARB"));
  glAttachShader = PFNGLATTACHSHADERPROC(glfwGetProcAddress("glAttachShader"));
  glBeginConditionalRender = PFNGLBEGINCONDITIONALRENDERPROC(glfwGetProcAddress("glBeginConditionalRender"));
  glBeginConditionalRenderNV = PFNGLBEGINCONDITIONALRENDERNVPROC(glfwGetProcAddress("glBeginConditionalRenderNV"));
  glBeginConditionalRenderNVX = PFNGLBEGINCONDITIONALRENDERNVXPROC(glfwGetProcAddress("glBeginConditionalRenderNVX"));
  glBeginFragmentShaderATI = PFNGLBEGINFRAGMENTSHADERATIPROC(glfwGetProcAddress("glBeginFragmentShaderATI"));
  glBeginOcclusionQueryNV = PFNGLBEGINOCCLUSIONQUERYNVPROC(glfwGetProcAddress("glBeginOcclusionQueryNV"));
  glBeginPerfMonitorAMD = PFNGLBEGINPERFMONITORAMDPROC(glfwGetProcAddress("glBeginPerfMonitorAMD"));
  glBeginPerfQueryINTEL = PFNGLBEGINPERFQUERYINTELPROC(glfwGetProcAddress("glBeginPerfQueryINTEL"));
  glBeginQuery = PFNGLBEGINQUERYPROC(glfwGetProcAddress("glBeginQuery"));
  glBeginQueryARB = PFNGLBEGINQUERYARBPROC(glfwGetProcAddress("glBeginQueryARB"));
  glBeginQueryIndexed = PFNGLBEGINQUERYINDEXEDPROC(glfwGetProcAddress("glBeginQueryIndexed"));
  glBeginTransformFeedback = PFNGLBEGINTRANSFORMFEEDBACKPROC(glfwGetProcAddress("glBeginTransformFeedback"));
  glBeginTransformFeedbackEXT = PFNGLBEGINTRANSFORMFEEDBACKEXTPROC(glfwGetProcAddress("glBeginTransformFeedbackEXT"));
  glBeginTransformFeedbackNV = PFNGLBEGINTRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glBeginTransformFeedbackNV"));
  glBeginVertexShaderEXT = PFNGLBEGINVERTEXSHADEREXTPROC(glfwGetProcAddress("glBeginVertexShaderEXT"));
  glBeginVideoCaptureNV = PFNGLBEGINVIDEOCAPTURENVPROC(glfwGetProcAddress("glBeginVideoCaptureNV"));
  glBindAttribLocation = PFNGLBINDATTRIBLOCATIONPROC(glfwGetProcAddress("glBindAttribLocation"));
  glBindAttribLocationARB = PFNGLBINDATTRIBLOCATIONARBPROC(glfwGetProcAddress("glBindAttribLocationARB"));
  glBindBuffer = PFNGLBINDBUFFERPROC(glfwGetProcAddress("glBindBuffer"));
  glBindBufferARB = PFNGLBINDBUFFERARBPROC(glfwGetProcAddress("glBindBufferARB"));
  glBindBufferBase = PFNGLBINDBUFFERBASEPROC(glfwGetProcAddress("glBindBufferBase"));
  glBindBufferBaseEXT = PFNGLBINDBUFFERBASEEXTPROC(glfwGetProcAddress("glBindBufferBaseEXT"));
  glBindBufferBaseNV = PFNGLBINDBUFFERBASENVPROC(glfwGetProcAddress("glBindBufferBaseNV"));
  glBindBufferOffsetEXT = PFNGLBINDBUFFEROFFSETEXTPROC(glfwGetProcAddress("glBindBufferOffsetEXT"));
  glBindBufferOffsetNV = PFNGLBINDBUFFEROFFSETNVPROC(glfwGetProcAddress("glBindBufferOffsetNV"));
  glBindBufferRange = PFNGLBINDBUFFERRANGEPROC(glfwGetProcAddress("glBindBufferRange"));
  glBindBufferRangeEXT = PFNGLBINDBUFFERRANGEEXTPROC(glfwGetProcAddress("glBindBufferRangeEXT"));
  glBindBufferRangeNV = PFNGLBINDBUFFERRANGENVPROC(glfwGetProcAddress("glBindBufferRangeNV"));
  glBindBuffersBase = PFNGLBINDBUFFERSBASEPROC(glfwGetProcAddress("glBindBuffersBase"));
  glBindBuffersRange = PFNGLBINDBUFFERSRANGEPROC(glfwGetProcAddress("glBindBuffersRange"));
  glBindFragDataLocation = PFNGLBINDFRAGDATALOCATIONPROC(glfwGetProcAddress("glBindFragDataLocation"));
  glBindFragDataLocationEXT = PFNGLBINDFRAGDATALOCATIONEXTPROC(glfwGetProcAddress("glBindFragDataLocationEXT"));
  glBindFragDataLocationIndexed = PFNGLBINDFRAGDATALOCATIONINDEXEDPROC(glfwGetProcAddress("glBindFragDataLocationIndexed"));
  glBindFragmentShaderATI = PFNGLBINDFRAGMENTSHADERATIPROC(glfwGetProcAddress("glBindFragmentShaderATI"));
  glBindFramebuffer = PFNGLBINDFRAMEBUFFERPROC(glfwGetProcAddress("glBindFramebuffer"));
  glBindFramebufferEXT = PFNGLBINDFRAMEBUFFEREXTPROC(glfwGetProcAddress("glBindFramebufferEXT"));
  glBindImageTexture = PFNGLBINDIMAGETEXTUREPROC(glfwGetProcAddress("glBindImageTexture"));
  glBindImageTextureEXT = PFNGLBINDIMAGETEXTUREEXTPROC(glfwGetProcAddress("glBindImageTextureEXT"));
  glBindImageTextures = PFNGLBINDIMAGETEXTURESPROC(glfwGetProcAddress("glBindImageTextures"));
  glBindLightParameterEXT = PFNGLBINDLIGHTPARAMETEREXTPROC(glfwGetProcAddress("glBindLightParameterEXT"));
  glBindMaterialParameterEXT = PFNGLBINDMATERIALPARAMETEREXTPROC(glfwGetProcAddress("glBindMaterialParameterEXT"));
  glBindMultiTextureEXT = PFNGLBINDMULTITEXTUREEXTPROC(glfwGetProcAddress("glBindMultiTextureEXT"));
  glBindParameterEXT = PFNGLBINDPARAMETEREXTPROC(glfwGetProcAddress("glBindParameterEXT"));
  glBindProgramARB = PFNGLBINDPROGRAMARBPROC(glfwGetProcAddress("glBindProgramARB"));
  glBindProgramNV = PFNGLBINDPROGRAMNVPROC(glfwGetProcAddress("glBindProgramNV"));
  glBindProgramPipeline = PFNGLBINDPROGRAMPIPELINEPROC(glfwGetProcAddress("glBindProgramPipeline"));
  glBindRenderbuffer = PFNGLBINDRENDERBUFFERPROC(glfwGetProcAddress("glBindRenderbuffer"));
  glBindRenderbufferEXT = PFNGLBINDRENDERBUFFEREXTPROC(glfwGetProcAddress("glBindRenderbufferEXT"));
  glBindSampler = PFNGLBINDSAMPLERPROC(glfwGetProcAddress("glBindSampler"));
  glBindSamplers = PFNGLBINDSAMPLERSPROC(glfwGetProcAddress("glBindSamplers"));
  glBindTexGenParameterEXT = PFNGLBINDTEXGENPARAMETEREXTPROC(glfwGetProcAddress("glBindTexGenParameterEXT"));
  glBindTextureEXT = PFNGLBINDTEXTUREEXTPROC(glfwGetProcAddress("glBindTextureEXT"));
  glBindTextures = PFNGLBINDTEXTURESPROC(glfwGetProcAddress("glBindTextures"));
  glBindTextureUnit = PFNGLBINDTEXTUREUNITPROC(glfwGetProcAddress("glBindTextureUnit"));
  glBindTextureUnitParameterEXT = PFNGLBINDTEXTUREUNITPARAMETEREXTPROC(glfwGetProcAddress("glBindTextureUnitParameterEXT"));
  glBindTransformFeedback = PFNGLBINDTRANSFORMFEEDBACKPROC(glfwGetProcAddress("glBindTransformFeedback"));
  glBindTransformFeedbackNV = PFNGLBINDTRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glBindTransformFeedbackNV"));
  glBindVertexArray = PFNGLBINDVERTEXARRAYPROC(glfwGetProcAddress("glBindVertexArray"));
  glBindVertexArrayAPPLE = PFNGLBINDVERTEXARRAYAPPLEPROC(glfwGetProcAddress("glBindVertexArrayAPPLE"));
  glBindVertexBuffer = PFNGLBINDVERTEXBUFFERPROC(glfwGetProcAddress("glBindVertexBuffer"));
  glBindVertexBuffers = PFNGLBINDVERTEXBUFFERSPROC(glfwGetProcAddress("glBindVertexBuffers"));
  glBindVertexShaderEXT = PFNGLBINDVERTEXSHADEREXTPROC(glfwGetProcAddress("glBindVertexShaderEXT"));
  glBindVideoCaptureStreamBufferNV = PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC(glfwGetProcAddress("glBindVideoCaptureStreamBufferNV"));
  glBindVideoCaptureStreamTextureNV = PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC(glfwGetProcAddress("glBindVideoCaptureStreamTextureNV"));
  glBinormal3bEXT = PFNGLBINORMAL3BEXTPROC(glfwGetProcAddress("glBinormal3bEXT"));
  glBinormal3bvEXT = PFNGLBINORMAL3BVEXTPROC(glfwGetProcAddress("glBinormal3bvEXT"));
  glBinormal3dEXT = PFNGLBINORMAL3DEXTPROC(glfwGetProcAddress("glBinormal3dEXT"));
  glBinormal3dvEXT = PFNGLBINORMAL3DVEXTPROC(glfwGetProcAddress("glBinormal3dvEXT"));
  glBinormal3fEXT = PFNGLBINORMAL3FEXTPROC(glfwGetProcAddress("glBinormal3fEXT"));
  glBinormal3fvEXT = PFNGLBINORMAL3FVEXTPROC(glfwGetProcAddress("glBinormal3fvEXT"));
  glBinormal3iEXT = PFNGLBINORMAL3IEXTPROC(glfwGetProcAddress("glBinormal3iEXT"));
  glBinormal3ivEXT = PFNGLBINORMAL3IVEXTPROC(glfwGetProcAddress("glBinormal3ivEXT"));
  glBinormal3sEXT = PFNGLBINORMAL3SEXTPROC(glfwGetProcAddress("glBinormal3sEXT"));
  glBinormal3svEXT = PFNGLBINORMAL3SVEXTPROC(glfwGetProcAddress("glBinormal3svEXT"));
  glBinormalPointerEXT = PFNGLBINORMALPOINTEREXTPROC(glfwGetProcAddress("glBinormalPointerEXT"));
  glBitmapxOES = PFNGLBITMAPXOESPROC(glfwGetProcAddress("glBitmapxOES"));
  glBlendBarrierKHR = PFNGLBLENDBARRIERKHRPROC(glfwGetProcAddress("glBlendBarrierKHR"));
  glBlendBarrierNV = PFNGLBLENDBARRIERNVPROC(glfwGetProcAddress("glBlendBarrierNV"));
  glBlendColor = PFNGLBLENDCOLORPROC(glfwGetProcAddress("glBlendColor"));
  glBlendColorEXT = PFNGLBLENDCOLOREXTPROC(glfwGetProcAddress("glBlendColorEXT"));
  glBlendColorxOES = PFNGLBLENDCOLORXOESPROC(glfwGetProcAddress("glBlendColorxOES"));
  glBlendEquation = PFNGLBLENDEQUATIONPROC(glfwGetProcAddress("glBlendEquation"));
  glBlendEquationEXT = PFNGLBLENDEQUATIONEXTPROC(glfwGetProcAddress("glBlendEquationEXT"));
  glBlendEquationi = PFNGLBLENDEQUATIONIPROC(glfwGetProcAddress("glBlendEquationi"));
  glBlendEquationiARB = PFNGLBLENDEQUATIONIARBPROC(glfwGetProcAddress("glBlendEquationiARB"));
  glBlendEquationIndexedAMD = PFNGLBLENDEQUATIONINDEXEDAMDPROC(glfwGetProcAddress("glBlendEquationIndexedAMD"));
  glBlendEquationSeparate = PFNGLBLENDEQUATIONSEPARATEPROC(glfwGetProcAddress("glBlendEquationSeparate"));
  glBlendEquationSeparateEXT = PFNGLBLENDEQUATIONSEPARATEEXTPROC(glfwGetProcAddress("glBlendEquationSeparateEXT"));
  glBlendEquationSeparatei = PFNGLBLENDEQUATIONSEPARATEIPROC(glfwGetProcAddress("glBlendEquationSeparatei"));
  glBlendEquationSeparateiARB = PFNGLBLENDEQUATIONSEPARATEIARBPROC(glfwGetProcAddress("glBlendEquationSeparateiARB"));
  glBlendEquationSeparateIndexedAMD = PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC(glfwGetProcAddress("glBlendEquationSeparateIndexedAMD"));
  glBlendFunci = PFNGLBLENDFUNCIPROC(glfwGetProcAddress("glBlendFunci"));
  glBlendFunciARB = PFNGLBLENDFUNCIARBPROC(glfwGetProcAddress("glBlendFunciARB"));
  glBlendFuncIndexedAMD = PFNGLBLENDFUNCINDEXEDAMDPROC(glfwGetProcAddress("glBlendFuncIndexedAMD"));
  glBlendFuncSeparate = PFNGLBLENDFUNCSEPARATEPROC(glfwGetProcAddress("glBlendFuncSeparate"));
  glBlendFuncSeparateEXT = PFNGLBLENDFUNCSEPARATEEXTPROC(glfwGetProcAddress("glBlendFuncSeparateEXT"));
  glBlendFuncSeparatei = PFNGLBLENDFUNCSEPARATEIPROC(glfwGetProcAddress("glBlendFuncSeparatei"));
  glBlendFuncSeparateiARB = PFNGLBLENDFUNCSEPARATEIARBPROC(glfwGetProcAddress("glBlendFuncSeparateiARB"));
  glBlendFuncSeparateIndexedAMD = PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC(glfwGetProcAddress("glBlendFuncSeparateIndexedAMD"));
  glBlendFuncSeparateINGR = PFNGLBLENDFUNCSEPARATEINGRPROC(glfwGetProcAddress("glBlendFuncSeparateINGR"));
  glBlendParameteriNV = PFNGLBLENDPARAMETERINVPROC(glfwGetProcAddress("glBlendParameteriNV"));
  glBlitFramebuffer = PFNGLBLITFRAMEBUFFERPROC(glfwGetProcAddress("glBlitFramebuffer"));
  glBlitFramebufferEXT = PFNGLBLITFRAMEBUFFEREXTPROC(glfwGetProcAddress("glBlitFramebufferEXT"));
  glBlitNamedFramebuffer = PFNGLBLITNAMEDFRAMEBUFFERPROC(glfwGetProcAddress("glBlitNamedFramebuffer"));
  glBufferAddressRangeNV = PFNGLBUFFERADDRESSRANGENVPROC(glfwGetProcAddress("glBufferAddressRangeNV"));
  glBufferData = PFNGLBUFFERDATAPROC(glfwGetProcAddress("glBufferData"));
  glBufferDataARB = PFNGLBUFFERDATAARBPROC(glfwGetProcAddress("glBufferDataARB"));
  glBufferPageCommitmentARB = PFNGLBUFFERPAGECOMMITMENTARBPROC(glfwGetProcAddress("glBufferPageCommitmentARB"));
  glBufferParameteriAPPLE = PFNGLBUFFERPARAMETERIAPPLEPROC(glfwGetProcAddress("glBufferParameteriAPPLE"));
  glBufferStorage = PFNGLBUFFERSTORAGEPROC(glfwGetProcAddress("glBufferStorage"));
  glBufferSubData = PFNGLBUFFERSUBDATAPROC(glfwGetProcAddress("glBufferSubData"));
  glBufferSubDataARB = PFNGLBUFFERSUBDATAARBPROC(glfwGetProcAddress("glBufferSubDataARB"));
  glCallCommandListNV = PFNGLCALLCOMMANDLISTNVPROC(glfwGetProcAddress("glCallCommandListNV"));
  glCheckFramebufferStatus = PFNGLCHECKFRAMEBUFFERSTATUSPROC(glfwGetProcAddress("glCheckFramebufferStatus"));
  glCheckFramebufferStatusEXT = PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC(glfwGetProcAddress("glCheckFramebufferStatusEXT"));
  glCheckNamedFramebufferStatus = PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC(glfwGetProcAddress("glCheckNamedFramebufferStatus"));
  glCheckNamedFramebufferStatusEXT = PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC(glfwGetProcAddress("glCheckNamedFramebufferStatusEXT"));
  glClampColor = PFNGLCLAMPCOLORPROC(glfwGetProcAddress("glClampColor"));
  glClampColorARB = PFNGLCLAMPCOLORARBPROC(glfwGetProcAddress("glClampColorARB"));
  glClearAccumxOES = PFNGLCLEARACCUMXOESPROC(glfwGetProcAddress("glClearAccumxOES"));
  glClearBufferData = PFNGLCLEARBUFFERDATAPROC(glfwGetProcAddress("glClearBufferData"));
  glClearBufferfi = PFNGLCLEARBUFFERFIPROC(glfwGetProcAddress("glClearBufferfi"));
  glClearBufferfv = PFNGLCLEARBUFFERFVPROC(glfwGetProcAddress("glClearBufferfv"));
  glClearBufferiv = PFNGLCLEARBUFFERIVPROC(glfwGetProcAddress("glClearBufferiv"));
  glClearBufferSubData = PFNGLCLEARBUFFERSUBDATAPROC(glfwGetProcAddress("glClearBufferSubData"));
  glClearBufferuiv = PFNGLCLEARBUFFERUIVPROC(glfwGetProcAddress("glClearBufferuiv"));
  glClearColorIiEXT = PFNGLCLEARCOLORIIEXTPROC(glfwGetProcAddress("glClearColorIiEXT"));
  glClearColorIuiEXT = PFNGLCLEARCOLORIUIEXTPROC(glfwGetProcAddress("glClearColorIuiEXT"));
  glClearColorxOES = PFNGLCLEARCOLORXOESPROC(glfwGetProcAddress("glClearColorxOES"));
  glClearDepthdNV = PFNGLCLEARDEPTHDNVPROC(glfwGetProcAddress("glClearDepthdNV"));
  glClearDepthf = PFNGLCLEARDEPTHFPROC(glfwGetProcAddress("glClearDepthf"));
  glClearDepthfOES = PFNGLCLEARDEPTHFOESPROC(glfwGetProcAddress("glClearDepthfOES"));
  glClearDepthxOES = PFNGLCLEARDEPTHXOESPROC(glfwGetProcAddress("glClearDepthxOES"));
  glClearNamedBufferData = PFNGLCLEARNAMEDBUFFERDATAPROC(glfwGetProcAddress("glClearNamedBufferData"));
  glClearNamedBufferDataEXT = PFNGLCLEARNAMEDBUFFERDATAEXTPROC(glfwGetProcAddress("glClearNamedBufferDataEXT"));
  glClearNamedBufferSubData = PFNGLCLEARNAMEDBUFFERSUBDATAPROC(glfwGetProcAddress("glClearNamedBufferSubData"));
  glClearNamedBufferSubDataEXT = PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC(glfwGetProcAddress("glClearNamedBufferSubDataEXT"));
  glClearNamedFramebufferfi = PFNGLCLEARNAMEDFRAMEBUFFERFIPROC(glfwGetProcAddress("glClearNamedFramebufferfi"));
  glClearNamedFramebufferfv = PFNGLCLEARNAMEDFRAMEBUFFERFVPROC(glfwGetProcAddress("glClearNamedFramebufferfv"));
  glClearNamedFramebufferiv = PFNGLCLEARNAMEDFRAMEBUFFERIVPROC(glfwGetProcAddress("glClearNamedFramebufferiv"));
  glClearNamedFramebufferuiv = PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC(glfwGetProcAddress("glClearNamedFramebufferuiv"));
  glClearTexImage = PFNGLCLEARTEXIMAGEPROC(glfwGetProcAddress("glClearTexImage"));
  glClearTexSubImage = PFNGLCLEARTEXSUBIMAGEPROC(glfwGetProcAddress("glClearTexSubImage"));
  glClientActiveTexture = PFNGLCLIENTACTIVETEXTUREPROC(glfwGetProcAddress("glClientActiveTexture"));
  glClientActiveTextureARB = PFNGLCLIENTACTIVETEXTUREARBPROC(glfwGetProcAddress("glClientActiveTextureARB"));
  glClientActiveVertexStreamATI = PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC(glfwGetProcAddress("glClientActiveVertexStreamATI"));
  glClientAttribDefaultEXT = PFNGLCLIENTATTRIBDEFAULTEXTPROC(glfwGetProcAddress("glClientAttribDefaultEXT"));
  glClientWaitSync = PFNGLCLIENTWAITSYNCPROC(glfwGetProcAddress("glClientWaitSync"));
  glClipControl = PFNGLCLIPCONTROLPROC(glfwGetProcAddress("glClipControl"));
  glClipPlanefOES = PFNGLCLIPPLANEFOESPROC(glfwGetProcAddress("glClipPlanefOES"));
  glClipPlanexOES = PFNGLCLIPPLANEXOESPROC(glfwGetProcAddress("glClipPlanexOES"));
  glColor3fVertex3fSUN = PFNGLCOLOR3FVERTEX3FSUNPROC(glfwGetProcAddress("glColor3fVertex3fSUN"));
  glColor3fVertex3fvSUN = PFNGLCOLOR3FVERTEX3FVSUNPROC(glfwGetProcAddress("glColor3fVertex3fvSUN"));
  glColor3hNV = PFNGLCOLOR3HNVPROC(glfwGetProcAddress("glColor3hNV"));
  glColor3hvNV = PFNGLCOLOR3HVNVPROC(glfwGetProcAddress("glColor3hvNV"));
  glColor3xOES = PFNGLCOLOR3XOESPROC(glfwGetProcAddress("glColor3xOES"));
  glColor3xvOES = PFNGLCOLOR3XVOESPROC(glfwGetProcAddress("glColor3xvOES"));
  glColor4fNormal3fVertex3fSUN = PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glColor4fNormal3fVertex3fSUN"));
  glColor4fNormal3fVertex3fvSUN = PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glColor4fNormal3fVertex3fvSUN"));
  glColor4hNV = PFNGLCOLOR4HNVPROC(glfwGetProcAddress("glColor4hNV"));
  glColor4hvNV = PFNGLCOLOR4HVNVPROC(glfwGetProcAddress("glColor4hvNV"));
  glColor4ubVertex2fSUN = PFNGLCOLOR4UBVERTEX2FSUNPROC(glfwGetProcAddress("glColor4ubVertex2fSUN"));
  glColor4ubVertex2fvSUN = PFNGLCOLOR4UBVERTEX2FVSUNPROC(glfwGetProcAddress("glColor4ubVertex2fvSUN"));
  glColor4ubVertex3fSUN = PFNGLCOLOR4UBVERTEX3FSUNPROC(glfwGetProcAddress("glColor4ubVertex3fSUN"));
  glColor4ubVertex3fvSUN = PFNGLCOLOR4UBVERTEX3FVSUNPROC(glfwGetProcAddress("glColor4ubVertex3fvSUN"));
  glColor4xOES = PFNGLCOLOR4XOESPROC(glfwGetProcAddress("glColor4xOES"));
  glColor4xvOES = PFNGLCOLOR4XVOESPROC(glfwGetProcAddress("glColor4xvOES"));
  glColorFormatNV = PFNGLCOLORFORMATNVPROC(glfwGetProcAddress("glColorFormatNV"));
  glColorFragmentOp1ATI = PFNGLCOLORFRAGMENTOP1ATIPROC(glfwGetProcAddress("glColorFragmentOp1ATI"));
  glColorFragmentOp2ATI = PFNGLCOLORFRAGMENTOP2ATIPROC(glfwGetProcAddress("glColorFragmentOp2ATI"));
  glColorFragmentOp3ATI = PFNGLCOLORFRAGMENTOP3ATIPROC(glfwGetProcAddress("glColorFragmentOp3ATI"));
  glColorMaski = PFNGLCOLORMASKIPROC(glfwGetProcAddress("glColorMaski"));
  glColorMaskIndexedEXT = PFNGLCOLORMASKINDEXEDEXTPROC(glfwGetProcAddress("glColorMaskIndexedEXT"));
  glColorP3ui = PFNGLCOLORP3UIPROC(glfwGetProcAddress("glColorP3ui"));
  glColorP3uiv = PFNGLCOLORP3UIVPROC(glfwGetProcAddress("glColorP3uiv"));
  glColorP4ui = PFNGLCOLORP4UIPROC(glfwGetProcAddress("glColorP4ui"));
  glColorP4uiv = PFNGLCOLORP4UIVPROC(glfwGetProcAddress("glColorP4uiv"));
  glColorPointerEXT = PFNGLCOLORPOINTEREXTPROC(glfwGetProcAddress("glColorPointerEXT"));
  glColorPointerListIBM = PFNGLCOLORPOINTERLISTIBMPROC(glfwGetProcAddress("glColorPointerListIBM"));
  glColorPointervINTEL = PFNGLCOLORPOINTERVINTELPROC(glfwGetProcAddress("glColorPointervINTEL"));
  glColorSubTable = PFNGLCOLORSUBTABLEPROC(glfwGetProcAddress("glColorSubTable"));
  glColorSubTableEXT = PFNGLCOLORSUBTABLEEXTPROC(glfwGetProcAddress("glColorSubTableEXT"));
  glColorTable = PFNGLCOLORTABLEPROC(glfwGetProcAddress("glColorTable"));
  glColorTableEXT = PFNGLCOLORTABLEEXTPROC(glfwGetProcAddress("glColorTableEXT"));
  glColorTableParameterfv = PFNGLCOLORTABLEPARAMETERFVPROC(glfwGetProcAddress("glColorTableParameterfv"));
  glColorTableParameterfvSGI = PFNGLCOLORTABLEPARAMETERFVSGIPROC(glfwGetProcAddress("glColorTableParameterfvSGI"));
  glColorTableParameteriv = PFNGLCOLORTABLEPARAMETERIVPROC(glfwGetProcAddress("glColorTableParameteriv"));
  glColorTableParameterivSGI = PFNGLCOLORTABLEPARAMETERIVSGIPROC(glfwGetProcAddress("glColorTableParameterivSGI"));
  glColorTableSGI = PFNGLCOLORTABLESGIPROC(glfwGetProcAddress("glColorTableSGI"));
  glCombinerInputNV = PFNGLCOMBINERINPUTNVPROC(glfwGetProcAddress("glCombinerInputNV"));
  glCombinerOutputNV = PFNGLCOMBINEROUTPUTNVPROC(glfwGetProcAddress("glCombinerOutputNV"));
  glCombinerParameterfNV = PFNGLCOMBINERPARAMETERFNVPROC(glfwGetProcAddress("glCombinerParameterfNV"));
  glCombinerParameterfvNV = PFNGLCOMBINERPARAMETERFVNVPROC(glfwGetProcAddress("glCombinerParameterfvNV"));
  glCombinerParameteriNV = PFNGLCOMBINERPARAMETERINVPROC(glfwGetProcAddress("glCombinerParameteriNV"));
  glCombinerParameterivNV = PFNGLCOMBINERPARAMETERIVNVPROC(glfwGetProcAddress("glCombinerParameterivNV"));
  glCombinerStageParameterfvNV = PFNGLCOMBINERSTAGEPARAMETERFVNVPROC(glfwGetProcAddress("glCombinerStageParameterfvNV"));
  glCommandListSegmentsNV = PFNGLCOMMANDLISTSEGMENTSNVPROC(glfwGetProcAddress("glCommandListSegmentsNV"));
  glCompileCommandListNV = PFNGLCOMPILECOMMANDLISTNVPROC(glfwGetProcAddress("glCompileCommandListNV"));
  glCompileShader = PFNGLCOMPILESHADERPROC(glfwGetProcAddress("glCompileShader"));
  glCompileShaderARB = PFNGLCOMPILESHADERARBPROC(glfwGetProcAddress("glCompileShaderARB"));
  glCompileShaderIncludeARB = PFNGLCOMPILESHADERINCLUDEARBPROC(glfwGetProcAddress("glCompileShaderIncludeARB"));
  glCompressedMultiTexImage1DEXT = PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC(glfwGetProcAddress("glCompressedMultiTexImage1DEXT"));
  glCompressedMultiTexImage2DEXT = PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC(glfwGetProcAddress("glCompressedMultiTexImage2DEXT"));
  glCompressedMultiTexImage3DEXT = PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC(glfwGetProcAddress("glCompressedMultiTexImage3DEXT"));
  glCompressedMultiTexSubImage1DEXT = PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC(glfwGetProcAddress("glCompressedMultiTexSubImage1DEXT"));
  glCompressedMultiTexSubImage2DEXT = PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC(glfwGetProcAddress("glCompressedMultiTexSubImage2DEXT"));
  glCompressedMultiTexSubImage3DEXT = PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC(glfwGetProcAddress("glCompressedMultiTexSubImage3DEXT"));
  glCompressedTexImage1D = PFNGLCOMPRESSEDTEXIMAGE1DPROC(glfwGetProcAddress("glCompressedTexImage1D"));
  glCompressedTexImage1DARB = PFNGLCOMPRESSEDTEXIMAGE1DARBPROC(glfwGetProcAddress("glCompressedTexImage1DARB"));
  glCompressedTexImage2D = PFNGLCOMPRESSEDTEXIMAGE2DPROC(glfwGetProcAddress("glCompressedTexImage2D"));
  glCompressedTexImage2DARB = PFNGLCOMPRESSEDTEXIMAGE2DARBPROC(glfwGetProcAddress("glCompressedTexImage2DARB"));
  glCompressedTexImage3D = PFNGLCOMPRESSEDTEXIMAGE3DPROC(glfwGetProcAddress("glCompressedTexImage3D"));
  glCompressedTexImage3DARB = PFNGLCOMPRESSEDTEXIMAGE3DARBPROC(glfwGetProcAddress("glCompressedTexImage3DARB"));
  glCompressedTexSubImage1D = PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC(glfwGetProcAddress("glCompressedTexSubImage1D"));
  glCompressedTexSubImage1DARB = PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC(glfwGetProcAddress("glCompressedTexSubImage1DARB"));
  glCompressedTexSubImage2D = PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC(glfwGetProcAddress("glCompressedTexSubImage2D"));
  glCompressedTexSubImage2DARB = PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC(glfwGetProcAddress("glCompressedTexSubImage2DARB"));
  glCompressedTexSubImage3D = PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC(glfwGetProcAddress("glCompressedTexSubImage3D"));
  glCompressedTexSubImage3DARB = PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC(glfwGetProcAddress("glCompressedTexSubImage3DARB"));
  glCompressedTextureImage1DEXT = PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC(glfwGetProcAddress("glCompressedTextureImage1DEXT"));
  glCompressedTextureImage2DEXT = PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC(glfwGetProcAddress("glCompressedTextureImage2DEXT"));
  glCompressedTextureImage3DEXT = PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC(glfwGetProcAddress("glCompressedTextureImage3DEXT"));
  glCompressedTextureSubImage1D = PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC(glfwGetProcAddress("glCompressedTextureSubImage1D"));
  glCompressedTextureSubImage1DEXT = PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC(glfwGetProcAddress("glCompressedTextureSubImage1DEXT"));
  glCompressedTextureSubImage2D = PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC(glfwGetProcAddress("glCompressedTextureSubImage2D"));
  glCompressedTextureSubImage2DEXT = PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC(glfwGetProcAddress("glCompressedTextureSubImage2DEXT"));
  glCompressedTextureSubImage3D = PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC(glfwGetProcAddress("glCompressedTextureSubImage3D"));
  glCompressedTextureSubImage3DEXT = PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC(glfwGetProcAddress("glCompressedTextureSubImage3DEXT"));
  glConservativeRasterParameterfNV = PFNGLCONSERVATIVERASTERPARAMETERFNVPROC(glfwGetProcAddress("glConservativeRasterParameterfNV"));
  glConservativeRasterParameteriNV = PFNGLCONSERVATIVERASTERPARAMETERINVPROC(glfwGetProcAddress("glConservativeRasterParameteriNV"));
  glConvolutionFilter1D = PFNGLCONVOLUTIONFILTER1DPROC(glfwGetProcAddress("glConvolutionFilter1D"));
  glConvolutionFilter1DEXT = PFNGLCONVOLUTIONFILTER1DEXTPROC(glfwGetProcAddress("glConvolutionFilter1DEXT"));
  glConvolutionFilter2D = PFNGLCONVOLUTIONFILTER2DPROC(glfwGetProcAddress("glConvolutionFilter2D"));
  glConvolutionFilter2DEXT = PFNGLCONVOLUTIONFILTER2DEXTPROC(glfwGetProcAddress("glConvolutionFilter2DEXT"));
  glConvolutionParameterf = PFNGLCONVOLUTIONPARAMETERFPROC(glfwGetProcAddress("glConvolutionParameterf"));
  glConvolutionParameterfEXT = PFNGLCONVOLUTIONPARAMETERFEXTPROC(glfwGetProcAddress("glConvolutionParameterfEXT"));
  glConvolutionParameterfv = PFNGLCONVOLUTIONPARAMETERFVPROC(glfwGetProcAddress("glConvolutionParameterfv"));
  glConvolutionParameterfvEXT = PFNGLCONVOLUTIONPARAMETERFVEXTPROC(glfwGetProcAddress("glConvolutionParameterfvEXT"));
  glConvolutionParameteri = PFNGLCONVOLUTIONPARAMETERIPROC(glfwGetProcAddress("glConvolutionParameteri"));
  glConvolutionParameteriEXT = PFNGLCONVOLUTIONPARAMETERIEXTPROC(glfwGetProcAddress("glConvolutionParameteriEXT"));
  glConvolutionParameteriv = PFNGLCONVOLUTIONPARAMETERIVPROC(glfwGetProcAddress("glConvolutionParameteriv"));
  glConvolutionParameterivEXT = PFNGLCONVOLUTIONPARAMETERIVEXTPROC(glfwGetProcAddress("glConvolutionParameterivEXT"));
  glConvolutionParameterxOES = PFNGLCONVOLUTIONPARAMETERXOESPROC(glfwGetProcAddress("glConvolutionParameterxOES"));
  glConvolutionParameterxvOES = PFNGLCONVOLUTIONPARAMETERXVOESPROC(glfwGetProcAddress("glConvolutionParameterxvOES"));
  glCopyBufferSubData = PFNGLCOPYBUFFERSUBDATAPROC(glfwGetProcAddress("glCopyBufferSubData"));
  glCopyColorSubTable = PFNGLCOPYCOLORSUBTABLEPROC(glfwGetProcAddress("glCopyColorSubTable"));
  glCopyColorSubTableEXT = PFNGLCOPYCOLORSUBTABLEEXTPROC(glfwGetProcAddress("glCopyColorSubTableEXT"));
  glCopyColorTable = PFNGLCOPYCOLORTABLEPROC(glfwGetProcAddress("glCopyColorTable"));
  glCopyColorTableSGI = PFNGLCOPYCOLORTABLESGIPROC(glfwGetProcAddress("glCopyColorTableSGI"));
  glCopyConvolutionFilter1D = PFNGLCOPYCONVOLUTIONFILTER1DPROC(glfwGetProcAddress("glCopyConvolutionFilter1D"));
  glCopyConvolutionFilter1DEXT = PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC(glfwGetProcAddress("glCopyConvolutionFilter1DEXT"));
  glCopyConvolutionFilter2D = PFNGLCOPYCONVOLUTIONFILTER2DPROC(glfwGetProcAddress("glCopyConvolutionFilter2D"));
  glCopyConvolutionFilter2DEXT = PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC(glfwGetProcAddress("glCopyConvolutionFilter2DEXT"));
  glCopyImageSubData = PFNGLCOPYIMAGESUBDATAPROC(glfwGetProcAddress("glCopyImageSubData"));
  glCopyImageSubDataNV = PFNGLCOPYIMAGESUBDATANVPROC(glfwGetProcAddress("glCopyImageSubDataNV"));
  glCopyMultiTexImage1DEXT = PFNGLCOPYMULTITEXIMAGE1DEXTPROC(glfwGetProcAddress("glCopyMultiTexImage1DEXT"));
  glCopyMultiTexImage2DEXT = PFNGLCOPYMULTITEXIMAGE2DEXTPROC(glfwGetProcAddress("glCopyMultiTexImage2DEXT"));
  glCopyMultiTexSubImage1DEXT = PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC(glfwGetProcAddress("glCopyMultiTexSubImage1DEXT"));
  glCopyMultiTexSubImage2DEXT = PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC(glfwGetProcAddress("glCopyMultiTexSubImage2DEXT"));
  glCopyMultiTexSubImage3DEXT = PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC(glfwGetProcAddress("glCopyMultiTexSubImage3DEXT"));
  glCopyNamedBufferSubData = PFNGLCOPYNAMEDBUFFERSUBDATAPROC(glfwGetProcAddress("glCopyNamedBufferSubData"));
  glCopyPathNV = PFNGLCOPYPATHNVPROC(glfwGetProcAddress("glCopyPathNV"));
  glCopyTexImage1DEXT = PFNGLCOPYTEXIMAGE1DEXTPROC(glfwGetProcAddress("glCopyTexImage1DEXT"));
  glCopyTexImage2DEXT = PFNGLCOPYTEXIMAGE2DEXTPROC(glfwGetProcAddress("glCopyTexImage2DEXT"));
  glCopyTexSubImage1DEXT = PFNGLCOPYTEXSUBIMAGE1DEXTPROC(glfwGetProcAddress("glCopyTexSubImage1DEXT"));
  glCopyTexSubImage2DEXT = PFNGLCOPYTEXSUBIMAGE2DEXTPROC(glfwGetProcAddress("glCopyTexSubImage2DEXT"));
  glCopyTexSubImage3D = PFNGLCOPYTEXSUBIMAGE3DPROC(glfwGetProcAddress("glCopyTexSubImage3D"));
  glCopyTexSubImage3DEXT = PFNGLCOPYTEXSUBIMAGE3DEXTPROC(glfwGetProcAddress("glCopyTexSubImage3DEXT"));
  glCopyTextureImage1DEXT = PFNGLCOPYTEXTUREIMAGE1DEXTPROC(glfwGetProcAddress("glCopyTextureImage1DEXT"));
  glCopyTextureImage2DEXT = PFNGLCOPYTEXTUREIMAGE2DEXTPROC(glfwGetProcAddress("glCopyTextureImage2DEXT"));
  glCopyTextureSubImage1D = PFNGLCOPYTEXTURESUBIMAGE1DPROC(glfwGetProcAddress("glCopyTextureSubImage1D"));
  glCopyTextureSubImage1DEXT = PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC(glfwGetProcAddress("glCopyTextureSubImage1DEXT"));
  glCopyTextureSubImage2D = PFNGLCOPYTEXTURESUBIMAGE2DPROC(glfwGetProcAddress("glCopyTextureSubImage2D"));
  glCopyTextureSubImage2DEXT = PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC(glfwGetProcAddress("glCopyTextureSubImage2DEXT"));
  glCopyTextureSubImage3D = PFNGLCOPYTEXTURESUBIMAGE3DPROC(glfwGetProcAddress("glCopyTextureSubImage3D"));
  glCopyTextureSubImage3DEXT = PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC(glfwGetProcAddress("glCopyTextureSubImage3DEXT"));
  glCoverageModulationNV = PFNGLCOVERAGEMODULATIONNVPROC(glfwGetProcAddress("glCoverageModulationNV"));
  glCoverageModulationTableNV = PFNGLCOVERAGEMODULATIONTABLENVPROC(glfwGetProcAddress("glCoverageModulationTableNV"));
  glCoverFillPathInstancedNV = PFNGLCOVERFILLPATHINSTANCEDNVPROC(glfwGetProcAddress("glCoverFillPathInstancedNV"));
  glCoverFillPathNV = PFNGLCOVERFILLPATHNVPROC(glfwGetProcAddress("glCoverFillPathNV"));
  glCoverStrokePathInstancedNV = PFNGLCOVERSTROKEPATHINSTANCEDNVPROC(glfwGetProcAddress("glCoverStrokePathInstancedNV"));
  glCoverStrokePathNV = PFNGLCOVERSTROKEPATHNVPROC(glfwGetProcAddress("glCoverStrokePathNV"));
  glCreateBuffers = PFNGLCREATEBUFFERSPROC(glfwGetProcAddress("glCreateBuffers"));
  glCreateCommandListsNV = PFNGLCREATECOMMANDLISTSNVPROC(glfwGetProcAddress("glCreateCommandListsNV"));
  glCreateFramebuffers = PFNGLCREATEFRAMEBUFFERSPROC(glfwGetProcAddress("glCreateFramebuffers"));
  glCreatePerfQueryINTEL = PFNGLCREATEPERFQUERYINTELPROC(glfwGetProcAddress("glCreatePerfQueryINTEL"));
  glCreateProgram = PFNGLCREATEPROGRAMPROC(glfwGetProcAddress("glCreateProgram"));
  glCreateProgramObjectARB = PFNGLCREATEPROGRAMOBJECTARBPROC(glfwGetProcAddress("glCreateProgramObjectARB"));
  glCreateProgramPipelines = PFNGLCREATEPROGRAMPIPELINESPROC(glfwGetProcAddress("glCreateProgramPipelines"));
  glCreateQueries = PFNGLCREATEQUERIESPROC(glfwGetProcAddress("glCreateQueries"));
  glCreateRenderbuffers = PFNGLCREATERENDERBUFFERSPROC(glfwGetProcAddress("glCreateRenderbuffers"));
  glCreateSamplers = PFNGLCREATESAMPLERSPROC(glfwGetProcAddress("glCreateSamplers"));
  glCreateShader = PFNGLCREATESHADERPROC(glfwGetProcAddress("glCreateShader"));
  glCreateShaderObjectARB = PFNGLCREATESHADEROBJECTARBPROC(glfwGetProcAddress("glCreateShaderObjectARB"));
  glCreateShaderProgramEXT = PFNGLCREATESHADERPROGRAMEXTPROC(glfwGetProcAddress("glCreateShaderProgramEXT"));
  glCreateShaderProgramv = PFNGLCREATESHADERPROGRAMVPROC(glfwGetProcAddress("glCreateShaderProgramv"));
  glCreateStatesNV = PFNGLCREATESTATESNVPROC(glfwGetProcAddress("glCreateStatesNV"));
  glCreateSyncFromCLeventARB = PFNGLCREATESYNCFROMCLEVENTARBPROC(glfwGetProcAddress("glCreateSyncFromCLeventARB"));
  glCreateTextures = PFNGLCREATETEXTURESPROC(glfwGetProcAddress("glCreateTextures"));
  glCreateTransformFeedbacks = PFNGLCREATETRANSFORMFEEDBACKSPROC(glfwGetProcAddress("glCreateTransformFeedbacks"));
  glCreateVertexArrays = PFNGLCREATEVERTEXARRAYSPROC(glfwGetProcAddress("glCreateVertexArrays"));
  glCullParameterdvEXT = PFNGLCULLPARAMETERDVEXTPROC(glfwGetProcAddress("glCullParameterdvEXT"));
  glCullParameterfvEXT = PFNGLCULLPARAMETERFVEXTPROC(glfwGetProcAddress("glCullParameterfvEXT"));
  glCurrentPaletteMatrixARB = PFNGLCURRENTPALETTEMATRIXARBPROC(glfwGetProcAddress("glCurrentPaletteMatrixARB"));
  glDebugMessageCallback = PFNGLDEBUGMESSAGECALLBACKPROC(glfwGetProcAddress("glDebugMessageCallback"));
  glDebugMessageCallbackAMD = PFNGLDEBUGMESSAGECALLBACKAMDPROC(glfwGetProcAddress("glDebugMessageCallbackAMD"));
  glDebugMessageCallbackARB = PFNGLDEBUGMESSAGECALLBACKARBPROC(glfwGetProcAddress("glDebugMessageCallbackARB"));
  glDebugMessageControl = PFNGLDEBUGMESSAGECONTROLPROC(glfwGetProcAddress("glDebugMessageControl"));
  glDebugMessageControlARB = PFNGLDEBUGMESSAGECONTROLARBPROC(glfwGetProcAddress("glDebugMessageControlARB"));
  glDebugMessageEnableAMD = PFNGLDEBUGMESSAGEENABLEAMDPROC(glfwGetProcAddress("glDebugMessageEnableAMD"));
  glDebugMessageInsert = PFNGLDEBUGMESSAGEINSERTPROC(glfwGetProcAddress("glDebugMessageInsert"));
  glDebugMessageInsertAMD = PFNGLDEBUGMESSAGEINSERTAMDPROC(glfwGetProcAddress("glDebugMessageInsertAMD"));
  glDebugMessageInsertARB = PFNGLDEBUGMESSAGEINSERTARBPROC(glfwGetProcAddress("glDebugMessageInsertARB"));
  glDeformationMap3dSGIX = PFNGLDEFORMATIONMAP3DSGIXPROC(glfwGetProcAddress("glDeformationMap3dSGIX"));
  glDeformationMap3fSGIX = PFNGLDEFORMATIONMAP3FSGIXPROC(glfwGetProcAddress("glDeformationMap3fSGIX"));
  glDeformSGIX = PFNGLDEFORMSGIXPROC(glfwGetProcAddress("glDeformSGIX"));
  glDeleteAsyncMarkersSGIX = PFNGLDELETEASYNCMARKERSSGIXPROC(glfwGetProcAddress("glDeleteAsyncMarkersSGIX"));
  glDeleteBuffers = PFNGLDELETEBUFFERSPROC(glfwGetProcAddress("glDeleteBuffers"));
  glDeleteBuffersARB = PFNGLDELETEBUFFERSARBPROC(glfwGetProcAddress("glDeleteBuffersARB"));
  glDeleteCommandListsNV = PFNGLDELETECOMMANDLISTSNVPROC(glfwGetProcAddress("glDeleteCommandListsNV"));
  glDeleteFencesAPPLE = PFNGLDELETEFENCESAPPLEPROC(glfwGetProcAddress("glDeleteFencesAPPLE"));
  glDeleteFencesNV = PFNGLDELETEFENCESNVPROC(glfwGetProcAddress("glDeleteFencesNV"));
  glDeleteFragmentShaderATI = PFNGLDELETEFRAGMENTSHADERATIPROC(glfwGetProcAddress("glDeleteFragmentShaderATI"));
  glDeleteFramebuffers = PFNGLDELETEFRAMEBUFFERSPROC(glfwGetProcAddress("glDeleteFramebuffers"));
  glDeleteFramebuffersEXT = PFNGLDELETEFRAMEBUFFERSEXTPROC(glfwGetProcAddress("glDeleteFramebuffersEXT"));
  glDeleteNamedStringARB = PFNGLDELETENAMEDSTRINGARBPROC(glfwGetProcAddress("glDeleteNamedStringARB"));
  glDeleteNamesAMD = PFNGLDELETENAMESAMDPROC(glfwGetProcAddress("glDeleteNamesAMD"));
  glDeleteObjectARB = PFNGLDELETEOBJECTARBPROC(glfwGetProcAddress("glDeleteObjectARB"));
  glDeleteOcclusionQueriesNV = PFNGLDELETEOCCLUSIONQUERIESNVPROC(glfwGetProcAddress("glDeleteOcclusionQueriesNV"));
  glDeletePathsNV = PFNGLDELETEPATHSNVPROC(glfwGetProcAddress("glDeletePathsNV"));
  glDeletePerfMonitorsAMD = PFNGLDELETEPERFMONITORSAMDPROC(glfwGetProcAddress("glDeletePerfMonitorsAMD"));
  glDeletePerfQueryINTEL = PFNGLDELETEPERFQUERYINTELPROC(glfwGetProcAddress("glDeletePerfQueryINTEL"));
  glDeleteProgram = PFNGLDELETEPROGRAMPROC(glfwGetProcAddress("glDeleteProgram"));
  glDeleteProgramPipelines = PFNGLDELETEPROGRAMPIPELINESPROC(glfwGetProcAddress("glDeleteProgramPipelines"));
  glDeleteProgramsARB = PFNGLDELETEPROGRAMSARBPROC(glfwGetProcAddress("glDeleteProgramsARB"));
  glDeleteProgramsNV = PFNGLDELETEPROGRAMSNVPROC(glfwGetProcAddress("glDeleteProgramsNV"));
  glDeleteQueries = PFNGLDELETEQUERIESPROC(glfwGetProcAddress("glDeleteQueries"));
  glDeleteQueriesARB = PFNGLDELETEQUERIESARBPROC(glfwGetProcAddress("glDeleteQueriesARB"));
  glDeleteRenderbuffers = PFNGLDELETERENDERBUFFERSPROC(glfwGetProcAddress("glDeleteRenderbuffers"));
  glDeleteRenderbuffersEXT = PFNGLDELETERENDERBUFFERSEXTPROC(glfwGetProcAddress("glDeleteRenderbuffersEXT"));
  glDeleteSamplers = PFNGLDELETESAMPLERSPROC(glfwGetProcAddress("glDeleteSamplers"));
  glDeleteShader = PFNGLDELETESHADERPROC(glfwGetProcAddress("glDeleteShader"));
  glDeleteStatesNV = PFNGLDELETESTATESNVPROC(glfwGetProcAddress("glDeleteStatesNV"));
  glDeleteSync = PFNGLDELETESYNCPROC(glfwGetProcAddress("glDeleteSync"));
  glDeleteTexturesEXT = PFNGLDELETETEXTURESEXTPROC(glfwGetProcAddress("glDeleteTexturesEXT"));
  glDeleteTransformFeedbacks = PFNGLDELETETRANSFORMFEEDBACKSPROC(glfwGetProcAddress("glDeleteTransformFeedbacks"));
  glDeleteTransformFeedbacksNV = PFNGLDELETETRANSFORMFEEDBACKSNVPROC(glfwGetProcAddress("glDeleteTransformFeedbacksNV"));
  glDeleteVertexArrays = PFNGLDELETEVERTEXARRAYSPROC(glfwGetProcAddress("glDeleteVertexArrays"));
  glDeleteVertexArraysAPPLE = PFNGLDELETEVERTEXARRAYSAPPLEPROC(glfwGetProcAddress("glDeleteVertexArraysAPPLE"));
  glDeleteVertexShaderEXT = PFNGLDELETEVERTEXSHADEREXTPROC(glfwGetProcAddress("glDeleteVertexShaderEXT"));
  glDepthBoundsdNV = PFNGLDEPTHBOUNDSDNVPROC(glfwGetProcAddress("glDepthBoundsdNV"));
  glDepthBoundsEXT = PFNGLDEPTHBOUNDSEXTPROC(glfwGetProcAddress("glDepthBoundsEXT"));
  glDepthRangeArrayv = PFNGLDEPTHRANGEARRAYVPROC(glfwGetProcAddress("glDepthRangeArrayv"));
  glDepthRangedNV = PFNGLDEPTHRANGEDNVPROC(glfwGetProcAddress("glDepthRangedNV"));
  glDepthRangef = PFNGLDEPTHRANGEFPROC(glfwGetProcAddress("glDepthRangef"));
  glDepthRangefOES = PFNGLDEPTHRANGEFOESPROC(glfwGetProcAddress("glDepthRangefOES"));
  glDepthRangeIndexed = PFNGLDEPTHRANGEINDEXEDPROC(glfwGetProcAddress("glDepthRangeIndexed"));
  glDepthRangexOES = PFNGLDEPTHRANGEXOESPROC(glfwGetProcAddress("glDepthRangexOES"));
  glDetachObjectARB = PFNGLDETACHOBJECTARBPROC(glfwGetProcAddress("glDetachObjectARB"));
  glDetachShader = PFNGLDETACHSHADERPROC(glfwGetProcAddress("glDetachShader"));
  glDetailTexFuncSGIS = PFNGLDETAILTEXFUNCSGISPROC(glfwGetProcAddress("glDetailTexFuncSGIS"));
  glDisableClientStateiEXT = PFNGLDISABLECLIENTSTATEIEXTPROC(glfwGetProcAddress("glDisableClientStateiEXT"));
  glDisableClientStateIndexedEXT = PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC(glfwGetProcAddress("glDisableClientStateIndexedEXT"));
  glDisablei = PFNGLDISABLEIPROC(glfwGetProcAddress("glDisablei"));
  glDisableIndexedEXT = PFNGLDISABLEINDEXEDEXTPROC(glfwGetProcAddress("glDisableIndexedEXT"));
  glDisableVariantClientStateEXT = PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC(glfwGetProcAddress("glDisableVariantClientStateEXT"));
  glDisableVertexArrayAttrib = PFNGLDISABLEVERTEXARRAYATTRIBPROC(glfwGetProcAddress("glDisableVertexArrayAttrib"));
  glDisableVertexArrayAttribEXT = PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC(glfwGetProcAddress("glDisableVertexArrayAttribEXT"));
  glDisableVertexArrayEXT = PFNGLDISABLEVERTEXARRAYEXTPROC(glfwGetProcAddress("glDisableVertexArrayEXT"));
  glDisableVertexAttribAPPLE = PFNGLDISABLEVERTEXATTRIBAPPLEPROC(glfwGetProcAddress("glDisableVertexAttribAPPLE"));
  glDisableVertexAttribArray = PFNGLDISABLEVERTEXATTRIBARRAYPROC(glfwGetProcAddress("glDisableVertexAttribArray"));
  glDisableVertexAttribArrayARB = PFNGLDISABLEVERTEXATTRIBARRAYARBPROC(glfwGetProcAddress("glDisableVertexAttribArrayARB"));
  glDispatchCompute = PFNGLDISPATCHCOMPUTEPROC(glfwGetProcAddress("glDispatchCompute"));
  glDispatchComputeGroupSizeARB = PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC(glfwGetProcAddress("glDispatchComputeGroupSizeARB"));
  glDispatchComputeIndirect = PFNGLDISPATCHCOMPUTEINDIRECTPROC(glfwGetProcAddress("glDispatchComputeIndirect"));
  glDrawArraysEXT = PFNGLDRAWARRAYSEXTPROC(glfwGetProcAddress("glDrawArraysEXT"));
  glDrawArraysIndirect = PFNGLDRAWARRAYSINDIRECTPROC(glfwGetProcAddress("glDrawArraysIndirect"));
  glDrawArraysInstanced = PFNGLDRAWARRAYSINSTANCEDPROC(glfwGetProcAddress("glDrawArraysInstanced"));
  glDrawArraysInstancedARB = PFNGLDRAWARRAYSINSTANCEDARBPROC(glfwGetProcAddress("glDrawArraysInstancedARB"));
  glDrawArraysInstancedBaseInstance = PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC(glfwGetProcAddress("glDrawArraysInstancedBaseInstance"));
  glDrawArraysInstancedEXT = PFNGLDRAWARRAYSINSTANCEDEXTPROC(glfwGetProcAddress("glDrawArraysInstancedEXT"));
  glDrawBuffers = PFNGLDRAWBUFFERSPROC(glfwGetProcAddress("glDrawBuffers"));
  glDrawBuffersARB = PFNGLDRAWBUFFERSARBPROC(glfwGetProcAddress("glDrawBuffersARB"));
  glDrawBuffersATI = PFNGLDRAWBUFFERSATIPROC(glfwGetProcAddress("glDrawBuffersATI"));
  glDrawCommandsAddressNV = PFNGLDRAWCOMMANDSADDRESSNVPROC(glfwGetProcAddress("glDrawCommandsAddressNV"));
  glDrawCommandsNV = PFNGLDRAWCOMMANDSNVPROC(glfwGetProcAddress("glDrawCommandsNV"));
  glDrawCommandsStatesAddressNV = PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC(glfwGetProcAddress("glDrawCommandsStatesAddressNV"));
  glDrawCommandsStatesNV = PFNGLDRAWCOMMANDSSTATESNVPROC(glfwGetProcAddress("glDrawCommandsStatesNV"));
  glDrawElementArrayAPPLE = PFNGLDRAWELEMENTARRAYAPPLEPROC(glfwGetProcAddress("glDrawElementArrayAPPLE"));
  glDrawElementArrayATI = PFNGLDRAWELEMENTARRAYATIPROC(glfwGetProcAddress("glDrawElementArrayATI"));
  glDrawElementsBaseVertex = PFNGLDRAWELEMENTSBASEVERTEXPROC(glfwGetProcAddress("glDrawElementsBaseVertex"));
  glDrawElementsIndirect = PFNGLDRAWELEMENTSINDIRECTPROC(glfwGetProcAddress("glDrawElementsIndirect"));
  glDrawElementsInstanced = PFNGLDRAWELEMENTSINSTANCEDPROC(glfwGetProcAddress("glDrawElementsInstanced"));
  glDrawElementsInstancedARB = PFNGLDRAWELEMENTSINSTANCEDARBPROC(glfwGetProcAddress("glDrawElementsInstancedARB"));
  glDrawElementsInstancedBaseInstance = PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC(glfwGetProcAddress("glDrawElementsInstancedBaseInstance"));
  glDrawElementsInstancedBaseVertex = PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC(glfwGetProcAddress("glDrawElementsInstancedBaseVertex"));
  glDrawElementsInstancedBaseVertexBaseInstance = PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC(glfwGetProcAddress("glDrawElementsInstancedBaseVertexBaseInstance"));
  glDrawElementsInstancedEXT = PFNGLDRAWELEMENTSINSTANCEDEXTPROC(glfwGetProcAddress("glDrawElementsInstancedEXT"));
  glDrawMeshArraysSUN = PFNGLDRAWMESHARRAYSSUNPROC(glfwGetProcAddress("glDrawMeshArraysSUN"));
  glDrawRangeElementArrayAPPLE = PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC(glfwGetProcAddress("glDrawRangeElementArrayAPPLE"));
  glDrawRangeElementArrayATI = PFNGLDRAWRANGEELEMENTARRAYATIPROC(glfwGetProcAddress("glDrawRangeElementArrayATI"));
  glDrawRangeElements = PFNGLDRAWRANGEELEMENTSPROC(glfwGetProcAddress("glDrawRangeElements"));
  glDrawRangeElementsBaseVertex = PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC(glfwGetProcAddress("glDrawRangeElementsBaseVertex"));
  glDrawRangeElementsEXT = PFNGLDRAWRANGEELEMENTSEXTPROC(glfwGetProcAddress("glDrawRangeElementsEXT"));
  glDrawTextureNV = PFNGLDRAWTEXTURENVPROC(glfwGetProcAddress("glDrawTextureNV"));
  glDrawTransformFeedback = PFNGLDRAWTRANSFORMFEEDBACKPROC(glfwGetProcAddress("glDrawTransformFeedback"));
  glDrawTransformFeedbackInstanced = PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC(glfwGetProcAddress("glDrawTransformFeedbackInstanced"));
  glDrawTransformFeedbackNV = PFNGLDRAWTRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glDrawTransformFeedbackNV"));
  glDrawTransformFeedbackStream = PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC(glfwGetProcAddress("glDrawTransformFeedbackStream"));
  glDrawTransformFeedbackStreamInstanced = PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC(glfwGetProcAddress("glDrawTransformFeedbackStreamInstanced"));
  glDrawVkImageNV = PFNGLDRAWVKIMAGENVPROC(glfwGetProcAddress("glDrawVkImageNV"));
  glEdgeFlagFormatNV = PFNGLEDGEFLAGFORMATNVPROC(glfwGetProcAddress("glEdgeFlagFormatNV"));
  glEdgeFlagPointerEXT = PFNGLEDGEFLAGPOINTEREXTPROC(glfwGetProcAddress("glEdgeFlagPointerEXT"));
  glEdgeFlagPointerListIBM = PFNGLEDGEFLAGPOINTERLISTIBMPROC(glfwGetProcAddress("glEdgeFlagPointerListIBM"));
  glElementPointerAPPLE = PFNGLELEMENTPOINTERAPPLEPROC(glfwGetProcAddress("glElementPointerAPPLE"));
  glElementPointerATI = PFNGLELEMENTPOINTERATIPROC(glfwGetProcAddress("glElementPointerATI"));
  glEnableClientStateiEXT = PFNGLENABLECLIENTSTATEIEXTPROC(glfwGetProcAddress("glEnableClientStateiEXT"));
  glEnableClientStateIndexedEXT = PFNGLENABLECLIENTSTATEINDEXEDEXTPROC(glfwGetProcAddress("glEnableClientStateIndexedEXT"));
  glEnablei = PFNGLENABLEIPROC(glfwGetProcAddress("glEnablei"));
  glEnableIndexedEXT = PFNGLENABLEINDEXEDEXTPROC(glfwGetProcAddress("glEnableIndexedEXT"));
  glEnableVariantClientStateEXT = PFNGLENABLEVARIANTCLIENTSTATEEXTPROC(glfwGetProcAddress("glEnableVariantClientStateEXT"));
  glEnableVertexArrayAttrib = PFNGLENABLEVERTEXARRAYATTRIBPROC(glfwGetProcAddress("glEnableVertexArrayAttrib"));
  glEnableVertexArrayAttribEXT = PFNGLENABLEVERTEXARRAYATTRIBEXTPROC(glfwGetProcAddress("glEnableVertexArrayAttribEXT"));
  glEnableVertexArrayEXT = PFNGLENABLEVERTEXARRAYEXTPROC(glfwGetProcAddress("glEnableVertexArrayEXT"));
  glEnableVertexAttribAPPLE = PFNGLENABLEVERTEXATTRIBAPPLEPROC(glfwGetProcAddress("glEnableVertexAttribAPPLE"));
  glEnableVertexAttribArray = PFNGLENABLEVERTEXATTRIBARRAYPROC(glfwGetProcAddress("glEnableVertexAttribArray"));
  glEnableVertexAttribArrayARB = PFNGLENABLEVERTEXATTRIBARRAYARBPROC(glfwGetProcAddress("glEnableVertexAttribArrayARB"));
  glEndConditionalRender = PFNGLENDCONDITIONALRENDERPROC(glfwGetProcAddress("glEndConditionalRender"));
  glEndConditionalRenderNV = PFNGLENDCONDITIONALRENDERNVPROC(glfwGetProcAddress("glEndConditionalRenderNV"));
  glEndConditionalRenderNVX = PFNGLENDCONDITIONALRENDERNVXPROC(glfwGetProcAddress("glEndConditionalRenderNVX"));
  glEndFragmentShaderATI = PFNGLENDFRAGMENTSHADERATIPROC(glfwGetProcAddress("glEndFragmentShaderATI"));
  glEndOcclusionQueryNV = PFNGLENDOCCLUSIONQUERYNVPROC(glfwGetProcAddress("glEndOcclusionQueryNV"));
  glEndPerfMonitorAMD = PFNGLENDPERFMONITORAMDPROC(glfwGetProcAddress("glEndPerfMonitorAMD"));
  glEndPerfQueryINTEL = PFNGLENDPERFQUERYINTELPROC(glfwGetProcAddress("glEndPerfQueryINTEL"));
  glEndQuery = PFNGLENDQUERYPROC(glfwGetProcAddress("glEndQuery"));
  glEndQueryARB = PFNGLENDQUERYARBPROC(glfwGetProcAddress("glEndQueryARB"));
  glEndQueryIndexed = PFNGLENDQUERYINDEXEDPROC(glfwGetProcAddress("glEndQueryIndexed"));
  glEndTransformFeedback = PFNGLENDTRANSFORMFEEDBACKPROC(glfwGetProcAddress("glEndTransformFeedback"));
  glEndTransformFeedbackEXT = PFNGLENDTRANSFORMFEEDBACKEXTPROC(glfwGetProcAddress("glEndTransformFeedbackEXT"));
  glEndTransformFeedbackNV = PFNGLENDTRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glEndTransformFeedbackNV"));
  glEndVertexShaderEXT = PFNGLENDVERTEXSHADEREXTPROC(glfwGetProcAddress("glEndVertexShaderEXT"));
  glEndVideoCaptureNV = PFNGLENDVIDEOCAPTURENVPROC(glfwGetProcAddress("glEndVideoCaptureNV"));
  glEvalCoord1xOES = PFNGLEVALCOORD1XOESPROC(glfwGetProcAddress("glEvalCoord1xOES"));
  glEvalCoord1xvOES = PFNGLEVALCOORD1XVOESPROC(glfwGetProcAddress("glEvalCoord1xvOES"));
  glEvalCoord2xOES = PFNGLEVALCOORD2XOESPROC(glfwGetProcAddress("glEvalCoord2xOES"));
  glEvalCoord2xvOES = PFNGLEVALCOORD2XVOESPROC(glfwGetProcAddress("glEvalCoord2xvOES"));
  glEvalMapsNV = PFNGLEVALMAPSNVPROC(glfwGetProcAddress("glEvalMapsNV"));
  glEvaluateDepthValuesARB = PFNGLEVALUATEDEPTHVALUESARBPROC(glfwGetProcAddress("glEvaluateDepthValuesARB"));
  glExecuteProgramNV = PFNGLEXECUTEPROGRAMNVPROC(glfwGetProcAddress("glExecuteProgramNV"));
  glExtractComponentEXT = PFNGLEXTRACTCOMPONENTEXTPROC(glfwGetProcAddress("glExtractComponentEXT"));
  glFeedbackBufferxOES = PFNGLFEEDBACKBUFFERXOESPROC(glfwGetProcAddress("glFeedbackBufferxOES"));
  glFenceSync = PFNGLFENCESYNCPROC(glfwGetProcAddress("glFenceSync"));
  glFinalCombinerInputNV = PFNGLFINALCOMBINERINPUTNVPROC(glfwGetProcAddress("glFinalCombinerInputNV"));
  glFinishAsyncSGIX = PFNGLFINISHASYNCSGIXPROC(glfwGetProcAddress("glFinishAsyncSGIX"));
  glFinishFenceAPPLE = PFNGLFINISHFENCEAPPLEPROC(glfwGetProcAddress("glFinishFenceAPPLE"));
  glFinishFenceNV = PFNGLFINISHFENCENVPROC(glfwGetProcAddress("glFinishFenceNV"));
  glFinishObjectAPPLE = PFNGLFINISHOBJECTAPPLEPROC(glfwGetProcAddress("glFinishObjectAPPLE"));
  glFinishTextureSUNX = PFNGLFINISHTEXTURESUNXPROC(glfwGetProcAddress("glFinishTextureSUNX"));
  glFlushMappedBufferRange = PFNGLFLUSHMAPPEDBUFFERRANGEPROC(glfwGetProcAddress("glFlushMappedBufferRange"));
  glFlushMappedBufferRangeAPPLE = PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC(glfwGetProcAddress("glFlushMappedBufferRangeAPPLE"));
  glFlushMappedNamedBufferRange = PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC(glfwGetProcAddress("glFlushMappedNamedBufferRange"));
  glFlushMappedNamedBufferRangeEXT = PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC(glfwGetProcAddress("glFlushMappedNamedBufferRangeEXT"));
  glFlushPixelDataRangeNV = PFNGLFLUSHPIXELDATARANGENVPROC(glfwGetProcAddress("glFlushPixelDataRangeNV"));
  glFlushRasterSGIX = PFNGLFLUSHRASTERSGIXPROC(glfwGetProcAddress("glFlushRasterSGIX"));
  glFlushStaticDataIBM = PFNGLFLUSHSTATICDATAIBMPROC(glfwGetProcAddress("glFlushStaticDataIBM"));
  glFlushVertexArrayRangeAPPLE = PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC(glfwGetProcAddress("glFlushVertexArrayRangeAPPLE"));
  glFlushVertexArrayRangeNV = PFNGLFLUSHVERTEXARRAYRANGENVPROC(glfwGetProcAddress("glFlushVertexArrayRangeNV"));
  glFogCoordd = PFNGLFOGCOORDDPROC(glfwGetProcAddress("glFogCoordd"));
  glFogCoorddEXT = PFNGLFOGCOORDDEXTPROC(glfwGetProcAddress("glFogCoorddEXT"));
  glFogCoorddv = PFNGLFOGCOORDDVPROC(glfwGetProcAddress("glFogCoorddv"));
  glFogCoorddvEXT = PFNGLFOGCOORDDVEXTPROC(glfwGetProcAddress("glFogCoorddvEXT"));
  glFogCoordf = PFNGLFOGCOORDFPROC(glfwGetProcAddress("glFogCoordf"));
  glFogCoordfEXT = PFNGLFOGCOORDFEXTPROC(glfwGetProcAddress("glFogCoordfEXT"));
  glFogCoordFormatNV = PFNGLFOGCOORDFORMATNVPROC(glfwGetProcAddress("glFogCoordFormatNV"));
  glFogCoordfv = PFNGLFOGCOORDFVPROC(glfwGetProcAddress("glFogCoordfv"));
  glFogCoordfvEXT = PFNGLFOGCOORDFVEXTPROC(glfwGetProcAddress("glFogCoordfvEXT"));
  glFogCoordhNV = PFNGLFOGCOORDHNVPROC(glfwGetProcAddress("glFogCoordhNV"));
  glFogCoordhvNV = PFNGLFOGCOORDHVNVPROC(glfwGetProcAddress("glFogCoordhvNV"));
  glFogCoordPointer = PFNGLFOGCOORDPOINTERPROC(glfwGetProcAddress("glFogCoordPointer"));
  glFogCoordPointerEXT = PFNGLFOGCOORDPOINTEREXTPROC(glfwGetProcAddress("glFogCoordPointerEXT"));
  glFogCoordPointerListIBM = PFNGLFOGCOORDPOINTERLISTIBMPROC(glfwGetProcAddress("glFogCoordPointerListIBM"));
  glFogFuncSGIS = PFNGLFOGFUNCSGISPROC(glfwGetProcAddress("glFogFuncSGIS"));
  glFogxOES = PFNGLFOGXOESPROC(glfwGetProcAddress("glFogxOES"));
  glFogxvOES = PFNGLFOGXVOESPROC(glfwGetProcAddress("glFogxvOES"));
  glFragmentColorMaterialSGIX = PFNGLFRAGMENTCOLORMATERIALSGIXPROC(glfwGetProcAddress("glFragmentColorMaterialSGIX"));
  glFragmentCoverageColorNV = PFNGLFRAGMENTCOVERAGECOLORNVPROC(glfwGetProcAddress("glFragmentCoverageColorNV"));
  glFragmentLightfSGIX = PFNGLFRAGMENTLIGHTFSGIXPROC(glfwGetProcAddress("glFragmentLightfSGIX"));
  glFragmentLightfvSGIX = PFNGLFRAGMENTLIGHTFVSGIXPROC(glfwGetProcAddress("glFragmentLightfvSGIX"));
  glFragmentLightiSGIX = PFNGLFRAGMENTLIGHTISGIXPROC(glfwGetProcAddress("glFragmentLightiSGIX"));
  glFragmentLightivSGIX = PFNGLFRAGMENTLIGHTIVSGIXPROC(glfwGetProcAddress("glFragmentLightivSGIX"));
  glFragmentLightModelfSGIX = PFNGLFRAGMENTLIGHTMODELFSGIXPROC(glfwGetProcAddress("glFragmentLightModelfSGIX"));
  glFragmentLightModelfvSGIX = PFNGLFRAGMENTLIGHTMODELFVSGIXPROC(glfwGetProcAddress("glFragmentLightModelfvSGIX"));
  glFragmentLightModeliSGIX = PFNGLFRAGMENTLIGHTMODELISGIXPROC(glfwGetProcAddress("glFragmentLightModeliSGIX"));
  glFragmentLightModelivSGIX = PFNGLFRAGMENTLIGHTMODELIVSGIXPROC(glfwGetProcAddress("glFragmentLightModelivSGIX"));
  glFragmentMaterialfSGIX = PFNGLFRAGMENTMATERIALFSGIXPROC(glfwGetProcAddress("glFragmentMaterialfSGIX"));
  glFragmentMaterialfvSGIX = PFNGLFRAGMENTMATERIALFVSGIXPROC(glfwGetProcAddress("glFragmentMaterialfvSGIX"));
  glFragmentMaterialiSGIX = PFNGLFRAGMENTMATERIALISGIXPROC(glfwGetProcAddress("glFragmentMaterialiSGIX"));
  glFragmentMaterialivSGIX = PFNGLFRAGMENTMATERIALIVSGIXPROC(glfwGetProcAddress("glFragmentMaterialivSGIX"));
  glFramebufferDrawBufferEXT = PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC(glfwGetProcAddress("glFramebufferDrawBufferEXT"));
  glFramebufferDrawBuffersEXT = PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC(glfwGetProcAddress("glFramebufferDrawBuffersEXT"));
  glFramebufferParameteri = PFNGLFRAMEBUFFERPARAMETERIPROC(glfwGetProcAddress("glFramebufferParameteri"));
  glFramebufferReadBufferEXT = PFNGLFRAMEBUFFERREADBUFFEREXTPROC(glfwGetProcAddress("glFramebufferReadBufferEXT"));
  glFramebufferRenderbuffer = PFNGLFRAMEBUFFERRENDERBUFFERPROC(glfwGetProcAddress("glFramebufferRenderbuffer"));
  glFramebufferRenderbufferEXT = PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC(glfwGetProcAddress("glFramebufferRenderbufferEXT"));
  glFramebufferSampleLocationsfvARB = PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC(glfwGetProcAddress("glFramebufferSampleLocationsfvARB"));
  glFramebufferSampleLocationsfvNV = PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC(glfwGetProcAddress("glFramebufferSampleLocationsfvNV"));
  glFramebufferSamplePositionsfvAMD = PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC(glfwGetProcAddress("glFramebufferSamplePositionsfvAMD"));
  glFramebufferTexture = PFNGLFRAMEBUFFERTEXTUREPROC(glfwGetProcAddress("glFramebufferTexture"));
  glFramebufferTexture1D = PFNGLFRAMEBUFFERTEXTURE1DPROC(glfwGetProcAddress("glFramebufferTexture1D"));
  glFramebufferTexture1DEXT = PFNGLFRAMEBUFFERTEXTURE1DEXTPROC(glfwGetProcAddress("glFramebufferTexture1DEXT"));
  glFramebufferTexture2D = PFNGLFRAMEBUFFERTEXTURE2DPROC(glfwGetProcAddress("glFramebufferTexture2D"));
  glFramebufferTexture2DEXT = PFNGLFRAMEBUFFERTEXTURE2DEXTPROC(glfwGetProcAddress("glFramebufferTexture2DEXT"));
  glFramebufferTexture3D = PFNGLFRAMEBUFFERTEXTURE3DPROC(glfwGetProcAddress("glFramebufferTexture3D"));
  glFramebufferTexture3DEXT = PFNGLFRAMEBUFFERTEXTURE3DEXTPROC(glfwGetProcAddress("glFramebufferTexture3DEXT"));
  glFramebufferTextureARB = PFNGLFRAMEBUFFERTEXTUREARBPROC(glfwGetProcAddress("glFramebufferTextureARB"));
  glFramebufferTextureEXT = PFNGLFRAMEBUFFERTEXTUREEXTPROC(glfwGetProcAddress("glFramebufferTextureEXT"));
  glFramebufferTextureFaceARB = PFNGLFRAMEBUFFERTEXTUREFACEARBPROC(glfwGetProcAddress("glFramebufferTextureFaceARB"));
  glFramebufferTextureFaceEXT = PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC(glfwGetProcAddress("glFramebufferTextureFaceEXT"));
  glFramebufferTextureLayer = PFNGLFRAMEBUFFERTEXTURELAYERPROC(glfwGetProcAddress("glFramebufferTextureLayer"));
  glFramebufferTextureLayerARB = PFNGLFRAMEBUFFERTEXTURELAYERARBPROC(glfwGetProcAddress("glFramebufferTextureLayerARB"));
  glFramebufferTextureLayerEXT = PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC(glfwGetProcAddress("glFramebufferTextureLayerEXT"));
  glFramebufferTextureMultiviewOVR = PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC(glfwGetProcAddress("glFramebufferTextureMultiviewOVR"));
  glFrameTerminatorGREMEDY = PFNGLFRAMETERMINATORGREMEDYPROC(glfwGetProcAddress("glFrameTerminatorGREMEDY"));
  glFrameZoomSGIX = PFNGLFRAMEZOOMSGIXPROC(glfwGetProcAddress("glFrameZoomSGIX"));
  glFreeObjectBufferATI = PFNGLFREEOBJECTBUFFERATIPROC(glfwGetProcAddress("glFreeObjectBufferATI"));
  glFrustumfOES = PFNGLFRUSTUMFOESPROC(glfwGetProcAddress("glFrustumfOES"));
  glFrustumxOES = PFNGLFRUSTUMXOESPROC(glfwGetProcAddress("glFrustumxOES"));
  glGenAsyncMarkersSGIX = PFNGLGENASYNCMARKERSSGIXPROC(glfwGetProcAddress("glGenAsyncMarkersSGIX"));
  glGenBuffers = PFNGLGENBUFFERSPROC(glfwGetProcAddress("glGenBuffers"));
  glGenBuffersARB = PFNGLGENBUFFERSARBPROC(glfwGetProcAddress("glGenBuffersARB"));
  glGenerateMipmap = PFNGLGENERATEMIPMAPPROC(glfwGetProcAddress("glGenerateMipmap"));
  glGenerateMipmapEXT = PFNGLGENERATEMIPMAPEXTPROC(glfwGetProcAddress("glGenerateMipmapEXT"));
  glGenerateMultiTexMipmapEXT = PFNGLGENERATEMULTITEXMIPMAPEXTPROC(glfwGetProcAddress("glGenerateMultiTexMipmapEXT"));
  glGenerateTextureMipmap = PFNGLGENERATETEXTUREMIPMAPPROC(glfwGetProcAddress("glGenerateTextureMipmap"));
  glGenerateTextureMipmapEXT = PFNGLGENERATETEXTUREMIPMAPEXTPROC(glfwGetProcAddress("glGenerateTextureMipmapEXT"));
  glGenFencesAPPLE = PFNGLGENFENCESAPPLEPROC(glfwGetProcAddress("glGenFencesAPPLE"));
  glGenFencesNV = PFNGLGENFENCESNVPROC(glfwGetProcAddress("glGenFencesNV"));
  glGenFragmentShadersATI = PFNGLGENFRAGMENTSHADERSATIPROC(glfwGetProcAddress("glGenFragmentShadersATI"));
  glGenFramebuffers = PFNGLGENFRAMEBUFFERSPROC(glfwGetProcAddress("glGenFramebuffers"));
  glGenFramebuffersEXT = PFNGLGENFRAMEBUFFERSEXTPROC(glfwGetProcAddress("glGenFramebuffersEXT"));
  glGenNamesAMD = PFNGLGENNAMESAMDPROC(glfwGetProcAddress("glGenNamesAMD"));
  glGenOcclusionQueriesNV = PFNGLGENOCCLUSIONQUERIESNVPROC(glfwGetProcAddress("glGenOcclusionQueriesNV"));
  glGenPathsNV = PFNGLGENPATHSNVPROC(glfwGetProcAddress("glGenPathsNV"));
  glGenPerfMonitorsAMD = PFNGLGENPERFMONITORSAMDPROC(glfwGetProcAddress("glGenPerfMonitorsAMD"));
  glGenProgramPipelines = PFNGLGENPROGRAMPIPELINESPROC(glfwGetProcAddress("glGenProgramPipelines"));
  glGenProgramsARB = PFNGLGENPROGRAMSARBPROC(glfwGetProcAddress("glGenProgramsARB"));
  glGenProgramsNV = PFNGLGENPROGRAMSNVPROC(glfwGetProcAddress("glGenProgramsNV"));
  glGenQueries = PFNGLGENQUERIESPROC(glfwGetProcAddress("glGenQueries"));
  glGenQueriesARB = PFNGLGENQUERIESARBPROC(glfwGetProcAddress("glGenQueriesARB"));
  glGenRenderbuffers = PFNGLGENRENDERBUFFERSPROC(glfwGetProcAddress("glGenRenderbuffers"));
  glGenRenderbuffersEXT = PFNGLGENRENDERBUFFERSEXTPROC(glfwGetProcAddress("glGenRenderbuffersEXT"));
  glGenSamplers = PFNGLGENSAMPLERSPROC(glfwGetProcAddress("glGenSamplers"));
  glGenSymbolsEXT = PFNGLGENSYMBOLSEXTPROC(glfwGetProcAddress("glGenSymbolsEXT"));
  glGenTexturesEXT = PFNGLGENTEXTURESEXTPROC(glfwGetProcAddress("glGenTexturesEXT"));
  glGenTransformFeedbacks = PFNGLGENTRANSFORMFEEDBACKSPROC(glfwGetProcAddress("glGenTransformFeedbacks"));
  glGenTransformFeedbacksNV = PFNGLGENTRANSFORMFEEDBACKSNVPROC(glfwGetProcAddress("glGenTransformFeedbacksNV"));
  glGenVertexArrays = PFNGLGENVERTEXARRAYSPROC(glfwGetProcAddress("glGenVertexArrays"));
  glGenVertexArraysAPPLE = PFNGLGENVERTEXARRAYSAPPLEPROC(glfwGetProcAddress("glGenVertexArraysAPPLE"));
  glGenVertexShadersEXT = PFNGLGENVERTEXSHADERSEXTPROC(glfwGetProcAddress("glGenVertexShadersEXT"));
  glGetActiveAtomicCounterBufferiv = PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC(glfwGetProcAddress("glGetActiveAtomicCounterBufferiv"));
  glGetActiveAttrib = PFNGLGETACTIVEATTRIBPROC(glfwGetProcAddress("glGetActiveAttrib"));
  glGetActiveAttribARB = PFNGLGETACTIVEATTRIBARBPROC(glfwGetProcAddress("glGetActiveAttribARB"));
  glGetActiveSubroutineName = PFNGLGETACTIVESUBROUTINENAMEPROC(glfwGetProcAddress("glGetActiveSubroutineName"));
  glGetActiveSubroutineUniformiv = PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC(glfwGetProcAddress("glGetActiveSubroutineUniformiv"));
  glGetActiveSubroutineUniformName = PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC(glfwGetProcAddress("glGetActiveSubroutineUniformName"));
  glGetActiveUniform = PFNGLGETACTIVEUNIFORMPROC(glfwGetProcAddress("glGetActiveUniform"));
  glGetActiveUniformARB = PFNGLGETACTIVEUNIFORMARBPROC(glfwGetProcAddress("glGetActiveUniformARB"));
  glGetActiveUniformBlockiv = PFNGLGETACTIVEUNIFORMBLOCKIVPROC(glfwGetProcAddress("glGetActiveUniformBlockiv"));
  glGetActiveUniformBlockName = PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC(glfwGetProcAddress("glGetActiveUniformBlockName"));
  glGetActiveUniformName = PFNGLGETACTIVEUNIFORMNAMEPROC(glfwGetProcAddress("glGetActiveUniformName"));
  glGetActiveUniformsiv = PFNGLGETACTIVEUNIFORMSIVPROC(glfwGetProcAddress("glGetActiveUniformsiv"));
  glGetActiveVaryingNV = PFNGLGETACTIVEVARYINGNVPROC(glfwGetProcAddress("glGetActiveVaryingNV"));
  glGetArrayObjectfvATI = PFNGLGETARRAYOBJECTFVATIPROC(glfwGetProcAddress("glGetArrayObjectfvATI"));
  glGetArrayObjectivATI = PFNGLGETARRAYOBJECTIVATIPROC(glfwGetProcAddress("glGetArrayObjectivATI"));
  glGetAttachedObjectsARB = PFNGLGETATTACHEDOBJECTSARBPROC(glfwGetProcAddress("glGetAttachedObjectsARB"));
  glGetAttachedShaders = PFNGLGETATTACHEDSHADERSPROC(glfwGetProcAddress("glGetAttachedShaders"));
  glGetAttribLocation = PFNGLGETATTRIBLOCATIONPROC(glfwGetProcAddress("glGetAttribLocation"));
  glGetAttribLocationARB = PFNGLGETATTRIBLOCATIONARBPROC(glfwGetProcAddress("glGetAttribLocationARB"));
  glGetBooleani_v = PFNGLGETBOOLEANI_VPROC(glfwGetProcAddress("glGetBooleani_v"));
  glGetBooleanIndexedvEXT = PFNGLGETBOOLEANINDEXEDVEXTPROC(glfwGetProcAddress("glGetBooleanIndexedvEXT"));
  glGetBufferParameteri64v = PFNGLGETBUFFERPARAMETERI64VPROC(glfwGetProcAddress("glGetBufferParameteri64v"));
  glGetBufferParameteriv = PFNGLGETBUFFERPARAMETERIVPROC(glfwGetProcAddress("glGetBufferParameteriv"));
  glGetBufferParameterivARB = PFNGLGETBUFFERPARAMETERIVARBPROC(glfwGetProcAddress("glGetBufferParameterivARB"));
  glGetBufferParameterui64vNV = PFNGLGETBUFFERPARAMETERUI64VNVPROC(glfwGetProcAddress("glGetBufferParameterui64vNV"));
  glGetBufferPointerv = PFNGLGETBUFFERPOINTERVPROC(glfwGetProcAddress("glGetBufferPointerv"));
  glGetBufferPointervARB = PFNGLGETBUFFERPOINTERVARBPROC(glfwGetProcAddress("glGetBufferPointervARB"));
  glGetBufferSubData = PFNGLGETBUFFERSUBDATAPROC(glfwGetProcAddress("glGetBufferSubData"));
  glGetBufferSubDataARB = PFNGLGETBUFFERSUBDATAARBPROC(glfwGetProcAddress("glGetBufferSubDataARB"));
  glGetClipPlanefOES = PFNGLGETCLIPPLANEFOESPROC(glfwGetProcAddress("glGetClipPlanefOES"));
  glGetClipPlanexOES = PFNGLGETCLIPPLANEXOESPROC(glfwGetProcAddress("glGetClipPlanexOES"));
  glGetColorTable = PFNGLGETCOLORTABLEPROC(glfwGetProcAddress("glGetColorTable"));
  glGetColorTableEXT = PFNGLGETCOLORTABLEEXTPROC(glfwGetProcAddress("glGetColorTableEXT"));
  glGetColorTableParameterfv = PFNGLGETCOLORTABLEPARAMETERFVPROC(glfwGetProcAddress("glGetColorTableParameterfv"));
  glGetColorTableParameterfvEXT = PFNGLGETCOLORTABLEPARAMETERFVEXTPROC(glfwGetProcAddress("glGetColorTableParameterfvEXT"));
  glGetColorTableParameterfvSGI = PFNGLGETCOLORTABLEPARAMETERFVSGIPROC(glfwGetProcAddress("glGetColorTableParameterfvSGI"));
  glGetColorTableParameteriv = PFNGLGETCOLORTABLEPARAMETERIVPROC(glfwGetProcAddress("glGetColorTableParameteriv"));
  glGetColorTableParameterivEXT = PFNGLGETCOLORTABLEPARAMETERIVEXTPROC(glfwGetProcAddress("glGetColorTableParameterivEXT"));
  glGetColorTableParameterivSGI = PFNGLGETCOLORTABLEPARAMETERIVSGIPROC(glfwGetProcAddress("glGetColorTableParameterivSGI"));
  glGetColorTableSGI = PFNGLGETCOLORTABLESGIPROC(glfwGetProcAddress("glGetColorTableSGI"));
  glGetCombinerInputParameterfvNV = PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC(glfwGetProcAddress("glGetCombinerInputParameterfvNV"));
  glGetCombinerInputParameterivNV = PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC(glfwGetProcAddress("glGetCombinerInputParameterivNV"));
  glGetCombinerOutputParameterfvNV = PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC(glfwGetProcAddress("glGetCombinerOutputParameterfvNV"));
  glGetCombinerOutputParameterivNV = PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC(glfwGetProcAddress("glGetCombinerOutputParameterivNV"));
  glGetCombinerStageParameterfvNV = PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC(glfwGetProcAddress("glGetCombinerStageParameterfvNV"));
  glGetCommandHeaderNV = PFNGLGETCOMMANDHEADERNVPROC(glfwGetProcAddress("glGetCommandHeaderNV"));
  glGetCompressedMultiTexImageEXT = PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC(glfwGetProcAddress("glGetCompressedMultiTexImageEXT"));
  glGetCompressedTexImage = PFNGLGETCOMPRESSEDTEXIMAGEPROC(glfwGetProcAddress("glGetCompressedTexImage"));
  glGetCompressedTexImageARB = PFNGLGETCOMPRESSEDTEXIMAGEARBPROC(glfwGetProcAddress("glGetCompressedTexImageARB"));
  glGetCompressedTextureImage = PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC(glfwGetProcAddress("glGetCompressedTextureImage"));
  glGetCompressedTextureImageEXT = PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC(glfwGetProcAddress("glGetCompressedTextureImageEXT"));
  glGetCompressedTextureSubImage = PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC(glfwGetProcAddress("glGetCompressedTextureSubImage"));
  glGetConvolutionFilter = PFNGLGETCONVOLUTIONFILTERPROC(glfwGetProcAddress("glGetConvolutionFilter"));
  glGetConvolutionFilterEXT = PFNGLGETCONVOLUTIONFILTEREXTPROC(glfwGetProcAddress("glGetConvolutionFilterEXT"));
  glGetConvolutionParameterfv = PFNGLGETCONVOLUTIONPARAMETERFVPROC(glfwGetProcAddress("glGetConvolutionParameterfv"));
  glGetConvolutionParameterfvEXT = PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC(glfwGetProcAddress("glGetConvolutionParameterfvEXT"));
  glGetConvolutionParameteriv = PFNGLGETCONVOLUTIONPARAMETERIVPROC(glfwGetProcAddress("glGetConvolutionParameteriv"));
  glGetConvolutionParameterivEXT = PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC(glfwGetProcAddress("glGetConvolutionParameterivEXT"));
  glGetConvolutionParameterxvOES = PFNGLGETCONVOLUTIONPARAMETERXVOESPROC(glfwGetProcAddress("glGetConvolutionParameterxvOES"));
  glGetCoverageModulationTableNV = PFNGLGETCOVERAGEMODULATIONTABLENVPROC(glfwGetProcAddress("glGetCoverageModulationTableNV"));
  glGetDebugMessageLog = PFNGLGETDEBUGMESSAGELOGPROC(glfwGetProcAddress("glGetDebugMessageLog"));
  glGetDebugMessageLogAMD = PFNGLGETDEBUGMESSAGELOGAMDPROC(glfwGetProcAddress("glGetDebugMessageLogAMD"));
  glGetDebugMessageLogARB = PFNGLGETDEBUGMESSAGELOGARBPROC(glfwGetProcAddress("glGetDebugMessageLogARB"));
  glGetDetailTexFuncSGIS = PFNGLGETDETAILTEXFUNCSGISPROC(glfwGetProcAddress("glGetDetailTexFuncSGIS"));
  glGetDoublei_v = PFNGLGETDOUBLEI_VPROC(glfwGetProcAddress("glGetDoublei_v"));
  glGetDoublei_vEXT = PFNGLGETDOUBLEI_VEXTPROC(glfwGetProcAddress("glGetDoublei_vEXT"));
  glGetDoubleIndexedvEXT = PFNGLGETDOUBLEINDEXEDVEXTPROC(glfwGetProcAddress("glGetDoubleIndexedvEXT"));
  glGetFenceivNV = PFNGLGETFENCEIVNVPROC(glfwGetProcAddress("glGetFenceivNV"));
  glGetFinalCombinerInputParameterfvNV = PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC(glfwGetProcAddress("glGetFinalCombinerInputParameterfvNV"));
  glGetFinalCombinerInputParameterivNV = PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC(glfwGetProcAddress("glGetFinalCombinerInputParameterivNV"));
  glGetFirstPerfQueryIdINTEL = PFNGLGETFIRSTPERFQUERYIDINTELPROC(glfwGetProcAddress("glGetFirstPerfQueryIdINTEL"));
  glGetFixedvOES = PFNGLGETFIXEDVOESPROC(glfwGetProcAddress("glGetFixedvOES"));
  glGetFloati_v = PFNGLGETFLOATI_VPROC(glfwGetProcAddress("glGetFloati_v"));
  glGetFloati_vEXT = PFNGLGETFLOATI_VEXTPROC(glfwGetProcAddress("glGetFloati_vEXT"));
  glGetFloatIndexedvEXT = PFNGLGETFLOATINDEXEDVEXTPROC(glfwGetProcAddress("glGetFloatIndexedvEXT"));
  glGetFogFuncSGIS = PFNGLGETFOGFUNCSGISPROC(glfwGetProcAddress("glGetFogFuncSGIS"));
  glGetFragDataIndex = PFNGLGETFRAGDATAINDEXPROC(glfwGetProcAddress("glGetFragDataIndex"));
  glGetFragDataLocation = PFNGLGETFRAGDATALOCATIONPROC(glfwGetProcAddress("glGetFragDataLocation"));
  glGetFragDataLocationEXT = PFNGLGETFRAGDATALOCATIONEXTPROC(glfwGetProcAddress("glGetFragDataLocationEXT"));
  glGetFragmentLightfvSGIX = PFNGLGETFRAGMENTLIGHTFVSGIXPROC(glfwGetProcAddress("glGetFragmentLightfvSGIX"));
  glGetFragmentLightivSGIX = PFNGLGETFRAGMENTLIGHTIVSGIXPROC(glfwGetProcAddress("glGetFragmentLightivSGIX"));
  glGetFragmentMaterialfvSGIX = PFNGLGETFRAGMENTMATERIALFVSGIXPROC(glfwGetProcAddress("glGetFragmentMaterialfvSGIX"));
  glGetFragmentMaterialivSGIX = PFNGLGETFRAGMENTMATERIALIVSGIXPROC(glfwGetProcAddress("glGetFragmentMaterialivSGIX"));
  glGetFramebufferAttachmentParameteriv = PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC(glfwGetProcAddress("glGetFramebufferAttachmentParameteriv"));
  glGetFramebufferAttachmentParameterivEXT = PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC(glfwGetProcAddress("glGetFramebufferAttachmentParameterivEXT"));
  glGetFramebufferParameterfvAMD = PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC(glfwGetProcAddress("glGetFramebufferParameterfvAMD"));
  glGetFramebufferParameteriv = PFNGLGETFRAMEBUFFERPARAMETERIVPROC(glfwGetProcAddress("glGetFramebufferParameteriv"));
  glGetFramebufferParameterivEXT = PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC(glfwGetProcAddress("glGetFramebufferParameterivEXT"));
  glGetGraphicsResetStatus = PFNGLGETGRAPHICSRESETSTATUSPROC(glfwGetProcAddress("glGetGraphicsResetStatus"));
  glGetGraphicsResetStatusARB = PFNGLGETGRAPHICSRESETSTATUSARBPROC(glfwGetProcAddress("glGetGraphicsResetStatusARB"));
  glGetHandleARB = PFNGLGETHANDLEARBPROC(glfwGetProcAddress("glGetHandleARB"));
  glGetHistogram = PFNGLGETHISTOGRAMPROC(glfwGetProcAddress("glGetHistogram"));
  glGetHistogramEXT = PFNGLGETHISTOGRAMEXTPROC(glfwGetProcAddress("glGetHistogramEXT"));
  glGetHistogramParameterfv = PFNGLGETHISTOGRAMPARAMETERFVPROC(glfwGetProcAddress("glGetHistogramParameterfv"));
  glGetHistogramParameterfvEXT = PFNGLGETHISTOGRAMPARAMETERFVEXTPROC(glfwGetProcAddress("glGetHistogramParameterfvEXT"));
  glGetHistogramParameteriv = PFNGLGETHISTOGRAMPARAMETERIVPROC(glfwGetProcAddress("glGetHistogramParameteriv"));
  glGetHistogramParameterivEXT = PFNGLGETHISTOGRAMPARAMETERIVEXTPROC(glfwGetProcAddress("glGetHistogramParameterivEXT"));
  glGetHistogramParameterxvOES = PFNGLGETHISTOGRAMPARAMETERXVOESPROC(glfwGetProcAddress("glGetHistogramParameterxvOES"));
  glGetImageHandleARB = PFNGLGETIMAGEHANDLEARBPROC(glfwGetProcAddress("glGetImageHandleARB"));
  glGetImageHandleNV = PFNGLGETIMAGEHANDLENVPROC(glfwGetProcAddress("glGetImageHandleNV"));
  glGetImageTransformParameterfvHP = PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC(glfwGetProcAddress("glGetImageTransformParameterfvHP"));
  glGetImageTransformParameterivHP = PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC(glfwGetProcAddress("glGetImageTransformParameterivHP"));
  glGetInfoLogARB = PFNGLGETINFOLOGARBPROC(glfwGetProcAddress("glGetInfoLogARB"));
  glGetInstrumentsSGIX = PFNGLGETINSTRUMENTSSGIXPROC(glfwGetProcAddress("glGetInstrumentsSGIX"));
  glGetInteger64i_v = PFNGLGETINTEGER64I_VPROC(glfwGetProcAddress("glGetInteger64i_v"));
  glGetInteger64v = PFNGLGETINTEGER64VPROC(glfwGetProcAddress("glGetInteger64v"));
  glGetIntegeri_v = PFNGLGETINTEGERI_VPROC(glfwGetProcAddress("glGetIntegeri_v"));
  glGetIntegerIndexedvEXT = PFNGLGETINTEGERINDEXEDVEXTPROC(glfwGetProcAddress("glGetIntegerIndexedvEXT"));
  glGetIntegerui64i_vNV = PFNGLGETINTEGERUI64I_VNVPROC(glfwGetProcAddress("glGetIntegerui64i_vNV"));
  glGetIntegerui64vNV = PFNGLGETINTEGERUI64VNVPROC(glfwGetProcAddress("glGetIntegerui64vNV"));
  glGetInternalformati64v = PFNGLGETINTERNALFORMATI64VPROC(glfwGetProcAddress("glGetInternalformati64v"));
  glGetInternalformativ = PFNGLGETINTERNALFORMATIVPROC(glfwGetProcAddress("glGetInternalformativ"));
  glGetInternalformatSampleivNV = PFNGLGETINTERNALFORMATSAMPLEIVNVPROC(glfwGetProcAddress("glGetInternalformatSampleivNV"));
  glGetInvariantBooleanvEXT = PFNGLGETINVARIANTBOOLEANVEXTPROC(glfwGetProcAddress("glGetInvariantBooleanvEXT"));
  glGetInvariantFloatvEXT = PFNGLGETINVARIANTFLOATVEXTPROC(glfwGetProcAddress("glGetInvariantFloatvEXT"));
  glGetInvariantIntegervEXT = PFNGLGETINVARIANTINTEGERVEXTPROC(glfwGetProcAddress("glGetInvariantIntegervEXT"));
  glGetLightxOES = PFNGLGETLIGHTXOESPROC(glfwGetProcAddress("glGetLightxOES"));
  glGetListParameterfvSGIX = PFNGLGETLISTPARAMETERFVSGIXPROC(glfwGetProcAddress("glGetListParameterfvSGIX"));
  glGetListParameterivSGIX = PFNGLGETLISTPARAMETERIVSGIXPROC(glfwGetProcAddress("glGetListParameterivSGIX"));
  glGetLocalConstantBooleanvEXT = PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC(glfwGetProcAddress("glGetLocalConstantBooleanvEXT"));
  glGetLocalConstantFloatvEXT = PFNGLGETLOCALCONSTANTFLOATVEXTPROC(glfwGetProcAddress("glGetLocalConstantFloatvEXT"));
  glGetLocalConstantIntegervEXT = PFNGLGETLOCALCONSTANTINTEGERVEXTPROC(glfwGetProcAddress("glGetLocalConstantIntegervEXT"));
  glGetMapAttribParameterfvNV = PFNGLGETMAPATTRIBPARAMETERFVNVPROC(glfwGetProcAddress("glGetMapAttribParameterfvNV"));
  glGetMapAttribParameterivNV = PFNGLGETMAPATTRIBPARAMETERIVNVPROC(glfwGetProcAddress("glGetMapAttribParameterivNV"));
  glGetMapControlPointsNV = PFNGLGETMAPCONTROLPOINTSNVPROC(glfwGetProcAddress("glGetMapControlPointsNV"));
  glGetMapParameterfvNV = PFNGLGETMAPPARAMETERFVNVPROC(glfwGetProcAddress("glGetMapParameterfvNV"));
  glGetMapParameterivNV = PFNGLGETMAPPARAMETERIVNVPROC(glfwGetProcAddress("glGetMapParameterivNV"));
  glGetMapxvOES = PFNGLGETMAPXVOESPROC(glfwGetProcAddress("glGetMapxvOES"));
  glGetMaterialxOES = PFNGLGETMATERIALXOESPROC(glfwGetProcAddress("glGetMaterialxOES"));
  glGetMinmax = PFNGLGETMINMAXPROC(glfwGetProcAddress("glGetMinmax"));
  glGetMinmaxEXT = PFNGLGETMINMAXEXTPROC(glfwGetProcAddress("glGetMinmaxEXT"));
  glGetMinmaxParameterfv = PFNGLGETMINMAXPARAMETERFVPROC(glfwGetProcAddress("glGetMinmaxParameterfv"));
  glGetMinmaxParameterfvEXT = PFNGLGETMINMAXPARAMETERFVEXTPROC(glfwGetProcAddress("glGetMinmaxParameterfvEXT"));
  glGetMinmaxParameteriv = PFNGLGETMINMAXPARAMETERIVPROC(glfwGetProcAddress("glGetMinmaxParameteriv"));
  glGetMinmaxParameterivEXT = PFNGLGETMINMAXPARAMETERIVEXTPROC(glfwGetProcAddress("glGetMinmaxParameterivEXT"));
  glGetMultisamplefv = PFNGLGETMULTISAMPLEFVPROC(glfwGetProcAddress("glGetMultisamplefv"));
  glGetMultisamplefvNV = PFNGLGETMULTISAMPLEFVNVPROC(glfwGetProcAddress("glGetMultisamplefvNV"));
  glGetMultiTexEnvfvEXT = PFNGLGETMULTITEXENVFVEXTPROC(glfwGetProcAddress("glGetMultiTexEnvfvEXT"));
  glGetMultiTexEnvivEXT = PFNGLGETMULTITEXENVIVEXTPROC(glfwGetProcAddress("glGetMultiTexEnvivEXT"));
  glGetMultiTexGendvEXT = PFNGLGETMULTITEXGENDVEXTPROC(glfwGetProcAddress("glGetMultiTexGendvEXT"));
  glGetMultiTexGenfvEXT = PFNGLGETMULTITEXGENFVEXTPROC(glfwGetProcAddress("glGetMultiTexGenfvEXT"));
  glGetMultiTexGenivEXT = PFNGLGETMULTITEXGENIVEXTPROC(glfwGetProcAddress("glGetMultiTexGenivEXT"));
  glGetMultiTexImageEXT = PFNGLGETMULTITEXIMAGEEXTPROC(glfwGetProcAddress("glGetMultiTexImageEXT"));
  glGetMultiTexLevelParameterfvEXT = PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC(glfwGetProcAddress("glGetMultiTexLevelParameterfvEXT"));
  glGetMultiTexLevelParameterivEXT = PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC(glfwGetProcAddress("glGetMultiTexLevelParameterivEXT"));
  glGetMultiTexParameterfvEXT = PFNGLGETMULTITEXPARAMETERFVEXTPROC(glfwGetProcAddress("glGetMultiTexParameterfvEXT"));
  glGetMultiTexParameterIivEXT = PFNGLGETMULTITEXPARAMETERIIVEXTPROC(glfwGetProcAddress("glGetMultiTexParameterIivEXT"));
  glGetMultiTexParameterIuivEXT = PFNGLGETMULTITEXPARAMETERIUIVEXTPROC(glfwGetProcAddress("glGetMultiTexParameterIuivEXT"));
  glGetMultiTexParameterivEXT = PFNGLGETMULTITEXPARAMETERIVEXTPROC(glfwGetProcAddress("glGetMultiTexParameterivEXT"));
  glGetNamedBufferParameteri64v = PFNGLGETNAMEDBUFFERPARAMETERI64VPROC(glfwGetProcAddress("glGetNamedBufferParameteri64v"));
  glGetNamedBufferParameteriv = PFNGLGETNAMEDBUFFERPARAMETERIVPROC(glfwGetProcAddress("glGetNamedBufferParameteriv"));
  glGetNamedBufferParameterivEXT = PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC(glfwGetProcAddress("glGetNamedBufferParameterivEXT"));
  glGetNamedBufferParameterui64vNV = PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC(glfwGetProcAddress("glGetNamedBufferParameterui64vNV"));
  glGetNamedBufferPointerv = PFNGLGETNAMEDBUFFERPOINTERVPROC(glfwGetProcAddress("glGetNamedBufferPointerv"));
  glGetNamedBufferPointervEXT = PFNGLGETNAMEDBUFFERPOINTERVEXTPROC(glfwGetProcAddress("glGetNamedBufferPointervEXT"));
  glGetNamedBufferSubData = PFNGLGETNAMEDBUFFERSUBDATAPROC(glfwGetProcAddress("glGetNamedBufferSubData"));
  glGetNamedBufferSubDataEXT = PFNGLGETNAMEDBUFFERSUBDATAEXTPROC(glfwGetProcAddress("glGetNamedBufferSubDataEXT"));
  glGetNamedFramebufferAttachmentParameteriv = PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC(glfwGetProcAddress("glGetNamedFramebufferAttachmentParameteriv"));
  glGetNamedFramebufferAttachmentParameterivEXT = PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC(glfwGetProcAddress("glGetNamedFramebufferAttachmentParameterivEXT"));
  glGetNamedFramebufferParameterfvAMD = PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC(glfwGetProcAddress("glGetNamedFramebufferParameterfvAMD"));
  glGetNamedFramebufferParameteriv = PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC(glfwGetProcAddress("glGetNamedFramebufferParameteriv"));
  glGetNamedFramebufferParameterivEXT = PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC(glfwGetProcAddress("glGetNamedFramebufferParameterivEXT"));
  glGetNamedProgramivEXT = PFNGLGETNAMEDPROGRAMIVEXTPROC(glfwGetProcAddress("glGetNamedProgramivEXT"));
  glGetNamedProgramLocalParameterdvEXT = PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC(glfwGetProcAddress("glGetNamedProgramLocalParameterdvEXT"));
  glGetNamedProgramLocalParameterfvEXT = PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC(glfwGetProcAddress("glGetNamedProgramLocalParameterfvEXT"));
  glGetNamedProgramLocalParameterIivEXT = PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC(glfwGetProcAddress("glGetNamedProgramLocalParameterIivEXT"));
  glGetNamedProgramLocalParameterIuivEXT = PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC(glfwGetProcAddress("glGetNamedProgramLocalParameterIuivEXT"));
  glGetNamedProgramStringEXT = PFNGLGETNAMEDPROGRAMSTRINGEXTPROC(glfwGetProcAddress("glGetNamedProgramStringEXT"));
  glGetNamedRenderbufferParameteriv = PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC(glfwGetProcAddress("glGetNamedRenderbufferParameteriv"));
  glGetNamedRenderbufferParameterivEXT = PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC(glfwGetProcAddress("glGetNamedRenderbufferParameterivEXT"));
  glGetNamedStringARB = PFNGLGETNAMEDSTRINGARBPROC(glfwGetProcAddress("glGetNamedStringARB"));
  glGetNamedStringivARB = PFNGLGETNAMEDSTRINGIVARBPROC(glfwGetProcAddress("glGetNamedStringivARB"));
  glGetnColorTable = PFNGLGETNCOLORTABLEPROC(glfwGetProcAddress("glGetnColorTable"));
  glGetnColorTableARB = PFNGLGETNCOLORTABLEARBPROC(glfwGetProcAddress("glGetnColorTableARB"));
  glGetnCompressedTexImage = PFNGLGETNCOMPRESSEDTEXIMAGEPROC(glfwGetProcAddress("glGetnCompressedTexImage"));
  glGetnCompressedTexImageARB = PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC(glfwGetProcAddress("glGetnCompressedTexImageARB"));
  glGetnConvolutionFilter = PFNGLGETNCONVOLUTIONFILTERPROC(glfwGetProcAddress("glGetnConvolutionFilter"));
  glGetnConvolutionFilterARB = PFNGLGETNCONVOLUTIONFILTERARBPROC(glfwGetProcAddress("glGetnConvolutionFilterARB"));
  glGetNextPerfQueryIdINTEL = PFNGLGETNEXTPERFQUERYIDINTELPROC(glfwGetProcAddress("glGetNextPerfQueryIdINTEL"));
  glGetnHistogram = PFNGLGETNHISTOGRAMPROC(glfwGetProcAddress("glGetnHistogram"));
  glGetnHistogramARB = PFNGLGETNHISTOGRAMARBPROC(glfwGetProcAddress("glGetnHistogramARB"));
  glGetnMapdv = PFNGLGETNMAPDVPROC(glfwGetProcAddress("glGetnMapdv"));
  glGetnMapdvARB = PFNGLGETNMAPDVARBPROC(glfwGetProcAddress("glGetnMapdvARB"));
  glGetnMapfv = PFNGLGETNMAPFVPROC(glfwGetProcAddress("glGetnMapfv"));
  glGetnMapfvARB = PFNGLGETNMAPFVARBPROC(glfwGetProcAddress("glGetnMapfvARB"));
  glGetnMapiv = PFNGLGETNMAPIVPROC(glfwGetProcAddress("glGetnMapiv"));
  glGetnMapivARB = PFNGLGETNMAPIVARBPROC(glfwGetProcAddress("glGetnMapivARB"));
  glGetnMinmax = PFNGLGETNMINMAXPROC(glfwGetProcAddress("glGetnMinmax"));
  glGetnMinmaxARB = PFNGLGETNMINMAXARBPROC(glfwGetProcAddress("glGetnMinmaxARB"));
  glGetnPixelMapfv = PFNGLGETNPIXELMAPFVPROC(glfwGetProcAddress("glGetnPixelMapfv"));
  glGetnPixelMapfvARB = PFNGLGETNPIXELMAPFVARBPROC(glfwGetProcAddress("glGetnPixelMapfvARB"));
  glGetnPixelMapuiv = PFNGLGETNPIXELMAPUIVPROC(glfwGetProcAddress("glGetnPixelMapuiv"));
  glGetnPixelMapuivARB = PFNGLGETNPIXELMAPUIVARBPROC(glfwGetProcAddress("glGetnPixelMapuivARB"));
  glGetnPixelMapusv = PFNGLGETNPIXELMAPUSVPROC(glfwGetProcAddress("glGetnPixelMapusv"));
  glGetnPixelMapusvARB = PFNGLGETNPIXELMAPUSVARBPROC(glfwGetProcAddress("glGetnPixelMapusvARB"));
  glGetnPolygonStipple = PFNGLGETNPOLYGONSTIPPLEPROC(glfwGetProcAddress("glGetnPolygonStipple"));
  glGetnPolygonStippleARB = PFNGLGETNPOLYGONSTIPPLEARBPROC(glfwGetProcAddress("glGetnPolygonStippleARB"));
  glGetnSeparableFilter = PFNGLGETNSEPARABLEFILTERPROC(glfwGetProcAddress("glGetnSeparableFilter"));
  glGetnSeparableFilterARB = PFNGLGETNSEPARABLEFILTERARBPROC(glfwGetProcAddress("glGetnSeparableFilterARB"));
  glGetnTexImage = PFNGLGETNTEXIMAGEPROC(glfwGetProcAddress("glGetnTexImage"));
  glGetnTexImageARB = PFNGLGETNTEXIMAGEARBPROC(glfwGetProcAddress("glGetnTexImageARB"));
  glGetnUniformdv = PFNGLGETNUNIFORMDVPROC(glfwGetProcAddress("glGetnUniformdv"));
  glGetnUniformdvARB = PFNGLGETNUNIFORMDVARBPROC(glfwGetProcAddress("glGetnUniformdvARB"));
  glGetnUniformfv = PFNGLGETNUNIFORMFVPROC(glfwGetProcAddress("glGetnUniformfv"));
  glGetnUniformfvARB = PFNGLGETNUNIFORMFVARBPROC(glfwGetProcAddress("glGetnUniformfvARB"));
  glGetnUniformi64vARB = PFNGLGETNUNIFORMI64VARBPROC(glfwGetProcAddress("glGetnUniformi64vARB"));
  glGetnUniformiv = PFNGLGETNUNIFORMIVPROC(glfwGetProcAddress("glGetnUniformiv"));
  glGetnUniformivARB = PFNGLGETNUNIFORMIVARBPROC(glfwGetProcAddress("glGetnUniformivARB"));
  glGetnUniformui64vARB = PFNGLGETNUNIFORMUI64VARBPROC(glfwGetProcAddress("glGetnUniformui64vARB"));
  glGetnUniformuiv = PFNGLGETNUNIFORMUIVPROC(glfwGetProcAddress("glGetnUniformuiv"));
  glGetnUniformuivARB = PFNGLGETNUNIFORMUIVARBPROC(glfwGetProcAddress("glGetnUniformuivARB"));
  glGetObjectBufferfvATI = PFNGLGETOBJECTBUFFERFVATIPROC(glfwGetProcAddress("glGetObjectBufferfvATI"));
  glGetObjectBufferivATI = PFNGLGETOBJECTBUFFERIVATIPROC(glfwGetProcAddress("glGetObjectBufferivATI"));
  glGetObjectLabel = PFNGLGETOBJECTLABELPROC(glfwGetProcAddress("glGetObjectLabel"));
  glGetObjectLabelEXT = PFNGLGETOBJECTLABELEXTPROC(glfwGetProcAddress("glGetObjectLabelEXT"));
  glGetObjectParameterfvARB = PFNGLGETOBJECTPARAMETERFVARBPROC(glfwGetProcAddress("glGetObjectParameterfvARB"));
  glGetObjectParameterivAPPLE = PFNGLGETOBJECTPARAMETERIVAPPLEPROC(glfwGetProcAddress("glGetObjectParameterivAPPLE"));
  glGetObjectParameterivARB = PFNGLGETOBJECTPARAMETERIVARBPROC(glfwGetProcAddress("glGetObjectParameterivARB"));
  glGetObjectPtrLabel = PFNGLGETOBJECTPTRLABELPROC(glfwGetProcAddress("glGetObjectPtrLabel"));
  glGetOcclusionQueryivNV = PFNGLGETOCCLUSIONQUERYIVNVPROC(glfwGetProcAddress("glGetOcclusionQueryivNV"));
  glGetOcclusionQueryuivNV = PFNGLGETOCCLUSIONQUERYUIVNVPROC(glfwGetProcAddress("glGetOcclusionQueryuivNV"));
  glGetPathColorGenfvNV = PFNGLGETPATHCOLORGENFVNVPROC(glfwGetProcAddress("glGetPathColorGenfvNV"));
  glGetPathColorGenivNV = PFNGLGETPATHCOLORGENIVNVPROC(glfwGetProcAddress("glGetPathColorGenivNV"));
  glGetPathCommandsNV = PFNGLGETPATHCOMMANDSNVPROC(glfwGetProcAddress("glGetPathCommandsNV"));
  glGetPathCoordsNV = PFNGLGETPATHCOORDSNVPROC(glfwGetProcAddress("glGetPathCoordsNV"));
  glGetPathDashArrayNV = PFNGLGETPATHDASHARRAYNVPROC(glfwGetProcAddress("glGetPathDashArrayNV"));
  glGetPathLengthNV = PFNGLGETPATHLENGTHNVPROC(glfwGetProcAddress("glGetPathLengthNV"));
  glGetPathMetricRangeNV = PFNGLGETPATHMETRICRANGENVPROC(glfwGetProcAddress("glGetPathMetricRangeNV"));
  glGetPathMetricsNV = PFNGLGETPATHMETRICSNVPROC(glfwGetProcAddress("glGetPathMetricsNV"));
  glGetPathParameterfvNV = PFNGLGETPATHPARAMETERFVNVPROC(glfwGetProcAddress("glGetPathParameterfvNV"));
  glGetPathParameterivNV = PFNGLGETPATHPARAMETERIVNVPROC(glfwGetProcAddress("glGetPathParameterivNV"));
  glGetPathSpacingNV = PFNGLGETPATHSPACINGNVPROC(glfwGetProcAddress("glGetPathSpacingNV"));
  glGetPathTexGenfvNV = PFNGLGETPATHTEXGENFVNVPROC(glfwGetProcAddress("glGetPathTexGenfvNV"));
  glGetPathTexGenivNV = PFNGLGETPATHTEXGENIVNVPROC(glfwGetProcAddress("glGetPathTexGenivNV"));
  glGetPerfCounterInfoINTEL = PFNGLGETPERFCOUNTERINFOINTELPROC(glfwGetProcAddress("glGetPerfCounterInfoINTEL"));
  glGetPerfMonitorCounterDataAMD = PFNGLGETPERFMONITORCOUNTERDATAAMDPROC(glfwGetProcAddress("glGetPerfMonitorCounterDataAMD"));
  glGetPerfMonitorCounterInfoAMD = PFNGLGETPERFMONITORCOUNTERINFOAMDPROC(glfwGetProcAddress("glGetPerfMonitorCounterInfoAMD"));
  glGetPerfMonitorCountersAMD = PFNGLGETPERFMONITORCOUNTERSAMDPROC(glfwGetProcAddress("glGetPerfMonitorCountersAMD"));
  glGetPerfMonitorCounterStringAMD = PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC(glfwGetProcAddress("glGetPerfMonitorCounterStringAMD"));
  glGetPerfMonitorGroupsAMD = PFNGLGETPERFMONITORGROUPSAMDPROC(glfwGetProcAddress("glGetPerfMonitorGroupsAMD"));
  glGetPerfMonitorGroupStringAMD = PFNGLGETPERFMONITORGROUPSTRINGAMDPROC(glfwGetProcAddress("glGetPerfMonitorGroupStringAMD"));
  glGetPerfQueryDataINTEL = PFNGLGETPERFQUERYDATAINTELPROC(glfwGetProcAddress("glGetPerfQueryDataINTEL"));
  glGetPerfQueryIdByNameINTEL = PFNGLGETPERFQUERYIDBYNAMEINTELPROC(glfwGetProcAddress("glGetPerfQueryIdByNameINTEL"));
  glGetPerfQueryInfoINTEL = PFNGLGETPERFQUERYINFOINTELPROC(glfwGetProcAddress("glGetPerfQueryInfoINTEL"));
  glGetPixelMapxv = PFNGLGETPIXELMAPXVPROC(glfwGetProcAddress("glGetPixelMapxv"));
  glGetPixelTexGenParameterfvSGIS = PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC(glfwGetProcAddress("glGetPixelTexGenParameterfvSGIS"));
  glGetPixelTexGenParameterivSGIS = PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC(glfwGetProcAddress("glGetPixelTexGenParameterivSGIS"));
  glGetPixelTransformParameterfvEXT = PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC(glfwGetProcAddress("glGetPixelTransformParameterfvEXT"));
  glGetPixelTransformParameterivEXT = PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC(glfwGetProcAddress("glGetPixelTransformParameterivEXT"));
  glGetPointeri_vEXT = PFNGLGETPOINTERI_VEXTPROC(glfwGetProcAddress("glGetPointeri_vEXT"));
  glGetPointerIndexedvEXT = PFNGLGETPOINTERINDEXEDVEXTPROC(glfwGetProcAddress("glGetPointerIndexedvEXT"));
  glGetPointervEXT = PFNGLGETPOINTERVEXTPROC(glfwGetProcAddress("glGetPointervEXT"));
  glGetProgramBinary = PFNGLGETPROGRAMBINARYPROC(glfwGetProcAddress("glGetProgramBinary"));
  glGetProgramEnvParameterdvARB = PFNGLGETPROGRAMENVPARAMETERDVARBPROC(glfwGetProcAddress("glGetProgramEnvParameterdvARB"));
  glGetProgramEnvParameterfvARB = PFNGLGETPROGRAMENVPARAMETERFVARBPROC(glfwGetProcAddress("glGetProgramEnvParameterfvARB"));
  glGetProgramEnvParameterIivNV = PFNGLGETPROGRAMENVPARAMETERIIVNVPROC(glfwGetProcAddress("glGetProgramEnvParameterIivNV"));
  glGetProgramEnvParameterIuivNV = PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC(glfwGetProcAddress("glGetProgramEnvParameterIuivNV"));
  glGetProgramInfoLog = PFNGLGETPROGRAMINFOLOGPROC(glfwGetProcAddress("glGetProgramInfoLog"));
  glGetProgramInterfaceiv = PFNGLGETPROGRAMINTERFACEIVPROC(glfwGetProcAddress("glGetProgramInterfaceiv"));
  glGetProgramiv = PFNGLGETPROGRAMIVPROC(glfwGetProcAddress("glGetProgramiv"));
  glGetProgramivARB = PFNGLGETPROGRAMIVARBPROC(glfwGetProcAddress("glGetProgramivARB"));
  glGetProgramivNV = PFNGLGETPROGRAMIVNVPROC(glfwGetProcAddress("glGetProgramivNV"));
  glGetProgramLocalParameterdvARB = PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC(glfwGetProcAddress("glGetProgramLocalParameterdvARB"));
  glGetProgramLocalParameterfvARB = PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC(glfwGetProcAddress("glGetProgramLocalParameterfvARB"));
  glGetProgramLocalParameterIivNV = PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC(glfwGetProcAddress("glGetProgramLocalParameterIivNV"));
  glGetProgramLocalParameterIuivNV = PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC(glfwGetProcAddress("glGetProgramLocalParameterIuivNV"));
  glGetProgramNamedParameterdvNV = PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC(glfwGetProcAddress("glGetProgramNamedParameterdvNV"));
  glGetProgramNamedParameterfvNV = PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC(glfwGetProcAddress("glGetProgramNamedParameterfvNV"));
  glGetProgramParameterdvNV = PFNGLGETPROGRAMPARAMETERDVNVPROC(glfwGetProcAddress("glGetProgramParameterdvNV"));
  glGetProgramParameterfvNV = PFNGLGETPROGRAMPARAMETERFVNVPROC(glfwGetProcAddress("glGetProgramParameterfvNV"));
  glGetProgramPipelineInfoLog = PFNGLGETPROGRAMPIPELINEINFOLOGPROC(glfwGetProcAddress("glGetProgramPipelineInfoLog"));
  glGetProgramPipelineiv = PFNGLGETPROGRAMPIPELINEIVPROC(glfwGetProcAddress("glGetProgramPipelineiv"));
  glGetProgramResourcefvNV = PFNGLGETPROGRAMRESOURCEFVNVPROC(glfwGetProcAddress("glGetProgramResourcefvNV"));
  glGetProgramResourceIndex = PFNGLGETPROGRAMRESOURCEINDEXPROC(glfwGetProcAddress("glGetProgramResourceIndex"));
  glGetProgramResourceiv = PFNGLGETPROGRAMRESOURCEIVPROC(glfwGetProcAddress("glGetProgramResourceiv"));
  glGetProgramResourceLocation = PFNGLGETPROGRAMRESOURCELOCATIONPROC(glfwGetProcAddress("glGetProgramResourceLocation"));
  glGetProgramResourceLocationIndex = PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC(glfwGetProcAddress("glGetProgramResourceLocationIndex"));
  glGetProgramResourceName = PFNGLGETPROGRAMRESOURCENAMEPROC(glfwGetProcAddress("glGetProgramResourceName"));
  glGetProgramStageiv = PFNGLGETPROGRAMSTAGEIVPROC(glfwGetProcAddress("glGetProgramStageiv"));
  glGetProgramStringARB = PFNGLGETPROGRAMSTRINGARBPROC(glfwGetProcAddress("glGetProgramStringARB"));
  glGetProgramStringNV = PFNGLGETPROGRAMSTRINGNVPROC(glfwGetProcAddress("glGetProgramStringNV"));
  glGetProgramSubroutineParameteruivNV = PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC(glfwGetProcAddress("glGetProgramSubroutineParameteruivNV"));
  glGetQueryBufferObjecti64v = PFNGLGETQUERYBUFFEROBJECTI64VPROC(glfwGetProcAddress("glGetQueryBufferObjecti64v"));
  glGetQueryBufferObjectiv = PFNGLGETQUERYBUFFEROBJECTIVPROC(glfwGetProcAddress("glGetQueryBufferObjectiv"));
  glGetQueryBufferObjectui64v = PFNGLGETQUERYBUFFEROBJECTUI64VPROC(glfwGetProcAddress("glGetQueryBufferObjectui64v"));
  glGetQueryBufferObjectuiv = PFNGLGETQUERYBUFFEROBJECTUIVPROC(glfwGetProcAddress("glGetQueryBufferObjectuiv"));
  glGetQueryIndexediv = PFNGLGETQUERYINDEXEDIVPROC(glfwGetProcAddress("glGetQueryIndexediv"));
  glGetQueryiv = PFNGLGETQUERYIVPROC(glfwGetProcAddress("glGetQueryiv"));
  glGetQueryivARB = PFNGLGETQUERYIVARBPROC(glfwGetProcAddress("glGetQueryivARB"));
  glGetQueryObjecti64v = PFNGLGETQUERYOBJECTI64VPROC(glfwGetProcAddress("glGetQueryObjecti64v"));
  glGetQueryObjecti64vEXT = PFNGLGETQUERYOBJECTI64VEXTPROC(glfwGetProcAddress("glGetQueryObjecti64vEXT"));
  glGetQueryObjectiv = PFNGLGETQUERYOBJECTIVPROC(glfwGetProcAddress("glGetQueryObjectiv"));
  glGetQueryObjectivARB = PFNGLGETQUERYOBJECTIVARBPROC(glfwGetProcAddress("glGetQueryObjectivARB"));
  glGetQueryObjectui64v = PFNGLGETQUERYOBJECTUI64VPROC(glfwGetProcAddress("glGetQueryObjectui64v"));
  glGetQueryObjectui64vEXT = PFNGLGETQUERYOBJECTUI64VEXTPROC(glfwGetProcAddress("glGetQueryObjectui64vEXT"));
  glGetQueryObjectuiv = PFNGLGETQUERYOBJECTUIVPROC(glfwGetProcAddress("glGetQueryObjectuiv"));
  glGetQueryObjectuivARB = PFNGLGETQUERYOBJECTUIVARBPROC(glfwGetProcAddress("glGetQueryObjectuivARB"));
  glGetRenderbufferParameteriv = PFNGLGETRENDERBUFFERPARAMETERIVPROC(glfwGetProcAddress("glGetRenderbufferParameteriv"));
  glGetRenderbufferParameterivEXT = PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC(glfwGetProcAddress("glGetRenderbufferParameterivEXT"));
  glGetSamplerParameterfv = PFNGLGETSAMPLERPARAMETERFVPROC(glfwGetProcAddress("glGetSamplerParameterfv"));
  glGetSamplerParameterIiv = PFNGLGETSAMPLERPARAMETERIIVPROC(glfwGetProcAddress("glGetSamplerParameterIiv"));
  glGetSamplerParameterIuiv = PFNGLGETSAMPLERPARAMETERIUIVPROC(glfwGetProcAddress("glGetSamplerParameterIuiv"));
  glGetSamplerParameteriv = PFNGLGETSAMPLERPARAMETERIVPROC(glfwGetProcAddress("glGetSamplerParameteriv"));
  glGetSeparableFilter = PFNGLGETSEPARABLEFILTERPROC(glfwGetProcAddress("glGetSeparableFilter"));
  glGetSeparableFilterEXT = PFNGLGETSEPARABLEFILTEREXTPROC(glfwGetProcAddress("glGetSeparableFilterEXT"));
  glGetShaderInfoLog = PFNGLGETSHADERINFOLOGPROC(glfwGetProcAddress("glGetShaderInfoLog"));
  glGetShaderiv = PFNGLGETSHADERIVPROC(glfwGetProcAddress("glGetShaderiv"));
  glGetShaderPrecisionFormat = PFNGLGETSHADERPRECISIONFORMATPROC(glfwGetProcAddress("glGetShaderPrecisionFormat"));
  glGetShaderSource = PFNGLGETSHADERSOURCEPROC(glfwGetProcAddress("glGetShaderSource"));
  glGetShaderSourceARB = PFNGLGETSHADERSOURCEARBPROC(glfwGetProcAddress("glGetShaderSourceARB"));
  glGetSharpenTexFuncSGIS = PFNGLGETSHARPENTEXFUNCSGISPROC(glfwGetProcAddress("glGetSharpenTexFuncSGIS"));
  glGetStageIndexNV = PFNGLGETSTAGEINDEXNVPROC(glfwGetProcAddress("glGetStageIndexNV"));
  glGetStringi = PFNGLGETSTRINGIPROC(glfwGetProcAddress("glGetStringi"));
  glGetSubroutineIndex = PFNGLGETSUBROUTINEINDEXPROC(glfwGetProcAddress("glGetSubroutineIndex"));
  glGetSubroutineUniformLocation = PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC(glfwGetProcAddress("glGetSubroutineUniformLocation"));
  glGetSynciv = PFNGLGETSYNCIVPROC(glfwGetProcAddress("glGetSynciv"));
  glGetTexBumpParameterfvATI = PFNGLGETTEXBUMPPARAMETERFVATIPROC(glfwGetProcAddress("glGetTexBumpParameterfvATI"));
  glGetTexBumpParameterivATI = PFNGLGETTEXBUMPPARAMETERIVATIPROC(glfwGetProcAddress("glGetTexBumpParameterivATI"));
  glGetTexEnvxvOES = PFNGLGETTEXENVXVOESPROC(glfwGetProcAddress("glGetTexEnvxvOES"));
  glGetTexFilterFuncSGIS = PFNGLGETTEXFILTERFUNCSGISPROC(glfwGetProcAddress("glGetTexFilterFuncSGIS"));
  glGetTexGenxvOES = PFNGLGETTEXGENXVOESPROC(glfwGetProcAddress("glGetTexGenxvOES"));
  glGetTexLevelParameterxvOES = PFNGLGETTEXLEVELPARAMETERXVOESPROC(glfwGetProcAddress("glGetTexLevelParameterxvOES"));
  glGetTexParameterIiv = PFNGLGETTEXPARAMETERIIVPROC(glfwGetProcAddress("glGetTexParameterIiv"));
  glGetTexParameterIivEXT = PFNGLGETTEXPARAMETERIIVEXTPROC(glfwGetProcAddress("glGetTexParameterIivEXT"));
  glGetTexParameterIuiv = PFNGLGETTEXPARAMETERIUIVPROC(glfwGetProcAddress("glGetTexParameterIuiv"));
  glGetTexParameterIuivEXT = PFNGLGETTEXPARAMETERIUIVEXTPROC(glfwGetProcAddress("glGetTexParameterIuivEXT"));
  glGetTexParameterPointervAPPLE = PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC(glfwGetProcAddress("glGetTexParameterPointervAPPLE"));
  glGetTexParameterxvOES = PFNGLGETTEXPARAMETERXVOESPROC(glfwGetProcAddress("glGetTexParameterxvOES"));
  glGetTextureHandleARB = PFNGLGETTEXTUREHANDLEARBPROC(glfwGetProcAddress("glGetTextureHandleARB"));
  glGetTextureHandleNV = PFNGLGETTEXTUREHANDLENVPROC(glfwGetProcAddress("glGetTextureHandleNV"));
  glGetTextureImage = PFNGLGETTEXTUREIMAGEPROC(glfwGetProcAddress("glGetTextureImage"));
  glGetTextureImageEXT = PFNGLGETTEXTUREIMAGEEXTPROC(glfwGetProcAddress("glGetTextureImageEXT"));
  glGetTextureLevelParameterfv = PFNGLGETTEXTURELEVELPARAMETERFVPROC(glfwGetProcAddress("glGetTextureLevelParameterfv"));
  glGetTextureLevelParameterfvEXT = PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC(glfwGetProcAddress("glGetTextureLevelParameterfvEXT"));
  glGetTextureLevelParameteriv = PFNGLGETTEXTURELEVELPARAMETERIVPROC(glfwGetProcAddress("glGetTextureLevelParameteriv"));
  glGetTextureLevelParameterivEXT = PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC(glfwGetProcAddress("glGetTextureLevelParameterivEXT"));
  glGetTextureParameterfv = PFNGLGETTEXTUREPARAMETERFVPROC(glfwGetProcAddress("glGetTextureParameterfv"));
  glGetTextureParameterfvEXT = PFNGLGETTEXTUREPARAMETERFVEXTPROC(glfwGetProcAddress("glGetTextureParameterfvEXT"));
  glGetTextureParameterIiv = PFNGLGETTEXTUREPARAMETERIIVPROC(glfwGetProcAddress("glGetTextureParameterIiv"));
  glGetTextureParameterIivEXT = PFNGLGETTEXTUREPARAMETERIIVEXTPROC(glfwGetProcAddress("glGetTextureParameterIivEXT"));
  glGetTextureParameterIuiv = PFNGLGETTEXTUREPARAMETERIUIVPROC(glfwGetProcAddress("glGetTextureParameterIuiv"));
  glGetTextureParameterIuivEXT = PFNGLGETTEXTUREPARAMETERIUIVEXTPROC(glfwGetProcAddress("glGetTextureParameterIuivEXT"));
  glGetTextureParameteriv = PFNGLGETTEXTUREPARAMETERIVPROC(glfwGetProcAddress("glGetTextureParameteriv"));
  glGetTextureParameterivEXT = PFNGLGETTEXTUREPARAMETERIVEXTPROC(glfwGetProcAddress("glGetTextureParameterivEXT"));
  glGetTextureSamplerHandleARB = PFNGLGETTEXTURESAMPLERHANDLEARBPROC(glfwGetProcAddress("glGetTextureSamplerHandleARB"));
  glGetTextureSamplerHandleNV = PFNGLGETTEXTURESAMPLERHANDLENVPROC(glfwGetProcAddress("glGetTextureSamplerHandleNV"));
  glGetTextureSubImage = PFNGLGETTEXTURESUBIMAGEPROC(glfwGetProcAddress("glGetTextureSubImage"));
  glGetTrackMatrixivNV = PFNGLGETTRACKMATRIXIVNVPROC(glfwGetProcAddress("glGetTrackMatrixivNV"));
  glGetTransformFeedbacki_v = PFNGLGETTRANSFORMFEEDBACKI_VPROC(glfwGetProcAddress("glGetTransformFeedbacki_v"));
  glGetTransformFeedbacki64_v = PFNGLGETTRANSFORMFEEDBACKI64_VPROC(glfwGetProcAddress("glGetTransformFeedbacki64_v"));
  glGetTransformFeedbackiv = PFNGLGETTRANSFORMFEEDBACKIVPROC(glfwGetProcAddress("glGetTransformFeedbackiv"));
  glGetTransformFeedbackVarying = PFNGLGETTRANSFORMFEEDBACKVARYINGPROC(glfwGetProcAddress("glGetTransformFeedbackVarying"));
  glGetTransformFeedbackVaryingEXT = PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC(glfwGetProcAddress("glGetTransformFeedbackVaryingEXT"));
  glGetTransformFeedbackVaryingNV = PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC(glfwGetProcAddress("glGetTransformFeedbackVaryingNV"));
  glGetUniformBlockIndex = PFNGLGETUNIFORMBLOCKINDEXPROC(glfwGetProcAddress("glGetUniformBlockIndex"));
  glGetUniformBufferSizeEXT = PFNGLGETUNIFORMBUFFERSIZEEXTPROC(glfwGetProcAddress("glGetUniformBufferSizeEXT"));
  glGetUniformdv = PFNGLGETUNIFORMDVPROC(glfwGetProcAddress("glGetUniformdv"));
  glGetUniformfv = PFNGLGETUNIFORMFVPROC(glfwGetProcAddress("glGetUniformfv"));
  glGetUniformfvARB = PFNGLGETUNIFORMFVARBPROC(glfwGetProcAddress("glGetUniformfvARB"));
  glGetUniformi64vARB = PFNGLGETUNIFORMI64VARBPROC(glfwGetProcAddress("glGetUniformi64vARB"));
  glGetUniformi64vNV = PFNGLGETUNIFORMI64VNVPROC(glfwGetProcAddress("glGetUniformi64vNV"));
  glGetUniformIndices = PFNGLGETUNIFORMINDICESPROC(glfwGetProcAddress("glGetUniformIndices"));
  glGetUniformiv = PFNGLGETUNIFORMIVPROC(glfwGetProcAddress("glGetUniformiv"));
  glGetUniformivARB = PFNGLGETUNIFORMIVARBPROC(glfwGetProcAddress("glGetUniformivARB"));
  glGetUniformLocation = PFNGLGETUNIFORMLOCATIONPROC(glfwGetProcAddress("glGetUniformLocation"));
  glGetUniformLocationARB = PFNGLGETUNIFORMLOCATIONARBPROC(glfwGetProcAddress("glGetUniformLocationARB"));
  glGetUniformOffsetEXT = PFNGLGETUNIFORMOFFSETEXTPROC(glfwGetProcAddress("glGetUniformOffsetEXT"));
  glGetUniformSubroutineuiv = PFNGLGETUNIFORMSUBROUTINEUIVPROC(glfwGetProcAddress("glGetUniformSubroutineuiv"));
  glGetUniformui64vARB = PFNGLGETUNIFORMUI64VARBPROC(glfwGetProcAddress("glGetUniformui64vARB"));
  glGetUniformui64vNV = PFNGLGETUNIFORMUI64VNVPROC(glfwGetProcAddress("glGetUniformui64vNV"));
  glGetUniformuiv = PFNGLGETUNIFORMUIVPROC(glfwGetProcAddress("glGetUniformuiv"));
  glGetUniformuivEXT = PFNGLGETUNIFORMUIVEXTPROC(glfwGetProcAddress("glGetUniformuivEXT"));
  glGetVariantArrayObjectfvATI = PFNGLGETVARIANTARRAYOBJECTFVATIPROC(glfwGetProcAddress("glGetVariantArrayObjectfvATI"));
  glGetVariantArrayObjectivATI = PFNGLGETVARIANTARRAYOBJECTIVATIPROC(glfwGetProcAddress("glGetVariantArrayObjectivATI"));
  glGetVariantBooleanvEXT = PFNGLGETVARIANTBOOLEANVEXTPROC(glfwGetProcAddress("glGetVariantBooleanvEXT"));
  glGetVariantFloatvEXT = PFNGLGETVARIANTFLOATVEXTPROC(glfwGetProcAddress("glGetVariantFloatvEXT"));
  glGetVariantIntegervEXT = PFNGLGETVARIANTINTEGERVEXTPROC(glfwGetProcAddress("glGetVariantIntegervEXT"));
  glGetVariantPointervEXT = PFNGLGETVARIANTPOINTERVEXTPROC(glfwGetProcAddress("glGetVariantPointervEXT"));
  glGetVaryingLocationNV = PFNGLGETVARYINGLOCATIONNVPROC(glfwGetProcAddress("glGetVaryingLocationNV"));
  glGetVertexArrayIndexed64iv = PFNGLGETVERTEXARRAYINDEXED64IVPROC(glfwGetProcAddress("glGetVertexArrayIndexed64iv"));
  glGetVertexArrayIndexediv = PFNGLGETVERTEXARRAYINDEXEDIVPROC(glfwGetProcAddress("glGetVertexArrayIndexediv"));
  glGetVertexArrayIntegeri_vEXT = PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC(glfwGetProcAddress("glGetVertexArrayIntegeri_vEXT"));
  glGetVertexArrayIntegervEXT = PFNGLGETVERTEXARRAYINTEGERVEXTPROC(glfwGetProcAddress("glGetVertexArrayIntegervEXT"));
  glGetVertexArrayiv = PFNGLGETVERTEXARRAYIVPROC(glfwGetProcAddress("glGetVertexArrayiv"));
  glGetVertexArrayPointeri_vEXT = PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC(glfwGetProcAddress("glGetVertexArrayPointeri_vEXT"));
  glGetVertexArrayPointervEXT = PFNGLGETVERTEXARRAYPOINTERVEXTPROC(glfwGetProcAddress("glGetVertexArrayPointervEXT"));
  glGetVertexAttribArrayObjectfvATI = PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC(glfwGetProcAddress("glGetVertexAttribArrayObjectfvATI"));
  glGetVertexAttribArrayObjectivATI = PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC(glfwGetProcAddress("glGetVertexAttribArrayObjectivATI"));
  glGetVertexAttribdv = PFNGLGETVERTEXATTRIBDVPROC(glfwGetProcAddress("glGetVertexAttribdv"));
  glGetVertexAttribdvARB = PFNGLGETVERTEXATTRIBDVARBPROC(glfwGetProcAddress("glGetVertexAttribdvARB"));
  glGetVertexAttribdvNV = PFNGLGETVERTEXATTRIBDVNVPROC(glfwGetProcAddress("glGetVertexAttribdvNV"));
  glGetVertexAttribfv = PFNGLGETVERTEXATTRIBFVPROC(glfwGetProcAddress("glGetVertexAttribfv"));
  glGetVertexAttribfvARB = PFNGLGETVERTEXATTRIBFVARBPROC(glfwGetProcAddress("glGetVertexAttribfvARB"));
  glGetVertexAttribfvNV = PFNGLGETVERTEXATTRIBFVNVPROC(glfwGetProcAddress("glGetVertexAttribfvNV"));
  glGetVertexAttribIiv = PFNGLGETVERTEXATTRIBIIVPROC(glfwGetProcAddress("glGetVertexAttribIiv"));
  glGetVertexAttribIivEXT = PFNGLGETVERTEXATTRIBIIVEXTPROC(glfwGetProcAddress("glGetVertexAttribIivEXT"));
  glGetVertexAttribIuiv = PFNGLGETVERTEXATTRIBIUIVPROC(glfwGetProcAddress("glGetVertexAttribIuiv"));
  glGetVertexAttribIuivEXT = PFNGLGETVERTEXATTRIBIUIVEXTPROC(glfwGetProcAddress("glGetVertexAttribIuivEXT"));
  glGetVertexAttribiv = PFNGLGETVERTEXATTRIBIVPROC(glfwGetProcAddress("glGetVertexAttribiv"));
  glGetVertexAttribivARB = PFNGLGETVERTEXATTRIBIVARBPROC(glfwGetProcAddress("glGetVertexAttribivARB"));
  glGetVertexAttribivNV = PFNGLGETVERTEXATTRIBIVNVPROC(glfwGetProcAddress("glGetVertexAttribivNV"));
  glGetVertexAttribLdv = PFNGLGETVERTEXATTRIBLDVPROC(glfwGetProcAddress("glGetVertexAttribLdv"));
  glGetVertexAttribLdvEXT = PFNGLGETVERTEXATTRIBLDVEXTPROC(glfwGetProcAddress("glGetVertexAttribLdvEXT"));
  glGetVertexAttribLi64vNV = PFNGLGETVERTEXATTRIBLI64VNVPROC(glfwGetProcAddress("glGetVertexAttribLi64vNV"));
  glGetVertexAttribLui64vARB = PFNGLGETVERTEXATTRIBLUI64VARBPROC(glfwGetProcAddress("glGetVertexAttribLui64vARB"));
  glGetVertexAttribLui64vNV = PFNGLGETVERTEXATTRIBLUI64VNVPROC(glfwGetProcAddress("glGetVertexAttribLui64vNV"));
  glGetVertexAttribPointerv = PFNGLGETVERTEXATTRIBPOINTERVPROC(glfwGetProcAddress("glGetVertexAttribPointerv"));
  glGetVertexAttribPointervARB = PFNGLGETVERTEXATTRIBPOINTERVARBPROC(glfwGetProcAddress("glGetVertexAttribPointervARB"));
  glGetVertexAttribPointervNV = PFNGLGETVERTEXATTRIBPOINTERVNVPROC(glfwGetProcAddress("glGetVertexAttribPointervNV"));
  glGetVideoCaptureivNV = PFNGLGETVIDEOCAPTUREIVNVPROC(glfwGetProcAddress("glGetVideoCaptureivNV"));
  glGetVideoCaptureStreamdvNV = PFNGLGETVIDEOCAPTURESTREAMDVNVPROC(glfwGetProcAddress("glGetVideoCaptureStreamdvNV"));
  glGetVideoCaptureStreamfvNV = PFNGLGETVIDEOCAPTURESTREAMFVNVPROC(glfwGetProcAddress("glGetVideoCaptureStreamfvNV"));
  glGetVideoCaptureStreamivNV = PFNGLGETVIDEOCAPTURESTREAMIVNVPROC(glfwGetProcAddress("glGetVideoCaptureStreamivNV"));
  glGetVideoi64vNV = PFNGLGETVIDEOI64VNVPROC(glfwGetProcAddress("glGetVideoi64vNV"));
  glGetVideoivNV = PFNGLGETVIDEOIVNVPROC(glfwGetProcAddress("glGetVideoivNV"));
  glGetVideoui64vNV = PFNGLGETVIDEOUI64VNVPROC(glfwGetProcAddress("glGetVideoui64vNV"));
  glGetVideouivNV = PFNGLGETVIDEOUIVNVPROC(glfwGetProcAddress("glGetVideouivNV"));
  glGetVkProcAddrNV = PFNGLGETVKPROCADDRNVPROC(glfwGetProcAddress("glGetVkProcAddrNV"));
  glGlobalAlphaFactorbSUN = PFNGLGLOBALALPHAFACTORBSUNPROC(glfwGetProcAddress("glGlobalAlphaFactorbSUN"));
  glGlobalAlphaFactordSUN = PFNGLGLOBALALPHAFACTORDSUNPROC(glfwGetProcAddress("glGlobalAlphaFactordSUN"));
  glGlobalAlphaFactorfSUN = PFNGLGLOBALALPHAFACTORFSUNPROC(glfwGetProcAddress("glGlobalAlphaFactorfSUN"));
  glGlobalAlphaFactoriSUN = PFNGLGLOBALALPHAFACTORISUNPROC(glfwGetProcAddress("glGlobalAlphaFactoriSUN"));
  glGlobalAlphaFactorsSUN = PFNGLGLOBALALPHAFACTORSSUNPROC(glfwGetProcAddress("glGlobalAlphaFactorsSUN"));
  glGlobalAlphaFactorubSUN = PFNGLGLOBALALPHAFACTORUBSUNPROC(glfwGetProcAddress("glGlobalAlphaFactorubSUN"));
  glGlobalAlphaFactoruiSUN = PFNGLGLOBALALPHAFACTORUISUNPROC(glfwGetProcAddress("glGlobalAlphaFactoruiSUN"));
  glGlobalAlphaFactorusSUN = PFNGLGLOBALALPHAFACTORUSSUNPROC(glfwGetProcAddress("glGlobalAlphaFactorusSUN"));
  glHintPGI = PFNGLHINTPGIPROC(glfwGetProcAddress("glHintPGI"));
  glHistogram = PFNGLHISTOGRAMPROC(glfwGetProcAddress("glHistogram"));
  glHistogramEXT = PFNGLHISTOGRAMEXTPROC(glfwGetProcAddress("glHistogramEXT"));
  glIglooInterfaceSGIX = PFNGLIGLOOINTERFACESGIXPROC(glfwGetProcAddress("glIglooInterfaceSGIX"));
  glImageTransformParameterfHP = PFNGLIMAGETRANSFORMPARAMETERFHPPROC(glfwGetProcAddress("glImageTransformParameterfHP"));
  glImageTransformParameterfvHP = PFNGLIMAGETRANSFORMPARAMETERFVHPPROC(glfwGetProcAddress("glImageTransformParameterfvHP"));
  glImageTransformParameteriHP = PFNGLIMAGETRANSFORMPARAMETERIHPPROC(glfwGetProcAddress("glImageTransformParameteriHP"));
  glImageTransformParameterivHP = PFNGLIMAGETRANSFORMPARAMETERIVHPPROC(glfwGetProcAddress("glImageTransformParameterivHP"));
  glImportSyncEXT = PFNGLIMPORTSYNCEXTPROC(glfwGetProcAddress("glImportSyncEXT"));
  glIndexFormatNV = PFNGLINDEXFORMATNVPROC(glfwGetProcAddress("glIndexFormatNV"));
  glIndexFuncEXT = PFNGLINDEXFUNCEXTPROC(glfwGetProcAddress("glIndexFuncEXT"));
  glIndexMaterialEXT = PFNGLINDEXMATERIALEXTPROC(glfwGetProcAddress("glIndexMaterialEXT"));
  glIndexPointerEXT = PFNGLINDEXPOINTEREXTPROC(glfwGetProcAddress("glIndexPointerEXT"));
  glIndexPointerListIBM = PFNGLINDEXPOINTERLISTIBMPROC(glfwGetProcAddress("glIndexPointerListIBM"));
  glIndexxOES = PFNGLINDEXXOESPROC(glfwGetProcAddress("glIndexxOES"));
  glIndexxvOES = PFNGLINDEXXVOESPROC(glfwGetProcAddress("glIndexxvOES"));
  glInsertComponentEXT = PFNGLINSERTCOMPONENTEXTPROC(glfwGetProcAddress("glInsertComponentEXT"));
  glInsertEventMarkerEXT = PFNGLINSERTEVENTMARKEREXTPROC(glfwGetProcAddress("glInsertEventMarkerEXT"));
  glInstrumentsBufferSGIX = PFNGLINSTRUMENTSBUFFERSGIXPROC(glfwGetProcAddress("glInstrumentsBufferSGIX"));
  glInterpolatePathsNV = PFNGLINTERPOLATEPATHSNVPROC(glfwGetProcAddress("glInterpolatePathsNV"));
  glInvalidateBufferData = PFNGLINVALIDATEBUFFERDATAPROC(glfwGetProcAddress("glInvalidateBufferData"));
  glInvalidateBufferSubData = PFNGLINVALIDATEBUFFERSUBDATAPROC(glfwGetProcAddress("glInvalidateBufferSubData"));
  glInvalidateFramebuffer = PFNGLINVALIDATEFRAMEBUFFERPROC(glfwGetProcAddress("glInvalidateFramebuffer"));
  glInvalidateNamedFramebufferData = PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC(glfwGetProcAddress("glInvalidateNamedFramebufferData"));
  glInvalidateNamedFramebufferSubData = PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC(glfwGetProcAddress("glInvalidateNamedFramebufferSubData"));
  glInvalidateSubFramebuffer = PFNGLINVALIDATESUBFRAMEBUFFERPROC(glfwGetProcAddress("glInvalidateSubFramebuffer"));
  glInvalidateTexImage = PFNGLINVALIDATETEXIMAGEPROC(glfwGetProcAddress("glInvalidateTexImage"));
  glInvalidateTexSubImage = PFNGLINVALIDATETEXSUBIMAGEPROC(glfwGetProcAddress("glInvalidateTexSubImage"));
  glIsAsyncMarkerSGIX = PFNGLISASYNCMARKERSGIXPROC(glfwGetProcAddress("glIsAsyncMarkerSGIX"));
  glIsBuffer = PFNGLISBUFFERPROC(glfwGetProcAddress("glIsBuffer"));
  glIsBufferARB = PFNGLISBUFFERARBPROC(glfwGetProcAddress("glIsBufferARB"));
  glIsBufferResidentNV = PFNGLISBUFFERRESIDENTNVPROC(glfwGetProcAddress("glIsBufferResidentNV"));
  glIsCommandListNV = PFNGLISCOMMANDLISTNVPROC(glfwGetProcAddress("glIsCommandListNV"));
  glIsEnabledi = PFNGLISENABLEDIPROC(glfwGetProcAddress("glIsEnabledi"));
  glIsEnabledIndexedEXT = PFNGLISENABLEDINDEXEDEXTPROC(glfwGetProcAddress("glIsEnabledIndexedEXT"));
  glIsFenceAPPLE = PFNGLISFENCEAPPLEPROC(glfwGetProcAddress("glIsFenceAPPLE"));
  glIsFenceNV = PFNGLISFENCENVPROC(glfwGetProcAddress("glIsFenceNV"));
  glIsFramebuffer = PFNGLISFRAMEBUFFERPROC(glfwGetProcAddress("glIsFramebuffer"));
  glIsFramebufferEXT = PFNGLISFRAMEBUFFEREXTPROC(glfwGetProcAddress("glIsFramebufferEXT"));
  glIsImageHandleResidentARB = PFNGLISIMAGEHANDLERESIDENTARBPROC(glfwGetProcAddress("glIsImageHandleResidentARB"));
  glIsImageHandleResidentNV = PFNGLISIMAGEHANDLERESIDENTNVPROC(glfwGetProcAddress("glIsImageHandleResidentNV"));
  glIsNameAMD = PFNGLISNAMEAMDPROC(glfwGetProcAddress("glIsNameAMD"));
  glIsNamedBufferResidentNV = PFNGLISNAMEDBUFFERRESIDENTNVPROC(glfwGetProcAddress("glIsNamedBufferResidentNV"));
  glIsNamedStringARB = PFNGLISNAMEDSTRINGARBPROC(glfwGetProcAddress("glIsNamedStringARB"));
  glIsObjectBufferATI = PFNGLISOBJECTBUFFERATIPROC(glfwGetProcAddress("glIsObjectBufferATI"));
  glIsOcclusionQueryNV = PFNGLISOCCLUSIONQUERYNVPROC(glfwGetProcAddress("glIsOcclusionQueryNV"));
  glIsPathNV = PFNGLISPATHNVPROC(glfwGetProcAddress("glIsPathNV"));
  glIsPointInFillPathNV = PFNGLISPOINTINFILLPATHNVPROC(glfwGetProcAddress("glIsPointInFillPathNV"));
  glIsPointInStrokePathNV = PFNGLISPOINTINSTROKEPATHNVPROC(glfwGetProcAddress("glIsPointInStrokePathNV"));
  glIsProgram = PFNGLISPROGRAMPROC(glfwGetProcAddress("glIsProgram"));
  glIsProgramARB = PFNGLISPROGRAMARBPROC(glfwGetProcAddress("glIsProgramARB"));
  glIsProgramNV = PFNGLISPROGRAMNVPROC(glfwGetProcAddress("glIsProgramNV"));
  glIsProgramPipeline = PFNGLISPROGRAMPIPELINEPROC(glfwGetProcAddress("glIsProgramPipeline"));
  glIsQuery = PFNGLISQUERYPROC(glfwGetProcAddress("glIsQuery"));
  glIsQueryARB = PFNGLISQUERYARBPROC(glfwGetProcAddress("glIsQueryARB"));
  glIsRenderbuffer = PFNGLISRENDERBUFFERPROC(glfwGetProcAddress("glIsRenderbuffer"));
  glIsRenderbufferEXT = PFNGLISRENDERBUFFEREXTPROC(glfwGetProcAddress("glIsRenderbufferEXT"));
  glIsSampler = PFNGLISSAMPLERPROC(glfwGetProcAddress("glIsSampler"));
  glIsShader = PFNGLISSHADERPROC(glfwGetProcAddress("glIsShader"));
  glIsStateNV = PFNGLISSTATENVPROC(glfwGetProcAddress("glIsStateNV"));
  glIsSync = PFNGLISSYNCPROC(glfwGetProcAddress("glIsSync"));
  glIsTextureEXT = PFNGLISTEXTUREEXTPROC(glfwGetProcAddress("glIsTextureEXT"));
  glIsTextureHandleResidentARB = PFNGLISTEXTUREHANDLERESIDENTARBPROC(glfwGetProcAddress("glIsTextureHandleResidentARB"));
  glIsTextureHandleResidentNV = PFNGLISTEXTUREHANDLERESIDENTNVPROC(glfwGetProcAddress("glIsTextureHandleResidentNV"));
  glIsTransformFeedback = PFNGLISTRANSFORMFEEDBACKPROC(glfwGetProcAddress("glIsTransformFeedback"));
  glIsTransformFeedbackNV = PFNGLISTRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glIsTransformFeedbackNV"));
  glIsVariantEnabledEXT = PFNGLISVARIANTENABLEDEXTPROC(glfwGetProcAddress("glIsVariantEnabledEXT"));
  glIsVertexArray = PFNGLISVERTEXARRAYPROC(glfwGetProcAddress("glIsVertexArray"));
  glIsVertexArrayAPPLE = PFNGLISVERTEXARRAYAPPLEPROC(glfwGetProcAddress("glIsVertexArrayAPPLE"));
  glIsVertexAttribEnabledAPPLE = PFNGLISVERTEXATTRIBENABLEDAPPLEPROC(glfwGetProcAddress("glIsVertexAttribEnabledAPPLE"));
  glLabelObjectEXT = PFNGLLABELOBJECTEXTPROC(glfwGetProcAddress("glLabelObjectEXT"));
  glLGPUCopyImageSubDataNVX = PFNGLLGPUCOPYIMAGESUBDATANVXPROC(glfwGetProcAddress("glLGPUCopyImageSubDataNVX"));
  glLGPUInterlockNVX = PFNGLLGPUINTERLOCKNVXPROC(glfwGetProcAddress("glLGPUInterlockNVX"));
  glLGPUNamedBufferSubDataNVX = PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC(glfwGetProcAddress("glLGPUNamedBufferSubDataNVX"));
  glLightEnviSGIX = PFNGLLIGHTENVISGIXPROC(glfwGetProcAddress("glLightEnviSGIX"));
  glLightModelxOES = PFNGLLIGHTMODELXOESPROC(glfwGetProcAddress("glLightModelxOES"));
  glLightModelxvOES = PFNGLLIGHTMODELXVOESPROC(glfwGetProcAddress("glLightModelxvOES"));
  glLightxOES = PFNGLLIGHTXOESPROC(glfwGetProcAddress("glLightxOES"));
  glLightxvOES = PFNGLLIGHTXVOESPROC(glfwGetProcAddress("glLightxvOES"));
  glLineWidthxOES = PFNGLLINEWIDTHXOESPROC(glfwGetProcAddress("glLineWidthxOES"));
  glLinkProgram = PFNGLLINKPROGRAMPROC(glfwGetProcAddress("glLinkProgram"));
  glLinkProgramARB = PFNGLLINKPROGRAMARBPROC(glfwGetProcAddress("glLinkProgramARB"));
  glListDrawCommandsStatesClientNV = PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC(glfwGetProcAddress("glListDrawCommandsStatesClientNV"));
  glListParameterfSGIX = PFNGLLISTPARAMETERFSGIXPROC(glfwGetProcAddress("glListParameterfSGIX"));
  glListParameterfvSGIX = PFNGLLISTPARAMETERFVSGIXPROC(glfwGetProcAddress("glListParameterfvSGIX"));
  glListParameteriSGIX = PFNGLLISTPARAMETERISGIXPROC(glfwGetProcAddress("glListParameteriSGIX"));
  glListParameterivSGIX = PFNGLLISTPARAMETERIVSGIXPROC(glfwGetProcAddress("glListParameterivSGIX"));
  glLoadIdentityDeformationMapSGIX = PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC(glfwGetProcAddress("glLoadIdentityDeformationMapSGIX"));
  glLoadMatrixxOES = PFNGLLOADMATRIXXOESPROC(glfwGetProcAddress("glLoadMatrixxOES"));
  glLoadProgramNV = PFNGLLOADPROGRAMNVPROC(glfwGetProcAddress("glLoadProgramNV"));
  glLoadTransposeMatrixd = PFNGLLOADTRANSPOSEMATRIXDPROC(glfwGetProcAddress("glLoadTransposeMatrixd"));
  glLoadTransposeMatrixdARB = PFNGLLOADTRANSPOSEMATRIXDARBPROC(glfwGetProcAddress("glLoadTransposeMatrixdARB"));
  glLoadTransposeMatrixf = PFNGLLOADTRANSPOSEMATRIXFPROC(glfwGetProcAddress("glLoadTransposeMatrixf"));
  glLoadTransposeMatrixfARB = PFNGLLOADTRANSPOSEMATRIXFARBPROC(glfwGetProcAddress("glLoadTransposeMatrixfARB"));
  glLoadTransposeMatrixxOES = PFNGLLOADTRANSPOSEMATRIXXOESPROC(glfwGetProcAddress("glLoadTransposeMatrixxOES"));
  glLockArraysEXT = PFNGLLOCKARRAYSEXTPROC(glfwGetProcAddress("glLockArraysEXT"));
  glMakeBufferNonResidentNV = PFNGLMAKEBUFFERNONRESIDENTNVPROC(glfwGetProcAddress("glMakeBufferNonResidentNV"));
  glMakeBufferResidentNV = PFNGLMAKEBUFFERRESIDENTNVPROC(glfwGetProcAddress("glMakeBufferResidentNV"));
  glMakeImageHandleNonResidentARB = PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC(glfwGetProcAddress("glMakeImageHandleNonResidentARB"));
  glMakeImageHandleNonResidentNV = PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC(glfwGetProcAddress("glMakeImageHandleNonResidentNV"));
  glMakeImageHandleResidentARB = PFNGLMAKEIMAGEHANDLERESIDENTARBPROC(glfwGetProcAddress("glMakeImageHandleResidentARB"));
  glMakeImageHandleResidentNV = PFNGLMAKEIMAGEHANDLERESIDENTNVPROC(glfwGetProcAddress("glMakeImageHandleResidentNV"));
  glMakeNamedBufferNonResidentNV = PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC(glfwGetProcAddress("glMakeNamedBufferNonResidentNV"));
  glMakeNamedBufferResidentNV = PFNGLMAKENAMEDBUFFERRESIDENTNVPROC(glfwGetProcAddress("glMakeNamedBufferResidentNV"));
  glMakeTextureHandleNonResidentARB = PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC(glfwGetProcAddress("glMakeTextureHandleNonResidentARB"));
  glMakeTextureHandleNonResidentNV = PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC(glfwGetProcAddress("glMakeTextureHandleNonResidentNV"));
  glMakeTextureHandleResidentARB = PFNGLMAKETEXTUREHANDLERESIDENTARBPROC(glfwGetProcAddress("glMakeTextureHandleResidentARB"));
  glMakeTextureHandleResidentNV = PFNGLMAKETEXTUREHANDLERESIDENTNVPROC(glfwGetProcAddress("glMakeTextureHandleResidentNV"));
  glMap1xOES = PFNGLMAP1XOESPROC(glfwGetProcAddress("glMap1xOES"));
  glMap2xOES = PFNGLMAP2XOESPROC(glfwGetProcAddress("glMap2xOES"));
  glMapBuffer = PFNGLMAPBUFFERPROC(glfwGetProcAddress("glMapBuffer"));
  glMapBufferARB = PFNGLMAPBUFFERARBPROC(glfwGetProcAddress("glMapBufferARB"));
  glMapBufferRange = PFNGLMAPBUFFERRANGEPROC(glfwGetProcAddress("glMapBufferRange"));
  glMapControlPointsNV = PFNGLMAPCONTROLPOINTSNVPROC(glfwGetProcAddress("glMapControlPointsNV"));
  glMapGrid1xOES = PFNGLMAPGRID1XOESPROC(glfwGetProcAddress("glMapGrid1xOES"));
  glMapGrid2xOES = PFNGLMAPGRID2XOESPROC(glfwGetProcAddress("glMapGrid2xOES"));
  glMapNamedBuffer = PFNGLMAPNAMEDBUFFERPROC(glfwGetProcAddress("glMapNamedBuffer"));
  glMapNamedBufferEXT = PFNGLMAPNAMEDBUFFEREXTPROC(glfwGetProcAddress("glMapNamedBufferEXT"));
  glMapNamedBufferRange = PFNGLMAPNAMEDBUFFERRANGEPROC(glfwGetProcAddress("glMapNamedBufferRange"));
  glMapNamedBufferRangeEXT = PFNGLMAPNAMEDBUFFERRANGEEXTPROC(glfwGetProcAddress("glMapNamedBufferRangeEXT"));
  glMapObjectBufferATI = PFNGLMAPOBJECTBUFFERATIPROC(glfwGetProcAddress("glMapObjectBufferATI"));
  glMapParameterfvNV = PFNGLMAPPARAMETERFVNVPROC(glfwGetProcAddress("glMapParameterfvNV"));
  glMapParameterivNV = PFNGLMAPPARAMETERIVNVPROC(glfwGetProcAddress("glMapParameterivNV"));
  glMapTexture2DINTEL = PFNGLMAPTEXTURE2DINTELPROC(glfwGetProcAddress("glMapTexture2DINTEL"));
  glMapVertexAttrib1dAPPLE = PFNGLMAPVERTEXATTRIB1DAPPLEPROC(glfwGetProcAddress("glMapVertexAttrib1dAPPLE"));
  glMapVertexAttrib1fAPPLE = PFNGLMAPVERTEXATTRIB1FAPPLEPROC(glfwGetProcAddress("glMapVertexAttrib1fAPPLE"));
  glMapVertexAttrib2dAPPLE = PFNGLMAPVERTEXATTRIB2DAPPLEPROC(glfwGetProcAddress("glMapVertexAttrib2dAPPLE"));
  glMapVertexAttrib2fAPPLE = PFNGLMAPVERTEXATTRIB2FAPPLEPROC(glfwGetProcAddress("glMapVertexAttrib2fAPPLE"));
  glMaterialxOES = PFNGLMATERIALXOESPROC(glfwGetProcAddress("glMaterialxOES"));
  glMaterialxvOES = PFNGLMATERIALXVOESPROC(glfwGetProcAddress("glMaterialxvOES"));
  glMatrixFrustumEXT = PFNGLMATRIXFRUSTUMEXTPROC(glfwGetProcAddress("glMatrixFrustumEXT"));
  glMatrixIndexPointerARB = PFNGLMATRIXINDEXPOINTERARBPROC(glfwGetProcAddress("glMatrixIndexPointerARB"));
  glMatrixIndexubvARB = PFNGLMATRIXINDEXUBVARBPROC(glfwGetProcAddress("glMatrixIndexubvARB"));
  glMatrixIndexuivARB = PFNGLMATRIXINDEXUIVARBPROC(glfwGetProcAddress("glMatrixIndexuivARB"));
  glMatrixIndexusvARB = PFNGLMATRIXINDEXUSVARBPROC(glfwGetProcAddress("glMatrixIndexusvARB"));
  glMatrixLoad3x2fNV = PFNGLMATRIXLOAD3X2FNVPROC(glfwGetProcAddress("glMatrixLoad3x2fNV"));
  glMatrixLoad3x3fNV = PFNGLMATRIXLOAD3X3FNVPROC(glfwGetProcAddress("glMatrixLoad3x3fNV"));
  glMatrixLoaddEXT = PFNGLMATRIXLOADDEXTPROC(glfwGetProcAddress("glMatrixLoaddEXT"));
  glMatrixLoadfEXT = PFNGLMATRIXLOADFEXTPROC(glfwGetProcAddress("glMatrixLoadfEXT"));
  glMatrixLoadIdentityEXT = PFNGLMATRIXLOADIDENTITYEXTPROC(glfwGetProcAddress("glMatrixLoadIdentityEXT"));
  glMatrixLoadTranspose3x3fNV = PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC(glfwGetProcAddress("glMatrixLoadTranspose3x3fNV"));
  glMatrixLoadTransposedEXT = PFNGLMATRIXLOADTRANSPOSEDEXTPROC(glfwGetProcAddress("glMatrixLoadTransposedEXT"));
  glMatrixLoadTransposefEXT = PFNGLMATRIXLOADTRANSPOSEFEXTPROC(glfwGetProcAddress("glMatrixLoadTransposefEXT"));
  glMatrixMult3x2fNV = PFNGLMATRIXMULT3X2FNVPROC(glfwGetProcAddress("glMatrixMult3x2fNV"));
  glMatrixMult3x3fNV = PFNGLMATRIXMULT3X3FNVPROC(glfwGetProcAddress("glMatrixMult3x3fNV"));
  glMatrixMultdEXT = PFNGLMATRIXMULTDEXTPROC(glfwGetProcAddress("glMatrixMultdEXT"));
  glMatrixMultfEXT = PFNGLMATRIXMULTFEXTPROC(glfwGetProcAddress("glMatrixMultfEXT"));
  glMatrixMultTranspose3x3fNV = PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC(glfwGetProcAddress("glMatrixMultTranspose3x3fNV"));
  glMatrixMultTransposedEXT = PFNGLMATRIXMULTTRANSPOSEDEXTPROC(glfwGetProcAddress("glMatrixMultTransposedEXT"));
  glMatrixMultTransposefEXT = PFNGLMATRIXMULTTRANSPOSEFEXTPROC(glfwGetProcAddress("glMatrixMultTransposefEXT"));
  glMatrixOrthoEXT = PFNGLMATRIXORTHOEXTPROC(glfwGetProcAddress("glMatrixOrthoEXT"));
  glMatrixPopEXT = PFNGLMATRIXPOPEXTPROC(glfwGetProcAddress("glMatrixPopEXT"));
  glMatrixPushEXT = PFNGLMATRIXPUSHEXTPROC(glfwGetProcAddress("glMatrixPushEXT"));
  glMatrixRotatedEXT = PFNGLMATRIXROTATEDEXTPROC(glfwGetProcAddress("glMatrixRotatedEXT"));
  glMatrixRotatefEXT = PFNGLMATRIXROTATEFEXTPROC(glfwGetProcAddress("glMatrixRotatefEXT"));
  glMatrixScaledEXT = PFNGLMATRIXSCALEDEXTPROC(glfwGetProcAddress("glMatrixScaledEXT"));
  glMatrixScalefEXT = PFNGLMATRIXSCALEFEXTPROC(glfwGetProcAddress("glMatrixScalefEXT"));
  glMatrixTranslatedEXT = PFNGLMATRIXTRANSLATEDEXTPROC(glfwGetProcAddress("glMatrixTranslatedEXT"));
  glMatrixTranslatefEXT = PFNGLMATRIXTRANSLATEFEXTPROC(glfwGetProcAddress("glMatrixTranslatefEXT"));
  glMaxShaderCompilerThreadsARB = PFNGLMAXSHADERCOMPILERTHREADSARBPROC(glfwGetProcAddress("glMaxShaderCompilerThreadsARB"));
  glMemoryBarrier = PFNGLMEMORYBARRIERPROC(glfwGetProcAddress("glMemoryBarrier"));
  glMemoryBarrierByRegion = PFNGLMEMORYBARRIERBYREGIONPROC(glfwGetProcAddress("glMemoryBarrierByRegion"));
  glMemoryBarrierEXT = PFNGLMEMORYBARRIEREXTPROC(glfwGetProcAddress("glMemoryBarrierEXT"));
  glMinmax = PFNGLMINMAXPROC(glfwGetProcAddress("glMinmax"));
  glMinmaxEXT = PFNGLMINMAXEXTPROC(glfwGetProcAddress("glMinmaxEXT"));
  glMinSampleShading = PFNGLMINSAMPLESHADINGPROC(glfwGetProcAddress("glMinSampleShading"));
  glMinSampleShadingARB = PFNGLMINSAMPLESHADINGARBPROC(glfwGetProcAddress("glMinSampleShadingARB"));
  glMulticastBarrierNV = PFNGLMULTICASTBARRIERNVPROC(glfwGetProcAddress("glMulticastBarrierNV"));
  glMulticastBlitFramebufferNV = PFNGLMULTICASTBLITFRAMEBUFFERNVPROC(glfwGetProcAddress("glMulticastBlitFramebufferNV"));
  glMulticastBufferSubDataNV = PFNGLMULTICASTBUFFERSUBDATANVPROC(glfwGetProcAddress("glMulticastBufferSubDataNV"));
  glMulticastCopyBufferSubDataNV = PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC(glfwGetProcAddress("glMulticastCopyBufferSubDataNV"));
  glMulticastCopyImageSubDataNV = PFNGLMULTICASTCOPYIMAGESUBDATANVPROC(glfwGetProcAddress("glMulticastCopyImageSubDataNV"));
  glMulticastFramebufferSampleLocationsfvNV = PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC(glfwGetProcAddress("glMulticastFramebufferSampleLocationsfvNV"));
  glMulticastGetQueryObjecti64vNV = PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC(glfwGetProcAddress("glMulticastGetQueryObjecti64vNV"));
  glMulticastGetQueryObjectivNV = PFNGLMULTICASTGETQUERYOBJECTIVNVPROC(glfwGetProcAddress("glMulticastGetQueryObjectivNV"));
  glMulticastGetQueryObjectui64vNV = PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC(glfwGetProcAddress("glMulticastGetQueryObjectui64vNV"));
  glMulticastGetQueryObjectuivNV = PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC(glfwGetProcAddress("glMulticastGetQueryObjectuivNV"));
  glMulticastWaitSyncNV = PFNGLMULTICASTWAITSYNCNVPROC(glfwGetProcAddress("glMulticastWaitSyncNV"));
  glMultiDrawArrays = PFNGLMULTIDRAWARRAYSPROC(glfwGetProcAddress("glMultiDrawArrays"));
  glMultiDrawArraysEXT = PFNGLMULTIDRAWARRAYSEXTPROC(glfwGetProcAddress("glMultiDrawArraysEXT"));
  glMultiDrawArraysIndirect = PFNGLMULTIDRAWARRAYSINDIRECTPROC(glfwGetProcAddress("glMultiDrawArraysIndirect"));
  glMultiDrawArraysIndirectAMD = PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC(glfwGetProcAddress("glMultiDrawArraysIndirectAMD"));
  glMultiDrawArraysIndirectBindlessCountNV = PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC(glfwGetProcAddress("glMultiDrawArraysIndirectBindlessCountNV"));
  glMultiDrawArraysIndirectBindlessNV = PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC(glfwGetProcAddress("glMultiDrawArraysIndirectBindlessNV"));
  glMultiDrawArraysIndirectCountARB = PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC(glfwGetProcAddress("glMultiDrawArraysIndirectCountARB"));
  glMultiDrawElementArrayAPPLE = PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC(glfwGetProcAddress("glMultiDrawElementArrayAPPLE"));
  glMultiDrawElements = PFNGLMULTIDRAWELEMENTSPROC(glfwGetProcAddress("glMultiDrawElements"));
  glMultiDrawElementsBaseVertex = PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC(glfwGetProcAddress("glMultiDrawElementsBaseVertex"));
  glMultiDrawElementsEXT = PFNGLMULTIDRAWELEMENTSEXTPROC(glfwGetProcAddress("glMultiDrawElementsEXT"));
  glMultiDrawElementsIndirect = PFNGLMULTIDRAWELEMENTSINDIRECTPROC(glfwGetProcAddress("glMultiDrawElementsIndirect"));
  glMultiDrawElementsIndirectAMD = PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC(glfwGetProcAddress("glMultiDrawElementsIndirectAMD"));
  glMultiDrawElementsIndirectBindlessCountNV = PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC(glfwGetProcAddress("glMultiDrawElementsIndirectBindlessCountNV"));
  glMultiDrawElementsIndirectBindlessNV = PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC(glfwGetProcAddress("glMultiDrawElementsIndirectBindlessNV"));
  glMultiDrawElementsIndirectCountARB = PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC(glfwGetProcAddress("glMultiDrawElementsIndirectCountARB"));
  glMultiDrawRangeElementArrayAPPLE = PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC(glfwGetProcAddress("glMultiDrawRangeElementArrayAPPLE"));
  glMultiModeDrawArraysIBM = PFNGLMULTIMODEDRAWARRAYSIBMPROC(glfwGetProcAddress("glMultiModeDrawArraysIBM"));
  glMultiModeDrawElementsIBM = PFNGLMULTIMODEDRAWELEMENTSIBMPROC(glfwGetProcAddress("glMultiModeDrawElementsIBM"));
  glMultiTexBufferEXT = PFNGLMULTITEXBUFFEREXTPROC(glfwGetProcAddress("glMultiTexBufferEXT"));
  glMultiTexCoord1bOES = PFNGLMULTITEXCOORD1BOESPROC(glfwGetProcAddress("glMultiTexCoord1bOES"));
  glMultiTexCoord1bvOES = PFNGLMULTITEXCOORD1BVOESPROC(glfwGetProcAddress("glMultiTexCoord1bvOES"));
  glMultiTexCoord1d = PFNGLMULTITEXCOORD1DPROC(glfwGetProcAddress("glMultiTexCoord1d"));
  glMultiTexCoord1dARB = PFNGLMULTITEXCOORD1DARBPROC(glfwGetProcAddress("glMultiTexCoord1dARB"));
  glMultiTexCoord1dv = PFNGLMULTITEXCOORD1DVPROC(glfwGetProcAddress("glMultiTexCoord1dv"));
  glMultiTexCoord1dvARB = PFNGLMULTITEXCOORD1DVARBPROC(glfwGetProcAddress("glMultiTexCoord1dvARB"));
  glMultiTexCoord1f = PFNGLMULTITEXCOORD1FPROC(glfwGetProcAddress("glMultiTexCoord1f"));
  glMultiTexCoord1fARB = PFNGLMULTITEXCOORD1FARBPROC(glfwGetProcAddress("glMultiTexCoord1fARB"));
  glMultiTexCoord1fv = PFNGLMULTITEXCOORD1FVPROC(glfwGetProcAddress("glMultiTexCoord1fv"));
  glMultiTexCoord1fvARB = PFNGLMULTITEXCOORD1FVARBPROC(glfwGetProcAddress("glMultiTexCoord1fvARB"));
  glMultiTexCoord1hNV = PFNGLMULTITEXCOORD1HNVPROC(glfwGetProcAddress("glMultiTexCoord1hNV"));
  glMultiTexCoord1hvNV = PFNGLMULTITEXCOORD1HVNVPROC(glfwGetProcAddress("glMultiTexCoord1hvNV"));
  glMultiTexCoord1i = PFNGLMULTITEXCOORD1IPROC(glfwGetProcAddress("glMultiTexCoord1i"));
  glMultiTexCoord1iARB = PFNGLMULTITEXCOORD1IARBPROC(glfwGetProcAddress("glMultiTexCoord1iARB"));
  glMultiTexCoord1iv = PFNGLMULTITEXCOORD1IVPROC(glfwGetProcAddress("glMultiTexCoord1iv"));
  glMultiTexCoord1ivARB = PFNGLMULTITEXCOORD1IVARBPROC(glfwGetProcAddress("glMultiTexCoord1ivARB"));
  glMultiTexCoord1s = PFNGLMULTITEXCOORD1SPROC(glfwGetProcAddress("glMultiTexCoord1s"));
  glMultiTexCoord1sARB = PFNGLMULTITEXCOORD1SARBPROC(glfwGetProcAddress("glMultiTexCoord1sARB"));
  glMultiTexCoord1sv = PFNGLMULTITEXCOORD1SVPROC(glfwGetProcAddress("glMultiTexCoord1sv"));
  glMultiTexCoord1svARB = PFNGLMULTITEXCOORD1SVARBPROC(glfwGetProcAddress("glMultiTexCoord1svARB"));
  glMultiTexCoord1xOES = PFNGLMULTITEXCOORD1XOESPROC(glfwGetProcAddress("glMultiTexCoord1xOES"));
  glMultiTexCoord1xvOES = PFNGLMULTITEXCOORD1XVOESPROC(glfwGetProcAddress("glMultiTexCoord1xvOES"));
  glMultiTexCoord2bOES = PFNGLMULTITEXCOORD2BOESPROC(glfwGetProcAddress("glMultiTexCoord2bOES"));
  glMultiTexCoord2bvOES = PFNGLMULTITEXCOORD2BVOESPROC(glfwGetProcAddress("glMultiTexCoord2bvOES"));
  glMultiTexCoord2d = PFNGLMULTITEXCOORD2DPROC(glfwGetProcAddress("glMultiTexCoord2d"));
  glMultiTexCoord2dARB = PFNGLMULTITEXCOORD2DARBPROC(glfwGetProcAddress("glMultiTexCoord2dARB"));
  glMultiTexCoord2dv = PFNGLMULTITEXCOORD2DVPROC(glfwGetProcAddress("glMultiTexCoord2dv"));
  glMultiTexCoord2dvARB = PFNGLMULTITEXCOORD2DVARBPROC(glfwGetProcAddress("glMultiTexCoord2dvARB"));
  glMultiTexCoord2f = PFNGLMULTITEXCOORD2FPROC(glfwGetProcAddress("glMultiTexCoord2f"));
  glMultiTexCoord2fARB = PFNGLMULTITEXCOORD2FARBPROC(glfwGetProcAddress("glMultiTexCoord2fARB"));
  glMultiTexCoord2fv = PFNGLMULTITEXCOORD2FVPROC(glfwGetProcAddress("glMultiTexCoord2fv"));
  glMultiTexCoord2fvARB = PFNGLMULTITEXCOORD2FVARBPROC(glfwGetProcAddress("glMultiTexCoord2fvARB"));
  glMultiTexCoord2hNV = PFNGLMULTITEXCOORD2HNVPROC(glfwGetProcAddress("glMultiTexCoord2hNV"));
  glMultiTexCoord2hvNV = PFNGLMULTITEXCOORD2HVNVPROC(glfwGetProcAddress("glMultiTexCoord2hvNV"));
  glMultiTexCoord2i = PFNGLMULTITEXCOORD2IPROC(glfwGetProcAddress("glMultiTexCoord2i"));
  glMultiTexCoord2iARB = PFNGLMULTITEXCOORD2IARBPROC(glfwGetProcAddress("glMultiTexCoord2iARB"));
  glMultiTexCoord2iv = PFNGLMULTITEXCOORD2IVPROC(glfwGetProcAddress("glMultiTexCoord2iv"));
  glMultiTexCoord2ivARB = PFNGLMULTITEXCOORD2IVARBPROC(glfwGetProcAddress("glMultiTexCoord2ivARB"));
  glMultiTexCoord2s = PFNGLMULTITEXCOORD2SPROC(glfwGetProcAddress("glMultiTexCoord2s"));
  glMultiTexCoord2sARB = PFNGLMULTITEXCOORD2SARBPROC(glfwGetProcAddress("glMultiTexCoord2sARB"));
  glMultiTexCoord2sv = PFNGLMULTITEXCOORD2SVPROC(glfwGetProcAddress("glMultiTexCoord2sv"));
  glMultiTexCoord2svARB = PFNGLMULTITEXCOORD2SVARBPROC(glfwGetProcAddress("glMultiTexCoord2svARB"));
  glMultiTexCoord2xOES = PFNGLMULTITEXCOORD2XOESPROC(glfwGetProcAddress("glMultiTexCoord2xOES"));
  glMultiTexCoord2xvOES = PFNGLMULTITEXCOORD2XVOESPROC(glfwGetProcAddress("glMultiTexCoord2xvOES"));
  glMultiTexCoord3bOES = PFNGLMULTITEXCOORD3BOESPROC(glfwGetProcAddress("glMultiTexCoord3bOES"));
  glMultiTexCoord3bvOES = PFNGLMULTITEXCOORD3BVOESPROC(glfwGetProcAddress("glMultiTexCoord3bvOES"));
  glMultiTexCoord3d = PFNGLMULTITEXCOORD3DPROC(glfwGetProcAddress("glMultiTexCoord3d"));
  glMultiTexCoord3dARB = PFNGLMULTITEXCOORD3DARBPROC(glfwGetProcAddress("glMultiTexCoord3dARB"));
  glMultiTexCoord3dv = PFNGLMULTITEXCOORD3DVPROC(glfwGetProcAddress("glMultiTexCoord3dv"));
  glMultiTexCoord3dvARB = PFNGLMULTITEXCOORD3DVARBPROC(glfwGetProcAddress("glMultiTexCoord3dvARB"));
  glMultiTexCoord3f = PFNGLMULTITEXCOORD3FPROC(glfwGetProcAddress("glMultiTexCoord3f"));
  glMultiTexCoord3fARB = PFNGLMULTITEXCOORD3FARBPROC(glfwGetProcAddress("glMultiTexCoord3fARB"));
  glMultiTexCoord3fv = PFNGLMULTITEXCOORD3FVPROC(glfwGetProcAddress("glMultiTexCoord3fv"));
  glMultiTexCoord3fvARB = PFNGLMULTITEXCOORD3FVARBPROC(glfwGetProcAddress("glMultiTexCoord3fvARB"));
  glMultiTexCoord3hNV = PFNGLMULTITEXCOORD3HNVPROC(glfwGetProcAddress("glMultiTexCoord3hNV"));
  glMultiTexCoord3hvNV = PFNGLMULTITEXCOORD3HVNVPROC(glfwGetProcAddress("glMultiTexCoord3hvNV"));
  glMultiTexCoord3i = PFNGLMULTITEXCOORD3IPROC(glfwGetProcAddress("glMultiTexCoord3i"));
  glMultiTexCoord3iARB = PFNGLMULTITEXCOORD3IARBPROC(glfwGetProcAddress("glMultiTexCoord3iARB"));
  glMultiTexCoord3iv = PFNGLMULTITEXCOORD3IVPROC(glfwGetProcAddress("glMultiTexCoord3iv"));
  glMultiTexCoord3ivARB = PFNGLMULTITEXCOORD3IVARBPROC(glfwGetProcAddress("glMultiTexCoord3ivARB"));
  glMultiTexCoord3s = PFNGLMULTITEXCOORD3SPROC(glfwGetProcAddress("glMultiTexCoord3s"));
  glMultiTexCoord3sARB = PFNGLMULTITEXCOORD3SARBPROC(glfwGetProcAddress("glMultiTexCoord3sARB"));
  glMultiTexCoord3sv = PFNGLMULTITEXCOORD3SVPROC(glfwGetProcAddress("glMultiTexCoord3sv"));
  glMultiTexCoord3svARB = PFNGLMULTITEXCOORD3SVARBPROC(glfwGetProcAddress("glMultiTexCoord3svARB"));
  glMultiTexCoord3xOES = PFNGLMULTITEXCOORD3XOESPROC(glfwGetProcAddress("glMultiTexCoord3xOES"));
  glMultiTexCoord3xvOES = PFNGLMULTITEXCOORD3XVOESPROC(glfwGetProcAddress("glMultiTexCoord3xvOES"));
  glMultiTexCoord4bOES = PFNGLMULTITEXCOORD4BOESPROC(glfwGetProcAddress("glMultiTexCoord4bOES"));
  glMultiTexCoord4bvOES = PFNGLMULTITEXCOORD4BVOESPROC(glfwGetProcAddress("glMultiTexCoord4bvOES"));
  glMultiTexCoord4d = PFNGLMULTITEXCOORD4DPROC(glfwGetProcAddress("glMultiTexCoord4d"));
  glMultiTexCoord4dARB = PFNGLMULTITEXCOORD4DARBPROC(glfwGetProcAddress("glMultiTexCoord4dARB"));
  glMultiTexCoord4dv = PFNGLMULTITEXCOORD4DVPROC(glfwGetProcAddress("glMultiTexCoord4dv"));
  glMultiTexCoord4dvARB = PFNGLMULTITEXCOORD4DVARBPROC(glfwGetProcAddress("glMultiTexCoord4dvARB"));
  glMultiTexCoord4f = PFNGLMULTITEXCOORD4FPROC(glfwGetProcAddress("glMultiTexCoord4f"));
  glMultiTexCoord4fARB = PFNGLMULTITEXCOORD4FARBPROC(glfwGetProcAddress("glMultiTexCoord4fARB"));
  glMultiTexCoord4fv = PFNGLMULTITEXCOORD4FVPROC(glfwGetProcAddress("glMultiTexCoord4fv"));
  glMultiTexCoord4fvARB = PFNGLMULTITEXCOORD4FVARBPROC(glfwGetProcAddress("glMultiTexCoord4fvARB"));
  glMultiTexCoord4hNV = PFNGLMULTITEXCOORD4HNVPROC(glfwGetProcAddress("glMultiTexCoord4hNV"));
  glMultiTexCoord4hvNV = PFNGLMULTITEXCOORD4HVNVPROC(glfwGetProcAddress("glMultiTexCoord4hvNV"));
  glMultiTexCoord4i = PFNGLMULTITEXCOORD4IPROC(glfwGetProcAddress("glMultiTexCoord4i"));
  glMultiTexCoord4iARB = PFNGLMULTITEXCOORD4IARBPROC(glfwGetProcAddress("glMultiTexCoord4iARB"));
  glMultiTexCoord4iv = PFNGLMULTITEXCOORD4IVPROC(glfwGetProcAddress("glMultiTexCoord4iv"));
  glMultiTexCoord4ivARB = PFNGLMULTITEXCOORD4IVARBPROC(glfwGetProcAddress("glMultiTexCoord4ivARB"));
  glMultiTexCoord4s = PFNGLMULTITEXCOORD4SPROC(glfwGetProcAddress("glMultiTexCoord4s"));
  glMultiTexCoord4sARB = PFNGLMULTITEXCOORD4SARBPROC(glfwGetProcAddress("glMultiTexCoord4sARB"));
  glMultiTexCoord4sv = PFNGLMULTITEXCOORD4SVPROC(glfwGetProcAddress("glMultiTexCoord4sv"));
  glMultiTexCoord4svARB = PFNGLMULTITEXCOORD4SVARBPROC(glfwGetProcAddress("glMultiTexCoord4svARB"));
  glMultiTexCoord4xOES = PFNGLMULTITEXCOORD4XOESPROC(glfwGetProcAddress("glMultiTexCoord4xOES"));
  glMultiTexCoord4xvOES = PFNGLMULTITEXCOORD4XVOESPROC(glfwGetProcAddress("glMultiTexCoord4xvOES"));
  glMultiTexCoordP1ui = PFNGLMULTITEXCOORDP1UIPROC(glfwGetProcAddress("glMultiTexCoordP1ui"));
  glMultiTexCoordP1uiv = PFNGLMULTITEXCOORDP1UIVPROC(glfwGetProcAddress("glMultiTexCoordP1uiv"));
  glMultiTexCoordP2ui = PFNGLMULTITEXCOORDP2UIPROC(glfwGetProcAddress("glMultiTexCoordP2ui"));
  glMultiTexCoordP2uiv = PFNGLMULTITEXCOORDP2UIVPROC(glfwGetProcAddress("glMultiTexCoordP2uiv"));
  glMultiTexCoordP3ui = PFNGLMULTITEXCOORDP3UIPROC(glfwGetProcAddress("glMultiTexCoordP3ui"));
  glMultiTexCoordP3uiv = PFNGLMULTITEXCOORDP3UIVPROC(glfwGetProcAddress("glMultiTexCoordP3uiv"));
  glMultiTexCoordP4ui = PFNGLMULTITEXCOORDP4UIPROC(glfwGetProcAddress("glMultiTexCoordP4ui"));
  glMultiTexCoordP4uiv = PFNGLMULTITEXCOORDP4UIVPROC(glfwGetProcAddress("glMultiTexCoordP4uiv"));
  glMultiTexCoordPointerEXT = PFNGLMULTITEXCOORDPOINTEREXTPROC(glfwGetProcAddress("glMultiTexCoordPointerEXT"));
  glMultiTexEnvfEXT = PFNGLMULTITEXENVFEXTPROC(glfwGetProcAddress("glMultiTexEnvfEXT"));
  glMultiTexEnvfvEXT = PFNGLMULTITEXENVFVEXTPROC(glfwGetProcAddress("glMultiTexEnvfvEXT"));
  glMultiTexEnviEXT = PFNGLMULTITEXENVIEXTPROC(glfwGetProcAddress("glMultiTexEnviEXT"));
  glMultiTexEnvivEXT = PFNGLMULTITEXENVIVEXTPROC(glfwGetProcAddress("glMultiTexEnvivEXT"));
  glMultiTexGendEXT = PFNGLMULTITEXGENDEXTPROC(glfwGetProcAddress("glMultiTexGendEXT"));
  glMultiTexGendvEXT = PFNGLMULTITEXGENDVEXTPROC(glfwGetProcAddress("glMultiTexGendvEXT"));
  glMultiTexGenfEXT = PFNGLMULTITEXGENFEXTPROC(glfwGetProcAddress("glMultiTexGenfEXT"));
  glMultiTexGenfvEXT = PFNGLMULTITEXGENFVEXTPROC(glfwGetProcAddress("glMultiTexGenfvEXT"));
  glMultiTexGeniEXT = PFNGLMULTITEXGENIEXTPROC(glfwGetProcAddress("glMultiTexGeniEXT"));
  glMultiTexGenivEXT = PFNGLMULTITEXGENIVEXTPROC(glfwGetProcAddress("glMultiTexGenivEXT"));
  glMultiTexImage1DEXT = PFNGLMULTITEXIMAGE1DEXTPROC(glfwGetProcAddress("glMultiTexImage1DEXT"));
  glMultiTexImage2DEXT = PFNGLMULTITEXIMAGE2DEXTPROC(glfwGetProcAddress("glMultiTexImage2DEXT"));
  glMultiTexImage3DEXT = PFNGLMULTITEXIMAGE3DEXTPROC(glfwGetProcAddress("glMultiTexImage3DEXT"));
  glMultiTexParameterfEXT = PFNGLMULTITEXPARAMETERFEXTPROC(glfwGetProcAddress("glMultiTexParameterfEXT"));
  glMultiTexParameterfvEXT = PFNGLMULTITEXPARAMETERFVEXTPROC(glfwGetProcAddress("glMultiTexParameterfvEXT"));
  glMultiTexParameteriEXT = PFNGLMULTITEXPARAMETERIEXTPROC(glfwGetProcAddress("glMultiTexParameteriEXT"));
  glMultiTexParameterIivEXT = PFNGLMULTITEXPARAMETERIIVEXTPROC(glfwGetProcAddress("glMultiTexParameterIivEXT"));
  glMultiTexParameterIuivEXT = PFNGLMULTITEXPARAMETERIUIVEXTPROC(glfwGetProcAddress("glMultiTexParameterIuivEXT"));
  glMultiTexParameterivEXT = PFNGLMULTITEXPARAMETERIVEXTPROC(glfwGetProcAddress("glMultiTexParameterivEXT"));
  glMultiTexRenderbufferEXT = PFNGLMULTITEXRENDERBUFFEREXTPROC(glfwGetProcAddress("glMultiTexRenderbufferEXT"));
  glMultiTexSubImage1DEXT = PFNGLMULTITEXSUBIMAGE1DEXTPROC(glfwGetProcAddress("glMultiTexSubImage1DEXT"));
  glMultiTexSubImage2DEXT = PFNGLMULTITEXSUBIMAGE2DEXTPROC(glfwGetProcAddress("glMultiTexSubImage2DEXT"));
  glMultiTexSubImage3DEXT = PFNGLMULTITEXSUBIMAGE3DEXTPROC(glfwGetProcAddress("glMultiTexSubImage3DEXT"));
  glMultMatrixxOES = PFNGLMULTMATRIXXOESPROC(glfwGetProcAddress("glMultMatrixxOES"));
  glMultTransposeMatrixd = PFNGLMULTTRANSPOSEMATRIXDPROC(glfwGetProcAddress("glMultTransposeMatrixd"));
  glMultTransposeMatrixdARB = PFNGLMULTTRANSPOSEMATRIXDARBPROC(glfwGetProcAddress("glMultTransposeMatrixdARB"));
  glMultTransposeMatrixf = PFNGLMULTTRANSPOSEMATRIXFPROC(glfwGetProcAddress("glMultTransposeMatrixf"));
  glMultTransposeMatrixfARB = PFNGLMULTTRANSPOSEMATRIXFARBPROC(glfwGetProcAddress("glMultTransposeMatrixfARB"));
  glMultTransposeMatrixxOES = PFNGLMULTTRANSPOSEMATRIXXOESPROC(glfwGetProcAddress("glMultTransposeMatrixxOES"));
  glNamedBufferData = PFNGLNAMEDBUFFERDATAPROC(glfwGetProcAddress("glNamedBufferData"));
  glNamedBufferDataEXT = PFNGLNAMEDBUFFERDATAEXTPROC(glfwGetProcAddress("glNamedBufferDataEXT"));
  glNamedBufferPageCommitmentARB = PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC(glfwGetProcAddress("glNamedBufferPageCommitmentARB"));
  glNamedBufferPageCommitmentEXT = PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC(glfwGetProcAddress("glNamedBufferPageCommitmentEXT"));
  glNamedBufferStorage = PFNGLNAMEDBUFFERSTORAGEPROC(glfwGetProcAddress("glNamedBufferStorage"));
  glNamedBufferStorageEXT = PFNGLNAMEDBUFFERSTORAGEEXTPROC(glfwGetProcAddress("glNamedBufferStorageEXT"));
  glNamedBufferSubData = PFNGLNAMEDBUFFERSUBDATAPROC(glfwGetProcAddress("glNamedBufferSubData"));
  glNamedBufferSubDataEXT = PFNGLNAMEDBUFFERSUBDATAEXTPROC(glfwGetProcAddress("glNamedBufferSubDataEXT"));
  glNamedCopyBufferSubDataEXT = PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC(glfwGetProcAddress("glNamedCopyBufferSubDataEXT"));
  glNamedFramebufferDrawBuffer = PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC(glfwGetProcAddress("glNamedFramebufferDrawBuffer"));
  glNamedFramebufferDrawBuffers = PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC(glfwGetProcAddress("glNamedFramebufferDrawBuffers"));
  glNamedFramebufferParameteri = PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC(glfwGetProcAddress("glNamedFramebufferParameteri"));
  glNamedFramebufferParameteriEXT = PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC(glfwGetProcAddress("glNamedFramebufferParameteriEXT"));
  glNamedFramebufferReadBuffer = PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC(glfwGetProcAddress("glNamedFramebufferReadBuffer"));
  glNamedFramebufferRenderbuffer = PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC(glfwGetProcAddress("glNamedFramebufferRenderbuffer"));
  glNamedFramebufferRenderbufferEXT = PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC(glfwGetProcAddress("glNamedFramebufferRenderbufferEXT"));
  glNamedFramebufferSampleLocationsfvARB = PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC(glfwGetProcAddress("glNamedFramebufferSampleLocationsfvARB"));
  glNamedFramebufferSampleLocationsfvNV = PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC(glfwGetProcAddress("glNamedFramebufferSampleLocationsfvNV"));
  glNamedFramebufferSamplePositionsfvAMD = PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC(glfwGetProcAddress("glNamedFramebufferSamplePositionsfvAMD"));
  glNamedFramebufferTexture = PFNGLNAMEDFRAMEBUFFERTEXTUREPROC(glfwGetProcAddress("glNamedFramebufferTexture"));
  glNamedFramebufferTexture1DEXT = PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC(glfwGetProcAddress("glNamedFramebufferTexture1DEXT"));
  glNamedFramebufferTexture2DEXT = PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC(glfwGetProcAddress("glNamedFramebufferTexture2DEXT"));
  glNamedFramebufferTexture3DEXT = PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC(glfwGetProcAddress("glNamedFramebufferTexture3DEXT"));
  glNamedFramebufferTextureEXT = PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC(glfwGetProcAddress("glNamedFramebufferTextureEXT"));
  glNamedFramebufferTextureFaceEXT = PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC(glfwGetProcAddress("glNamedFramebufferTextureFaceEXT"));
  glNamedFramebufferTextureLayer = PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC(glfwGetProcAddress("glNamedFramebufferTextureLayer"));
  glNamedFramebufferTextureLayerEXT = PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC(glfwGetProcAddress("glNamedFramebufferTextureLayerEXT"));
  glNamedProgramLocalParameter4dEXT = PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameter4dEXT"));
  glNamedProgramLocalParameter4dvEXT = PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameter4dvEXT"));
  glNamedProgramLocalParameter4fEXT = PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameter4fEXT"));
  glNamedProgramLocalParameter4fvEXT = PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameter4fvEXT"));
  glNamedProgramLocalParameterI4iEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameterI4iEXT"));
  glNamedProgramLocalParameterI4ivEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameterI4ivEXT"));
  glNamedProgramLocalParameterI4uiEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameterI4uiEXT"));
  glNamedProgramLocalParameterI4uivEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameterI4uivEXT"));
  glNamedProgramLocalParameters4fvEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParameters4fvEXT"));
  glNamedProgramLocalParametersI4ivEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParametersI4ivEXT"));
  glNamedProgramLocalParametersI4uivEXT = PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC(glfwGetProcAddress("glNamedProgramLocalParametersI4uivEXT"));
  glNamedProgramStringEXT = PFNGLNAMEDPROGRAMSTRINGEXTPROC(glfwGetProcAddress("glNamedProgramStringEXT"));
  glNamedRenderbufferStorage = PFNGLNAMEDRENDERBUFFERSTORAGEPROC(glfwGetProcAddress("glNamedRenderbufferStorage"));
  glNamedRenderbufferStorageEXT = PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC(glfwGetProcAddress("glNamedRenderbufferStorageEXT"));
  glNamedRenderbufferStorageMultisample = PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC(glfwGetProcAddress("glNamedRenderbufferStorageMultisample"));
  glNamedRenderbufferStorageMultisampleCoverageEXT = PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC(glfwGetProcAddress("glNamedRenderbufferStorageMultisampleCoverageEXT"));
  glNamedRenderbufferStorageMultisampleEXT = PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC(glfwGetProcAddress("glNamedRenderbufferStorageMultisampleEXT"));
  glNamedStringARB = PFNGLNAMEDSTRINGARBPROC(glfwGetProcAddress("glNamedStringARB"));
  glNewObjectBufferATI = PFNGLNEWOBJECTBUFFERATIPROC(glfwGetProcAddress("glNewObjectBufferATI"));
  glNormal3fVertex3fSUN = PFNGLNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glNormal3fVertex3fSUN"));
  glNormal3fVertex3fvSUN = PFNGLNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glNormal3fVertex3fvSUN"));
  glNormal3hNV = PFNGLNORMAL3HNVPROC(glfwGetProcAddress("glNormal3hNV"));
  glNormal3hvNV = PFNGLNORMAL3HVNVPROC(glfwGetProcAddress("glNormal3hvNV"));
  glNormal3xOES = PFNGLNORMAL3XOESPROC(glfwGetProcAddress("glNormal3xOES"));
  glNormal3xvOES = PFNGLNORMAL3XVOESPROC(glfwGetProcAddress("glNormal3xvOES"));
  glNormalFormatNV = PFNGLNORMALFORMATNVPROC(glfwGetProcAddress("glNormalFormatNV"));
  glNormalP3ui = PFNGLNORMALP3UIPROC(glfwGetProcAddress("glNormalP3ui"));
  glNormalP3uiv = PFNGLNORMALP3UIVPROC(glfwGetProcAddress("glNormalP3uiv"));
  glNormalPointerEXT = PFNGLNORMALPOINTEREXTPROC(glfwGetProcAddress("glNormalPointerEXT"));
  glNormalPointerListIBM = PFNGLNORMALPOINTERLISTIBMPROC(glfwGetProcAddress("glNormalPointerListIBM"));
  glNormalPointervINTEL = PFNGLNORMALPOINTERVINTELPROC(glfwGetProcAddress("glNormalPointervINTEL"));
  glNormalStream3bATI = PFNGLNORMALSTREAM3BATIPROC(glfwGetProcAddress("glNormalStream3bATI"));
  glNormalStream3bvATI = PFNGLNORMALSTREAM3BVATIPROC(glfwGetProcAddress("glNormalStream3bvATI"));
  glNormalStream3dATI = PFNGLNORMALSTREAM3DATIPROC(glfwGetProcAddress("glNormalStream3dATI"));
  glNormalStream3dvATI = PFNGLNORMALSTREAM3DVATIPROC(glfwGetProcAddress("glNormalStream3dvATI"));
  glNormalStream3fATI = PFNGLNORMALSTREAM3FATIPROC(glfwGetProcAddress("glNormalStream3fATI"));
  glNormalStream3fvATI = PFNGLNORMALSTREAM3FVATIPROC(glfwGetProcAddress("glNormalStream3fvATI"));
  glNormalStream3iATI = PFNGLNORMALSTREAM3IATIPROC(glfwGetProcAddress("glNormalStream3iATI"));
  glNormalStream3ivATI = PFNGLNORMALSTREAM3IVATIPROC(glfwGetProcAddress("glNormalStream3ivATI"));
  glNormalStream3sATI = PFNGLNORMALSTREAM3SATIPROC(glfwGetProcAddress("glNormalStream3sATI"));
  glNormalStream3svATI = PFNGLNORMALSTREAM3SVATIPROC(glfwGetProcAddress("glNormalStream3svATI"));
  glObjectLabel = PFNGLOBJECTLABELPROC(glfwGetProcAddress("glObjectLabel"));
  glObjectPtrLabel = PFNGLOBJECTPTRLABELPROC(glfwGetProcAddress("glObjectPtrLabel"));
  glObjectPurgeableAPPLE = PFNGLOBJECTPURGEABLEAPPLEPROC(glfwGetProcAddress("glObjectPurgeableAPPLE"));
  glObjectUnpurgeableAPPLE = PFNGLOBJECTUNPURGEABLEAPPLEPROC(glfwGetProcAddress("glObjectUnpurgeableAPPLE"));
  glOrthofOES = PFNGLORTHOFOESPROC(glfwGetProcAddress("glOrthofOES"));
  glOrthoxOES = PFNGLORTHOXOESPROC(glfwGetProcAddress("glOrthoxOES"));
  glPassTexCoordATI = PFNGLPASSTEXCOORDATIPROC(glfwGetProcAddress("glPassTexCoordATI"));
  glPassThroughxOES = PFNGLPASSTHROUGHXOESPROC(glfwGetProcAddress("glPassThroughxOES"));
  glPatchParameterfv = PFNGLPATCHPARAMETERFVPROC(glfwGetProcAddress("glPatchParameterfv"));
  glPatchParameteri = PFNGLPATCHPARAMETERIPROC(glfwGetProcAddress("glPatchParameteri"));
  glPathColorGenNV = PFNGLPATHCOLORGENNVPROC(glfwGetProcAddress("glPathColorGenNV"));
  glPathCommandsNV = PFNGLPATHCOMMANDSNVPROC(glfwGetProcAddress("glPathCommandsNV"));
  glPathCoordsNV = PFNGLPATHCOORDSNVPROC(glfwGetProcAddress("glPathCoordsNV"));
  glPathCoverDepthFuncNV = PFNGLPATHCOVERDEPTHFUNCNVPROC(glfwGetProcAddress("glPathCoverDepthFuncNV"));
  glPathDashArrayNV = PFNGLPATHDASHARRAYNVPROC(glfwGetProcAddress("glPathDashArrayNV"));
  glPathFogGenNV = PFNGLPATHFOGGENNVPROC(glfwGetProcAddress("glPathFogGenNV"));
  glPathGlyphIndexArrayNV = PFNGLPATHGLYPHINDEXARRAYNVPROC(glfwGetProcAddress("glPathGlyphIndexArrayNV"));
  glPathGlyphIndexRangeNV = PFNGLPATHGLYPHINDEXRANGENVPROC(glfwGetProcAddress("glPathGlyphIndexRangeNV"));
  glPathGlyphRangeNV = PFNGLPATHGLYPHRANGENVPROC(glfwGetProcAddress("glPathGlyphRangeNV"));
  glPathGlyphsNV = PFNGLPATHGLYPHSNVPROC(glfwGetProcAddress("glPathGlyphsNV"));
  glPathMemoryGlyphIndexArrayNV = PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC(glfwGetProcAddress("glPathMemoryGlyphIndexArrayNV"));
  glPathParameterfNV = PFNGLPATHPARAMETERFNVPROC(glfwGetProcAddress("glPathParameterfNV"));
  glPathParameterfvNV = PFNGLPATHPARAMETERFVNVPROC(glfwGetProcAddress("glPathParameterfvNV"));
  glPathParameteriNV = PFNGLPATHPARAMETERINVPROC(glfwGetProcAddress("glPathParameteriNV"));
  glPathParameterivNV = PFNGLPATHPARAMETERIVNVPROC(glfwGetProcAddress("glPathParameterivNV"));
  glPathStencilDepthOffsetNV = PFNGLPATHSTENCILDEPTHOFFSETNVPROC(glfwGetProcAddress("glPathStencilDepthOffsetNV"));
  glPathStencilFuncNV = PFNGLPATHSTENCILFUNCNVPROC(glfwGetProcAddress("glPathStencilFuncNV"));
  glPathStringNV = PFNGLPATHSTRINGNVPROC(glfwGetProcAddress("glPathStringNV"));
  glPathSubCommandsNV = PFNGLPATHSUBCOMMANDSNVPROC(glfwGetProcAddress("glPathSubCommandsNV"));
  glPathSubCoordsNV = PFNGLPATHSUBCOORDSNVPROC(glfwGetProcAddress("glPathSubCoordsNV"));
  glPathTexGenNV = PFNGLPATHTEXGENNVPROC(glfwGetProcAddress("glPathTexGenNV"));
  glPauseTransformFeedback = PFNGLPAUSETRANSFORMFEEDBACKPROC(glfwGetProcAddress("glPauseTransformFeedback"));
  glPauseTransformFeedbackNV = PFNGLPAUSETRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glPauseTransformFeedbackNV"));
  glPixelDataRangeNV = PFNGLPIXELDATARANGENVPROC(glfwGetProcAddress("glPixelDataRangeNV"));
  glPixelMapx = PFNGLPIXELMAPXPROC(glfwGetProcAddress("glPixelMapx"));
  glPixelStorex = PFNGLPIXELSTOREXPROC(glfwGetProcAddress("glPixelStorex"));
  glPixelTexGenParameterfSGIS = PFNGLPIXELTEXGENPARAMETERFSGISPROC(glfwGetProcAddress("glPixelTexGenParameterfSGIS"));
  glPixelTexGenParameterfvSGIS = PFNGLPIXELTEXGENPARAMETERFVSGISPROC(glfwGetProcAddress("glPixelTexGenParameterfvSGIS"));
  glPixelTexGenParameteriSGIS = PFNGLPIXELTEXGENPARAMETERISGISPROC(glfwGetProcAddress("glPixelTexGenParameteriSGIS"));
  glPixelTexGenParameterivSGIS = PFNGLPIXELTEXGENPARAMETERIVSGISPROC(glfwGetProcAddress("glPixelTexGenParameterivSGIS"));
  glPixelTexGenSGIX = PFNGLPIXELTEXGENSGIXPROC(glfwGetProcAddress("glPixelTexGenSGIX"));
  glPixelTransferxOES = PFNGLPIXELTRANSFERXOESPROC(glfwGetProcAddress("glPixelTransferxOES"));
  glPixelTransformParameterfEXT = PFNGLPIXELTRANSFORMPARAMETERFEXTPROC(glfwGetProcAddress("glPixelTransformParameterfEXT"));
  glPixelTransformParameterfvEXT = PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC(glfwGetProcAddress("glPixelTransformParameterfvEXT"));
  glPixelTransformParameteriEXT = PFNGLPIXELTRANSFORMPARAMETERIEXTPROC(glfwGetProcAddress("glPixelTransformParameteriEXT"));
  glPixelTransformParameterivEXT = PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC(glfwGetProcAddress("glPixelTransformParameterivEXT"));
  glPixelZoomxOES = PFNGLPIXELZOOMXOESPROC(glfwGetProcAddress("glPixelZoomxOES"));
  glPNTrianglesfATI = PFNGLPNTRIANGLESFATIPROC(glfwGetProcAddress("glPNTrianglesfATI"));
  glPNTrianglesiATI = PFNGLPNTRIANGLESIATIPROC(glfwGetProcAddress("glPNTrianglesiATI"));
  glPointAlongPathNV = PFNGLPOINTALONGPATHNVPROC(glfwGetProcAddress("glPointAlongPathNV"));
  glPointParameterf = PFNGLPOINTPARAMETERFPROC(glfwGetProcAddress("glPointParameterf"));
  glPointParameterfARB = PFNGLPOINTPARAMETERFARBPROC(glfwGetProcAddress("glPointParameterfARB"));
  glPointParameterfEXT = PFNGLPOINTPARAMETERFEXTPROC(glfwGetProcAddress("glPointParameterfEXT"));
  glPointParameterfSGIS = PFNGLPOINTPARAMETERFSGISPROC(glfwGetProcAddress("glPointParameterfSGIS"));
  glPointParameterfv = PFNGLPOINTPARAMETERFVPROC(glfwGetProcAddress("glPointParameterfv"));
  glPointParameterfvARB = PFNGLPOINTPARAMETERFVARBPROC(glfwGetProcAddress("glPointParameterfvARB"));
  glPointParameterfvEXT = PFNGLPOINTPARAMETERFVEXTPROC(glfwGetProcAddress("glPointParameterfvEXT"));
  glPointParameterfvSGIS = PFNGLPOINTPARAMETERFVSGISPROC(glfwGetProcAddress("glPointParameterfvSGIS"));
  glPointParameteri = PFNGLPOINTPARAMETERIPROC(glfwGetProcAddress("glPointParameteri"));
  glPointParameteriNV = PFNGLPOINTPARAMETERINVPROC(glfwGetProcAddress("glPointParameteriNV"));
  glPointParameteriv = PFNGLPOINTPARAMETERIVPROC(glfwGetProcAddress("glPointParameteriv"));
  glPointParameterivNV = PFNGLPOINTPARAMETERIVNVPROC(glfwGetProcAddress("glPointParameterivNV"));
  glPointParameterxvOES = PFNGLPOINTPARAMETERXVOESPROC(glfwGetProcAddress("glPointParameterxvOES"));
  glPointSizexOES = PFNGLPOINTSIZEXOESPROC(glfwGetProcAddress("glPointSizexOES"));
  glPollAsyncSGIX = PFNGLPOLLASYNCSGIXPROC(glfwGetProcAddress("glPollAsyncSGIX"));
  glPollInstrumentsSGIX = PFNGLPOLLINSTRUMENTSSGIXPROC(glfwGetProcAddress("glPollInstrumentsSGIX"));
  glPolygonOffsetClampEXT = PFNGLPOLYGONOFFSETCLAMPEXTPROC(glfwGetProcAddress("glPolygonOffsetClampEXT"));
  glPolygonOffsetEXT = PFNGLPOLYGONOFFSETEXTPROC(glfwGetProcAddress("glPolygonOffsetEXT"));
  glPolygonOffsetxOES = PFNGLPOLYGONOFFSETXOESPROC(glfwGetProcAddress("glPolygonOffsetxOES"));
  glPopDebugGroup = PFNGLPOPDEBUGGROUPPROC(glfwGetProcAddress("glPopDebugGroup"));
  glPopGroupMarkerEXT = PFNGLPOPGROUPMARKEREXTPROC(glfwGetProcAddress("glPopGroupMarkerEXT"));
  glPresentFrameDualFillNV = PFNGLPRESENTFRAMEDUALFILLNVPROC(glfwGetProcAddress("glPresentFrameDualFillNV"));
  glPresentFrameKeyedNV = PFNGLPRESENTFRAMEKEYEDNVPROC(glfwGetProcAddress("glPresentFrameKeyedNV"));
  glPrimitiveBoundingBoxARB = PFNGLPRIMITIVEBOUNDINGBOXARBPROC(glfwGetProcAddress("glPrimitiveBoundingBoxARB"));
  glPrimitiveRestartIndex = PFNGLPRIMITIVERESTARTINDEXPROC(glfwGetProcAddress("glPrimitiveRestartIndex"));
  glPrimitiveRestartIndexNV = PFNGLPRIMITIVERESTARTINDEXNVPROC(glfwGetProcAddress("glPrimitiveRestartIndexNV"));
  glPrimitiveRestartNV = PFNGLPRIMITIVERESTARTNVPROC(glfwGetProcAddress("glPrimitiveRestartNV"));
  glPrioritizeTexturesEXT = PFNGLPRIORITIZETEXTURESEXTPROC(glfwGetProcAddress("glPrioritizeTexturesEXT"));
  glPrioritizeTexturesxOES = PFNGLPRIORITIZETEXTURESXOESPROC(glfwGetProcAddress("glPrioritizeTexturesxOES"));
  glProgramBinary = PFNGLPROGRAMBINARYPROC(glfwGetProcAddress("glProgramBinary"));
  glProgramBufferParametersfvNV = PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC(glfwGetProcAddress("glProgramBufferParametersfvNV"));
  glProgramBufferParametersIivNV = PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC(glfwGetProcAddress("glProgramBufferParametersIivNV"));
  glProgramBufferParametersIuivNV = PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC(glfwGetProcAddress("glProgramBufferParametersIuivNV"));
  glProgramEnvParameter4dARB = PFNGLPROGRAMENVPARAMETER4DARBPROC(glfwGetProcAddress("glProgramEnvParameter4dARB"));
  glProgramEnvParameter4dvARB = PFNGLPROGRAMENVPARAMETER4DVARBPROC(glfwGetProcAddress("glProgramEnvParameter4dvARB"));
  glProgramEnvParameter4fARB = PFNGLPROGRAMENVPARAMETER4FARBPROC(glfwGetProcAddress("glProgramEnvParameter4fARB"));
  glProgramEnvParameter4fvARB = PFNGLPROGRAMENVPARAMETER4FVARBPROC(glfwGetProcAddress("glProgramEnvParameter4fvARB"));
  glProgramEnvParameterI4iNV = PFNGLPROGRAMENVPARAMETERI4INVPROC(glfwGetProcAddress("glProgramEnvParameterI4iNV"));
  glProgramEnvParameterI4ivNV = PFNGLPROGRAMENVPARAMETERI4IVNVPROC(glfwGetProcAddress("glProgramEnvParameterI4ivNV"));
  glProgramEnvParameterI4uiNV = PFNGLPROGRAMENVPARAMETERI4UINVPROC(glfwGetProcAddress("glProgramEnvParameterI4uiNV"));
  glProgramEnvParameterI4uivNV = PFNGLPROGRAMENVPARAMETERI4UIVNVPROC(glfwGetProcAddress("glProgramEnvParameterI4uivNV"));
  glProgramEnvParameters4fvEXT = PFNGLPROGRAMENVPARAMETERS4FVEXTPROC(glfwGetProcAddress("glProgramEnvParameters4fvEXT"));
  glProgramEnvParametersI4ivNV = PFNGLPROGRAMENVPARAMETERSI4IVNVPROC(glfwGetProcAddress("glProgramEnvParametersI4ivNV"));
  glProgramEnvParametersI4uivNV = PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC(glfwGetProcAddress("glProgramEnvParametersI4uivNV"));
  glProgramLocalParameter4dARB = PFNGLPROGRAMLOCALPARAMETER4DARBPROC(glfwGetProcAddress("glProgramLocalParameter4dARB"));
  glProgramLocalParameter4dvARB = PFNGLPROGRAMLOCALPARAMETER4DVARBPROC(glfwGetProcAddress("glProgramLocalParameter4dvARB"));
  glProgramLocalParameter4fARB = PFNGLPROGRAMLOCALPARAMETER4FARBPROC(glfwGetProcAddress("glProgramLocalParameter4fARB"));
  glProgramLocalParameter4fvARB = PFNGLPROGRAMLOCALPARAMETER4FVARBPROC(glfwGetProcAddress("glProgramLocalParameter4fvARB"));
  glProgramLocalParameterI4iNV = PFNGLPROGRAMLOCALPARAMETERI4INVPROC(glfwGetProcAddress("glProgramLocalParameterI4iNV"));
  glProgramLocalParameterI4ivNV = PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC(glfwGetProcAddress("glProgramLocalParameterI4ivNV"));
  glProgramLocalParameterI4uiNV = PFNGLPROGRAMLOCALPARAMETERI4UINVPROC(glfwGetProcAddress("glProgramLocalParameterI4uiNV"));
  glProgramLocalParameterI4uivNV = PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC(glfwGetProcAddress("glProgramLocalParameterI4uivNV"));
  glProgramLocalParameters4fvEXT = PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC(glfwGetProcAddress("glProgramLocalParameters4fvEXT"));
  glProgramLocalParametersI4ivNV = PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC(glfwGetProcAddress("glProgramLocalParametersI4ivNV"));
  glProgramLocalParametersI4uivNV = PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC(glfwGetProcAddress("glProgramLocalParametersI4uivNV"));
  glProgramNamedParameter4dNV = PFNGLPROGRAMNAMEDPARAMETER4DNVPROC(glfwGetProcAddress("glProgramNamedParameter4dNV"));
  glProgramNamedParameter4dvNV = PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC(glfwGetProcAddress("glProgramNamedParameter4dvNV"));
  glProgramNamedParameter4fNV = PFNGLPROGRAMNAMEDPARAMETER4FNVPROC(glfwGetProcAddress("glProgramNamedParameter4fNV"));
  glProgramNamedParameter4fvNV = PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC(glfwGetProcAddress("glProgramNamedParameter4fvNV"));
  glProgramParameter4dNV = PFNGLPROGRAMPARAMETER4DNVPROC(glfwGetProcAddress("glProgramParameter4dNV"));
  glProgramParameter4dvNV = PFNGLPROGRAMPARAMETER4DVNVPROC(glfwGetProcAddress("glProgramParameter4dvNV"));
  glProgramParameter4fNV = PFNGLPROGRAMPARAMETER4FNVPROC(glfwGetProcAddress("glProgramParameter4fNV"));
  glProgramParameter4fvNV = PFNGLPROGRAMPARAMETER4FVNVPROC(glfwGetProcAddress("glProgramParameter4fvNV"));
  glProgramParameteri = PFNGLPROGRAMPARAMETERIPROC(glfwGetProcAddress("glProgramParameteri"));
  glProgramParameteriARB = PFNGLPROGRAMPARAMETERIARBPROC(glfwGetProcAddress("glProgramParameteriARB"));
  glProgramParameteriEXT = PFNGLPROGRAMPARAMETERIEXTPROC(glfwGetProcAddress("glProgramParameteriEXT"));
  glProgramParameters4dvNV = PFNGLPROGRAMPARAMETERS4DVNVPROC(glfwGetProcAddress("glProgramParameters4dvNV"));
  glProgramParameters4fvNV = PFNGLPROGRAMPARAMETERS4FVNVPROC(glfwGetProcAddress("glProgramParameters4fvNV"));
  glProgramPathFragmentInputGenNV = PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC(glfwGetProcAddress("glProgramPathFragmentInputGenNV"));
  glProgramStringARB = PFNGLPROGRAMSTRINGARBPROC(glfwGetProcAddress("glProgramStringARB"));
  glProgramSubroutineParametersuivNV = PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC(glfwGetProcAddress("glProgramSubroutineParametersuivNV"));
  glProgramUniform1d = PFNGLPROGRAMUNIFORM1DPROC(glfwGetProcAddress("glProgramUniform1d"));
  glProgramUniform1dEXT = PFNGLPROGRAMUNIFORM1DEXTPROC(glfwGetProcAddress("glProgramUniform1dEXT"));
  glProgramUniform1dv = PFNGLPROGRAMUNIFORM1DVPROC(glfwGetProcAddress("glProgramUniform1dv"));
  glProgramUniform1dvEXT = PFNGLPROGRAMUNIFORM1DVEXTPROC(glfwGetProcAddress("glProgramUniform1dvEXT"));
  glProgramUniform1f = PFNGLPROGRAMUNIFORM1FPROC(glfwGetProcAddress("glProgramUniform1f"));
  glProgramUniform1fEXT = PFNGLPROGRAMUNIFORM1FEXTPROC(glfwGetProcAddress("glProgramUniform1fEXT"));
  glProgramUniform1fv = PFNGLPROGRAMUNIFORM1FVPROC(glfwGetProcAddress("glProgramUniform1fv"));
  glProgramUniform1fvEXT = PFNGLPROGRAMUNIFORM1FVEXTPROC(glfwGetProcAddress("glProgramUniform1fvEXT"));
  glProgramUniform1i = PFNGLPROGRAMUNIFORM1IPROC(glfwGetProcAddress("glProgramUniform1i"));
  glProgramUniform1i64ARB = PFNGLPROGRAMUNIFORM1I64ARBPROC(glfwGetProcAddress("glProgramUniform1i64ARB"));
  glProgramUniform1i64NV = PFNGLPROGRAMUNIFORM1I64NVPROC(glfwGetProcAddress("glProgramUniform1i64NV"));
  glProgramUniform1i64vARB = PFNGLPROGRAMUNIFORM1I64VARBPROC(glfwGetProcAddress("glProgramUniform1i64vARB"));
  glProgramUniform1i64vNV = PFNGLPROGRAMUNIFORM1I64VNVPROC(glfwGetProcAddress("glProgramUniform1i64vNV"));
  glProgramUniform1iEXT = PFNGLPROGRAMUNIFORM1IEXTPROC(glfwGetProcAddress("glProgramUniform1iEXT"));
  glProgramUniform1iv = PFNGLPROGRAMUNIFORM1IVPROC(glfwGetProcAddress("glProgramUniform1iv"));
  glProgramUniform1ivEXT = PFNGLPROGRAMUNIFORM1IVEXTPROC(glfwGetProcAddress("glProgramUniform1ivEXT"));
  glProgramUniform1ui = PFNGLPROGRAMUNIFORM1UIPROC(glfwGetProcAddress("glProgramUniform1ui"));
  glProgramUniform1ui64ARB = PFNGLPROGRAMUNIFORM1UI64ARBPROC(glfwGetProcAddress("glProgramUniform1ui64ARB"));
  glProgramUniform1ui64NV = PFNGLPROGRAMUNIFORM1UI64NVPROC(glfwGetProcAddress("glProgramUniform1ui64NV"));
  glProgramUniform1ui64vARB = PFNGLPROGRAMUNIFORM1UI64VARBPROC(glfwGetProcAddress("glProgramUniform1ui64vARB"));
  glProgramUniform1ui64vNV = PFNGLPROGRAMUNIFORM1UI64VNVPROC(glfwGetProcAddress("glProgramUniform1ui64vNV"));
  glProgramUniform1uiEXT = PFNGLPROGRAMUNIFORM1UIEXTPROC(glfwGetProcAddress("glProgramUniform1uiEXT"));
  glProgramUniform1uiv = PFNGLPROGRAMUNIFORM1UIVPROC(glfwGetProcAddress("glProgramUniform1uiv"));
  glProgramUniform1uivEXT = PFNGLPROGRAMUNIFORM1UIVEXTPROC(glfwGetProcAddress("glProgramUniform1uivEXT"));
  glProgramUniform2d = PFNGLPROGRAMUNIFORM2DPROC(glfwGetProcAddress("glProgramUniform2d"));
  glProgramUniform2dEXT = PFNGLPROGRAMUNIFORM2DEXTPROC(glfwGetProcAddress("glProgramUniform2dEXT"));
  glProgramUniform2dv = PFNGLPROGRAMUNIFORM2DVPROC(glfwGetProcAddress("glProgramUniform2dv"));
  glProgramUniform2dvEXT = PFNGLPROGRAMUNIFORM2DVEXTPROC(glfwGetProcAddress("glProgramUniform2dvEXT"));
  glProgramUniform2f = PFNGLPROGRAMUNIFORM2FPROC(glfwGetProcAddress("glProgramUniform2f"));
  glProgramUniform2fEXT = PFNGLPROGRAMUNIFORM2FEXTPROC(glfwGetProcAddress("glProgramUniform2fEXT"));
  glProgramUniform2fv = PFNGLPROGRAMUNIFORM2FVPROC(glfwGetProcAddress("glProgramUniform2fv"));
  glProgramUniform2fvEXT = PFNGLPROGRAMUNIFORM2FVEXTPROC(glfwGetProcAddress("glProgramUniform2fvEXT"));
  glProgramUniform2i = PFNGLPROGRAMUNIFORM2IPROC(glfwGetProcAddress("glProgramUniform2i"));
  glProgramUniform2i64ARB = PFNGLPROGRAMUNIFORM2I64ARBPROC(glfwGetProcAddress("glProgramUniform2i64ARB"));
  glProgramUniform2i64NV = PFNGLPROGRAMUNIFORM2I64NVPROC(glfwGetProcAddress("glProgramUniform2i64NV"));
  glProgramUniform2i64vARB = PFNGLPROGRAMUNIFORM2I64VARBPROC(glfwGetProcAddress("glProgramUniform2i64vARB"));
  glProgramUniform2i64vNV = PFNGLPROGRAMUNIFORM2I64VNVPROC(glfwGetProcAddress("glProgramUniform2i64vNV"));
  glProgramUniform2iEXT = PFNGLPROGRAMUNIFORM2IEXTPROC(glfwGetProcAddress("glProgramUniform2iEXT"));
  glProgramUniform2iv = PFNGLPROGRAMUNIFORM2IVPROC(glfwGetProcAddress("glProgramUniform2iv"));
  glProgramUniform2ivEXT = PFNGLPROGRAMUNIFORM2IVEXTPROC(glfwGetProcAddress("glProgramUniform2ivEXT"));
  glProgramUniform2ui = PFNGLPROGRAMUNIFORM2UIPROC(glfwGetProcAddress("glProgramUniform2ui"));
  glProgramUniform2ui64ARB = PFNGLPROGRAMUNIFORM2UI64ARBPROC(glfwGetProcAddress("glProgramUniform2ui64ARB"));
  glProgramUniform2ui64NV = PFNGLPROGRAMUNIFORM2UI64NVPROC(glfwGetProcAddress("glProgramUniform2ui64NV"));
  glProgramUniform2ui64vARB = PFNGLPROGRAMUNIFORM2UI64VARBPROC(glfwGetProcAddress("glProgramUniform2ui64vARB"));
  glProgramUniform2ui64vNV = PFNGLPROGRAMUNIFORM2UI64VNVPROC(glfwGetProcAddress("glProgramUniform2ui64vNV"));
  glProgramUniform2uiEXT = PFNGLPROGRAMUNIFORM2UIEXTPROC(glfwGetProcAddress("glProgramUniform2uiEXT"));
  glProgramUniform2uiv = PFNGLPROGRAMUNIFORM2UIVPROC(glfwGetProcAddress("glProgramUniform2uiv"));
  glProgramUniform2uivEXT = PFNGLPROGRAMUNIFORM2UIVEXTPROC(glfwGetProcAddress("glProgramUniform2uivEXT"));
  glProgramUniform3d = PFNGLPROGRAMUNIFORM3DPROC(glfwGetProcAddress("glProgramUniform3d"));
  glProgramUniform3dEXT = PFNGLPROGRAMUNIFORM3DEXTPROC(glfwGetProcAddress("glProgramUniform3dEXT"));
  glProgramUniform3dv = PFNGLPROGRAMUNIFORM3DVPROC(glfwGetProcAddress("glProgramUniform3dv"));
  glProgramUniform3dvEXT = PFNGLPROGRAMUNIFORM3DVEXTPROC(glfwGetProcAddress("glProgramUniform3dvEXT"));
  glProgramUniform3f = PFNGLPROGRAMUNIFORM3FPROC(glfwGetProcAddress("glProgramUniform3f"));
  glProgramUniform3fEXT = PFNGLPROGRAMUNIFORM3FEXTPROC(glfwGetProcAddress("glProgramUniform3fEXT"));
  glProgramUniform3fv = PFNGLPROGRAMUNIFORM3FVPROC(glfwGetProcAddress("glProgramUniform3fv"));
  glProgramUniform3fvEXT = PFNGLPROGRAMUNIFORM3FVEXTPROC(glfwGetProcAddress("glProgramUniform3fvEXT"));
  glProgramUniform3i = PFNGLPROGRAMUNIFORM3IPROC(glfwGetProcAddress("glProgramUniform3i"));
  glProgramUniform3i64ARB = PFNGLPROGRAMUNIFORM3I64ARBPROC(glfwGetProcAddress("glProgramUniform3i64ARB"));
  glProgramUniform3i64NV = PFNGLPROGRAMUNIFORM3I64NVPROC(glfwGetProcAddress("glProgramUniform3i64NV"));
  glProgramUniform3i64vARB = PFNGLPROGRAMUNIFORM3I64VARBPROC(glfwGetProcAddress("glProgramUniform3i64vARB"));
  glProgramUniform3i64vNV = PFNGLPROGRAMUNIFORM3I64VNVPROC(glfwGetProcAddress("glProgramUniform3i64vNV"));
  glProgramUniform3iEXT = PFNGLPROGRAMUNIFORM3IEXTPROC(glfwGetProcAddress("glProgramUniform3iEXT"));
  glProgramUniform3iv = PFNGLPROGRAMUNIFORM3IVPROC(glfwGetProcAddress("glProgramUniform3iv"));
  glProgramUniform3ivEXT = PFNGLPROGRAMUNIFORM3IVEXTPROC(glfwGetProcAddress("glProgramUniform3ivEXT"));
  glProgramUniform3ui = PFNGLPROGRAMUNIFORM3UIPROC(glfwGetProcAddress("glProgramUniform3ui"));
  glProgramUniform3ui64ARB = PFNGLPROGRAMUNIFORM3UI64ARBPROC(glfwGetProcAddress("glProgramUniform3ui64ARB"));
  glProgramUniform3ui64NV = PFNGLPROGRAMUNIFORM3UI64NVPROC(glfwGetProcAddress("glProgramUniform3ui64NV"));
  glProgramUniform3ui64vARB = PFNGLPROGRAMUNIFORM3UI64VARBPROC(glfwGetProcAddress("glProgramUniform3ui64vARB"));
  glProgramUniform3ui64vNV = PFNGLPROGRAMUNIFORM3UI64VNVPROC(glfwGetProcAddress("glProgramUniform3ui64vNV"));
  glProgramUniform3uiEXT = PFNGLPROGRAMUNIFORM3UIEXTPROC(glfwGetProcAddress("glProgramUniform3uiEXT"));
  glProgramUniform3uiv = PFNGLPROGRAMUNIFORM3UIVPROC(glfwGetProcAddress("glProgramUniform3uiv"));
  glProgramUniform3uivEXT = PFNGLPROGRAMUNIFORM3UIVEXTPROC(glfwGetProcAddress("glProgramUniform3uivEXT"));
  glProgramUniform4d = PFNGLPROGRAMUNIFORM4DPROC(glfwGetProcAddress("glProgramUniform4d"));
  glProgramUniform4dEXT = PFNGLPROGRAMUNIFORM4DEXTPROC(glfwGetProcAddress("glProgramUniform4dEXT"));
  glProgramUniform4dv = PFNGLPROGRAMUNIFORM4DVPROC(glfwGetProcAddress("glProgramUniform4dv"));
  glProgramUniform4dvEXT = PFNGLPROGRAMUNIFORM4DVEXTPROC(glfwGetProcAddress("glProgramUniform4dvEXT"));
  glProgramUniform4f = PFNGLPROGRAMUNIFORM4FPROC(glfwGetProcAddress("glProgramUniform4f"));
  glProgramUniform4fEXT = PFNGLPROGRAMUNIFORM4FEXTPROC(glfwGetProcAddress("glProgramUniform4fEXT"));
  glProgramUniform4fv = PFNGLPROGRAMUNIFORM4FVPROC(glfwGetProcAddress("glProgramUniform4fv"));
  glProgramUniform4fvEXT = PFNGLPROGRAMUNIFORM4FVEXTPROC(glfwGetProcAddress("glProgramUniform4fvEXT"));
  glProgramUniform4i = PFNGLPROGRAMUNIFORM4IPROC(glfwGetProcAddress("glProgramUniform4i"));
  glProgramUniform4i64ARB = PFNGLPROGRAMUNIFORM4I64ARBPROC(glfwGetProcAddress("glProgramUniform4i64ARB"));
  glProgramUniform4i64NV = PFNGLPROGRAMUNIFORM4I64NVPROC(glfwGetProcAddress("glProgramUniform4i64NV"));
  glProgramUniform4i64vARB = PFNGLPROGRAMUNIFORM4I64VARBPROC(glfwGetProcAddress("glProgramUniform4i64vARB"));
  glProgramUniform4i64vNV = PFNGLPROGRAMUNIFORM4I64VNVPROC(glfwGetProcAddress("glProgramUniform4i64vNV"));
  glProgramUniform4iEXT = PFNGLPROGRAMUNIFORM4IEXTPROC(glfwGetProcAddress("glProgramUniform4iEXT"));
  glProgramUniform4iv = PFNGLPROGRAMUNIFORM4IVPROC(glfwGetProcAddress("glProgramUniform4iv"));
  glProgramUniform4ivEXT = PFNGLPROGRAMUNIFORM4IVEXTPROC(glfwGetProcAddress("glProgramUniform4ivEXT"));
  glProgramUniform4ui = PFNGLPROGRAMUNIFORM4UIPROC(glfwGetProcAddress("glProgramUniform4ui"));
  glProgramUniform4ui64ARB = PFNGLPROGRAMUNIFORM4UI64ARBPROC(glfwGetProcAddress("glProgramUniform4ui64ARB"));
  glProgramUniform4ui64NV = PFNGLPROGRAMUNIFORM4UI64NVPROC(glfwGetProcAddress("glProgramUniform4ui64NV"));
  glProgramUniform4ui64vARB = PFNGLPROGRAMUNIFORM4UI64VARBPROC(glfwGetProcAddress("glProgramUniform4ui64vARB"));
  glProgramUniform4ui64vNV = PFNGLPROGRAMUNIFORM4UI64VNVPROC(glfwGetProcAddress("glProgramUniform4ui64vNV"));
  glProgramUniform4uiEXT = PFNGLPROGRAMUNIFORM4UIEXTPROC(glfwGetProcAddress("glProgramUniform4uiEXT"));
  glProgramUniform4uiv = PFNGLPROGRAMUNIFORM4UIVPROC(glfwGetProcAddress("glProgramUniform4uiv"));
  glProgramUniform4uivEXT = PFNGLPROGRAMUNIFORM4UIVEXTPROC(glfwGetProcAddress("glProgramUniform4uivEXT"));
  glProgramUniformHandleui64ARB = PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC(glfwGetProcAddress("glProgramUniformHandleui64ARB"));
  glProgramUniformHandleui64NV = PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC(glfwGetProcAddress("glProgramUniformHandleui64NV"));
  glProgramUniformHandleui64vARB = PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC(glfwGetProcAddress("glProgramUniformHandleui64vARB"));
  glProgramUniformHandleui64vNV = PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC(glfwGetProcAddress("glProgramUniformHandleui64vNV"));
  glProgramUniformMatrix2dv = PFNGLPROGRAMUNIFORMMATRIX2DVPROC(glfwGetProcAddress("glProgramUniformMatrix2dv"));
  glProgramUniformMatrix2dvEXT = PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix2dvEXT"));
  glProgramUniformMatrix2fv = PFNGLPROGRAMUNIFORMMATRIX2FVPROC(glfwGetProcAddress("glProgramUniformMatrix2fv"));
  glProgramUniformMatrix2fvEXT = PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix2fvEXT"));
  glProgramUniformMatrix2x3dv = PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC(glfwGetProcAddress("glProgramUniformMatrix2x3dv"));
  glProgramUniformMatrix2x3dvEXT = PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix2x3dvEXT"));
  glProgramUniformMatrix2x3fv = PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC(glfwGetProcAddress("glProgramUniformMatrix2x3fv"));
  glProgramUniformMatrix2x3fvEXT = PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix2x3fvEXT"));
  glProgramUniformMatrix2x4dv = PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC(glfwGetProcAddress("glProgramUniformMatrix2x4dv"));
  glProgramUniformMatrix2x4dvEXT = PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix2x4dvEXT"));
  glProgramUniformMatrix2x4fv = PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC(glfwGetProcAddress("glProgramUniformMatrix2x4fv"));
  glProgramUniformMatrix2x4fvEXT = PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix2x4fvEXT"));
  glProgramUniformMatrix3dv = PFNGLPROGRAMUNIFORMMATRIX3DVPROC(glfwGetProcAddress("glProgramUniformMatrix3dv"));
  glProgramUniformMatrix3dvEXT = PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix3dvEXT"));
  glProgramUniformMatrix3fv = PFNGLPROGRAMUNIFORMMATRIX3FVPROC(glfwGetProcAddress("glProgramUniformMatrix3fv"));
  glProgramUniformMatrix3fvEXT = PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix3fvEXT"));
  glProgramUniformMatrix3x2dv = PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC(glfwGetProcAddress("glProgramUniformMatrix3x2dv"));
  glProgramUniformMatrix3x2dvEXT = PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix3x2dvEXT"));
  glProgramUniformMatrix3x2fv = PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC(glfwGetProcAddress("glProgramUniformMatrix3x2fv"));
  glProgramUniformMatrix3x2fvEXT = PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix3x2fvEXT"));
  glProgramUniformMatrix3x4dv = PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC(glfwGetProcAddress("glProgramUniformMatrix3x4dv"));
  glProgramUniformMatrix3x4dvEXT = PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix3x4dvEXT"));
  glProgramUniformMatrix3x4fv = PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC(glfwGetProcAddress("glProgramUniformMatrix3x4fv"));
  glProgramUniformMatrix3x4fvEXT = PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix3x4fvEXT"));
  glProgramUniformMatrix4dv = PFNGLPROGRAMUNIFORMMATRIX4DVPROC(glfwGetProcAddress("glProgramUniformMatrix4dv"));
  glProgramUniformMatrix4dvEXT = PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix4dvEXT"));
  glProgramUniformMatrix4fv = PFNGLPROGRAMUNIFORMMATRIX4FVPROC(glfwGetProcAddress("glProgramUniformMatrix4fv"));
  glProgramUniformMatrix4fvEXT = PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix4fvEXT"));
  glProgramUniformMatrix4x2dv = PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC(glfwGetProcAddress("glProgramUniformMatrix4x2dv"));
  glProgramUniformMatrix4x2dvEXT = PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix4x2dvEXT"));
  glProgramUniformMatrix4x2fv = PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC(glfwGetProcAddress("glProgramUniformMatrix4x2fv"));
  glProgramUniformMatrix4x2fvEXT = PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix4x2fvEXT"));
  glProgramUniformMatrix4x3dv = PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC(glfwGetProcAddress("glProgramUniformMatrix4x3dv"));
  glProgramUniformMatrix4x3dvEXT = PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix4x3dvEXT"));
  glProgramUniformMatrix4x3fv = PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC(glfwGetProcAddress("glProgramUniformMatrix4x3fv"));
  glProgramUniformMatrix4x3fvEXT = PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC(glfwGetProcAddress("glProgramUniformMatrix4x3fvEXT"));
  glProgramUniformui64NV = PFNGLPROGRAMUNIFORMUI64NVPROC(glfwGetProcAddress("glProgramUniformui64NV"));
  glProgramUniformui64vNV = PFNGLPROGRAMUNIFORMUI64VNVPROC(glfwGetProcAddress("glProgramUniformui64vNV"));
  glProgramVertexLimitNV = PFNGLPROGRAMVERTEXLIMITNVPROC(glfwGetProcAddress("glProgramVertexLimitNV"));
  glProvokingVertex = PFNGLPROVOKINGVERTEXPROC(glfwGetProcAddress("glProvokingVertex"));
  glProvokingVertexEXT = PFNGLPROVOKINGVERTEXEXTPROC(glfwGetProcAddress("glProvokingVertexEXT"));
  glPushClientAttribDefaultEXT = PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC(glfwGetProcAddress("glPushClientAttribDefaultEXT"));
  glPushDebugGroup = PFNGLPUSHDEBUGGROUPPROC(glfwGetProcAddress("glPushDebugGroup"));
  glPushGroupMarkerEXT = PFNGLPUSHGROUPMARKEREXTPROC(glfwGetProcAddress("glPushGroupMarkerEXT"));
  glQueryCounter = PFNGLQUERYCOUNTERPROC(glfwGetProcAddress("glQueryCounter"));
  glQueryMatrixxOES = PFNGLQUERYMATRIXXOESPROC(glfwGetProcAddress("glQueryMatrixxOES"));
  glQueryObjectParameteruiAMD = PFNGLQUERYOBJECTPARAMETERUIAMDPROC(glfwGetProcAddress("glQueryObjectParameteruiAMD"));
  glRasterPos2xOES = PFNGLRASTERPOS2XOESPROC(glfwGetProcAddress("glRasterPos2xOES"));
  glRasterPos2xvOES = PFNGLRASTERPOS2XVOESPROC(glfwGetProcAddress("glRasterPos2xvOES"));
  glRasterPos3xOES = PFNGLRASTERPOS3XOESPROC(glfwGetProcAddress("glRasterPos3xOES"));
  glRasterPos3xvOES = PFNGLRASTERPOS3XVOESPROC(glfwGetProcAddress("glRasterPos3xvOES"));
  glRasterPos4xOES = PFNGLRASTERPOS4XOESPROC(glfwGetProcAddress("glRasterPos4xOES"));
  glRasterPos4xvOES = PFNGLRASTERPOS4XVOESPROC(glfwGetProcAddress("glRasterPos4xvOES"));
  glRasterSamplesEXT = PFNGLRASTERSAMPLESEXTPROC(glfwGetProcAddress("glRasterSamplesEXT"));
  glReadInstrumentsSGIX = PFNGLREADINSTRUMENTSSGIXPROC(glfwGetProcAddress("glReadInstrumentsSGIX"));
  glReadnPixels = PFNGLREADNPIXELSPROC(glfwGetProcAddress("glReadnPixels"));
  glReadnPixelsARB = PFNGLREADNPIXELSARBPROC(glfwGetProcAddress("glReadnPixelsARB"));
  glRectxOES = PFNGLRECTXOESPROC(glfwGetProcAddress("glRectxOES"));
  glRectxvOES = PFNGLRECTXVOESPROC(glfwGetProcAddress("glRectxvOES"));
  glReferencePlaneSGIX = PFNGLREFERENCEPLANESGIXPROC(glfwGetProcAddress("glReferencePlaneSGIX"));
  glReleaseShaderCompiler = PFNGLRELEASESHADERCOMPILERPROC(glfwGetProcAddress("glReleaseShaderCompiler"));
  glRenderbufferStorage = PFNGLRENDERBUFFERSTORAGEPROC(glfwGetProcAddress("glRenderbufferStorage"));
  glRenderbufferStorageEXT = PFNGLRENDERBUFFERSTORAGEEXTPROC(glfwGetProcAddress("glRenderbufferStorageEXT"));
  glRenderbufferStorageMultisample = PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC(glfwGetProcAddress("glRenderbufferStorageMultisample"));
  glRenderbufferStorageMultisampleCoverageNV = PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC(glfwGetProcAddress("glRenderbufferStorageMultisampleCoverageNV"));
  glRenderbufferStorageMultisampleEXT = PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC(glfwGetProcAddress("glRenderbufferStorageMultisampleEXT"));
  glRenderGpuMaskNV = PFNGLRENDERGPUMASKNVPROC(glfwGetProcAddress("glRenderGpuMaskNV"));
  glReplacementCodePointerSUN = PFNGLREPLACEMENTCODEPOINTERSUNPROC(glfwGetProcAddress("glReplacementCodePointerSUN"));
  glReplacementCodeubSUN = PFNGLREPLACEMENTCODEUBSUNPROC(glfwGetProcAddress("glReplacementCodeubSUN"));
  glReplacementCodeubvSUN = PFNGLREPLACEMENTCODEUBVSUNPROC(glfwGetProcAddress("glReplacementCodeubvSUN"));
  glReplacementCodeuiColor3fVertex3fSUN = PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiColor3fVertex3fSUN"));
  glReplacementCodeuiColor3fVertex3fvSUN = PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiColor3fVertex3fvSUN"));
  glReplacementCodeuiColor4fNormal3fVertex3fSUN = PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fSUN"));
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN = PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fvSUN"));
  glReplacementCodeuiColor4ubVertex3fSUN = PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiColor4ubVertex3fSUN"));
  glReplacementCodeuiColor4ubVertex3fvSUN = PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiColor4ubVertex3fvSUN"));
  glReplacementCodeuiNormal3fVertex3fSUN = PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiNormal3fVertex3fSUN"));
  glReplacementCodeuiNormal3fVertex3fvSUN = PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiNormal3fVertex3fvSUN"));
  glReplacementCodeuiSUN = PFNGLREPLACEMENTCODEUISUNPROC(glfwGetProcAddress("glReplacementCodeuiSUN"));
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN"));
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN"));
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN"));
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN"));
  glReplacementCodeuiTexCoord2fVertex3fSUN = PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiTexCoord2fVertex3fSUN"));
  glReplacementCodeuiTexCoord2fVertex3fvSUN = PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiTexCoord2fVertex3fvSUN"));
  glReplacementCodeuiVertex3fSUN = PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC(glfwGetProcAddress("glReplacementCodeuiVertex3fSUN"));
  glReplacementCodeuiVertex3fvSUN = PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC(glfwGetProcAddress("glReplacementCodeuiVertex3fvSUN"));
  glReplacementCodeuivSUN = PFNGLREPLACEMENTCODEUIVSUNPROC(glfwGetProcAddress("glReplacementCodeuivSUN"));
  glReplacementCodeusSUN = PFNGLREPLACEMENTCODEUSSUNPROC(glfwGetProcAddress("glReplacementCodeusSUN"));
  glReplacementCodeusvSUN = PFNGLREPLACEMENTCODEUSVSUNPROC(glfwGetProcAddress("glReplacementCodeusvSUN"));
  glRequestResidentProgramsNV = PFNGLREQUESTRESIDENTPROGRAMSNVPROC(glfwGetProcAddress("glRequestResidentProgramsNV"));
  glResetHistogram = PFNGLRESETHISTOGRAMPROC(glfwGetProcAddress("glResetHistogram"));
  glResetHistogramEXT = PFNGLRESETHISTOGRAMEXTPROC(glfwGetProcAddress("glResetHistogramEXT"));
  glResetMinmax = PFNGLRESETMINMAXPROC(glfwGetProcAddress("glResetMinmax"));
  glResetMinmaxEXT = PFNGLRESETMINMAXEXTPROC(glfwGetProcAddress("glResetMinmaxEXT"));
  glResizeBuffersMESA = PFNGLRESIZEBUFFERSMESAPROC(glfwGetProcAddress("glResizeBuffersMESA"));
  glResolveDepthValuesNV = PFNGLRESOLVEDEPTHVALUESNVPROC(glfwGetProcAddress("glResolveDepthValuesNV"));
  glResumeTransformFeedback = PFNGLRESUMETRANSFORMFEEDBACKPROC(glfwGetProcAddress("glResumeTransformFeedback"));
  glResumeTransformFeedbackNV = PFNGLRESUMETRANSFORMFEEDBACKNVPROC(glfwGetProcAddress("glResumeTransformFeedbackNV"));
  glRotatexOES = PFNGLROTATEXOESPROC(glfwGetProcAddress("glRotatexOES"));
  glSampleCoverage = PFNGLSAMPLECOVERAGEPROC(glfwGetProcAddress("glSampleCoverage"));
  glSampleCoverageARB = PFNGLSAMPLECOVERAGEARBPROC(glfwGetProcAddress("glSampleCoverageARB"));
  glSampleMapATI = PFNGLSAMPLEMAPATIPROC(glfwGetProcAddress("glSampleMapATI"));
  glSampleMaskEXT = PFNGLSAMPLEMASKEXTPROC(glfwGetProcAddress("glSampleMaskEXT"));
  glSampleMaski = PFNGLSAMPLEMASKIPROC(glfwGetProcAddress("glSampleMaski"));
  glSampleMaskIndexedNV = PFNGLSAMPLEMASKINDEXEDNVPROC(glfwGetProcAddress("glSampleMaskIndexedNV"));
  glSampleMaskSGIS = PFNGLSAMPLEMASKSGISPROC(glfwGetProcAddress("glSampleMaskSGIS"));
  glSamplePatternEXT = PFNGLSAMPLEPATTERNEXTPROC(glfwGetProcAddress("glSamplePatternEXT"));
  glSamplePatternSGIS = PFNGLSAMPLEPATTERNSGISPROC(glfwGetProcAddress("glSamplePatternSGIS"));
  glSamplerParameterf = PFNGLSAMPLERPARAMETERFPROC(glfwGetProcAddress("glSamplerParameterf"));
  glSamplerParameterfv = PFNGLSAMPLERPARAMETERFVPROC(glfwGetProcAddress("glSamplerParameterfv"));
  glSamplerParameteri = PFNGLSAMPLERPARAMETERIPROC(glfwGetProcAddress("glSamplerParameteri"));
  glSamplerParameterIiv = PFNGLSAMPLERPARAMETERIIVPROC(glfwGetProcAddress("glSamplerParameterIiv"));
  glSamplerParameterIuiv = PFNGLSAMPLERPARAMETERIUIVPROC(glfwGetProcAddress("glSamplerParameterIuiv"));
  glSamplerParameteriv = PFNGLSAMPLERPARAMETERIVPROC(glfwGetProcAddress("glSamplerParameteriv"));
  glScalexOES = PFNGLSCALEXOESPROC(glfwGetProcAddress("glScalexOES"));
  glScissorArrayv = PFNGLSCISSORARRAYVPROC(glfwGetProcAddress("glScissorArrayv"));
  glScissorIndexed = PFNGLSCISSORINDEXEDPROC(glfwGetProcAddress("glScissorIndexed"));
  glScissorIndexedv = PFNGLSCISSORINDEXEDVPROC(glfwGetProcAddress("glScissorIndexedv"));
  glSecondaryColor3b = PFNGLSECONDARYCOLOR3BPROC(glfwGetProcAddress("glSecondaryColor3b"));
  glSecondaryColor3bEXT = PFNGLSECONDARYCOLOR3BEXTPROC(glfwGetProcAddress("glSecondaryColor3bEXT"));
  glSecondaryColor3bv = PFNGLSECONDARYCOLOR3BVPROC(glfwGetProcAddress("glSecondaryColor3bv"));
  glSecondaryColor3bvEXT = PFNGLSECONDARYCOLOR3BVEXTPROC(glfwGetProcAddress("glSecondaryColor3bvEXT"));
  glSecondaryColor3d = PFNGLSECONDARYCOLOR3DPROC(glfwGetProcAddress("glSecondaryColor3d"));
  glSecondaryColor3dEXT = PFNGLSECONDARYCOLOR3DEXTPROC(glfwGetProcAddress("glSecondaryColor3dEXT"));
  glSecondaryColor3dv = PFNGLSECONDARYCOLOR3DVPROC(glfwGetProcAddress("glSecondaryColor3dv"));
  glSecondaryColor3dvEXT = PFNGLSECONDARYCOLOR3DVEXTPROC(glfwGetProcAddress("glSecondaryColor3dvEXT"));
  glSecondaryColor3f = PFNGLSECONDARYCOLOR3FPROC(glfwGetProcAddress("glSecondaryColor3f"));
  glSecondaryColor3fEXT = PFNGLSECONDARYCOLOR3FEXTPROC(glfwGetProcAddress("glSecondaryColor3fEXT"));
  glSecondaryColor3fv = PFNGLSECONDARYCOLOR3FVPROC(glfwGetProcAddress("glSecondaryColor3fv"));
  glSecondaryColor3fvEXT = PFNGLSECONDARYCOLOR3FVEXTPROC(glfwGetProcAddress("glSecondaryColor3fvEXT"));
  glSecondaryColor3hNV = PFNGLSECONDARYCOLOR3HNVPROC(glfwGetProcAddress("glSecondaryColor3hNV"));
  glSecondaryColor3hvNV = PFNGLSECONDARYCOLOR3HVNVPROC(glfwGetProcAddress("glSecondaryColor3hvNV"));
  glSecondaryColor3i = PFNGLSECONDARYCOLOR3IPROC(glfwGetProcAddress("glSecondaryColor3i"));
  glSecondaryColor3iEXT = PFNGLSECONDARYCOLOR3IEXTPROC(glfwGetProcAddress("glSecondaryColor3iEXT"));
  glSecondaryColor3iv = PFNGLSECONDARYCOLOR3IVPROC(glfwGetProcAddress("glSecondaryColor3iv"));
  glSecondaryColor3ivEXT = PFNGLSECONDARYCOLOR3IVEXTPROC(glfwGetProcAddress("glSecondaryColor3ivEXT"));
  glSecondaryColor3s = PFNGLSECONDARYCOLOR3SPROC(glfwGetProcAddress("glSecondaryColor3s"));
  glSecondaryColor3sEXT = PFNGLSECONDARYCOLOR3SEXTPROC(glfwGetProcAddress("glSecondaryColor3sEXT"));
  glSecondaryColor3sv = PFNGLSECONDARYCOLOR3SVPROC(glfwGetProcAddress("glSecondaryColor3sv"));
  glSecondaryColor3svEXT = PFNGLSECONDARYCOLOR3SVEXTPROC(glfwGetProcAddress("glSecondaryColor3svEXT"));
  glSecondaryColor3ub = PFNGLSECONDARYCOLOR3UBPROC(glfwGetProcAddress("glSecondaryColor3ub"));
  glSecondaryColor3ubEXT = PFNGLSECONDARYCOLOR3UBEXTPROC(glfwGetProcAddress("glSecondaryColor3ubEXT"));
  glSecondaryColor3ubv = PFNGLSECONDARYCOLOR3UBVPROC(glfwGetProcAddress("glSecondaryColor3ubv"));
  glSecondaryColor3ubvEXT = PFNGLSECONDARYCOLOR3UBVEXTPROC(glfwGetProcAddress("glSecondaryColor3ubvEXT"));
  glSecondaryColor3ui = PFNGLSECONDARYCOLOR3UIPROC(glfwGetProcAddress("glSecondaryColor3ui"));
  glSecondaryColor3uiEXT = PFNGLSECONDARYCOLOR3UIEXTPROC(glfwGetProcAddress("glSecondaryColor3uiEXT"));
  glSecondaryColor3uiv = PFNGLSECONDARYCOLOR3UIVPROC(glfwGetProcAddress("glSecondaryColor3uiv"));
  glSecondaryColor3uivEXT = PFNGLSECONDARYCOLOR3UIVEXTPROC(glfwGetProcAddress("glSecondaryColor3uivEXT"));
  glSecondaryColor3us = PFNGLSECONDARYCOLOR3USPROC(glfwGetProcAddress("glSecondaryColor3us"));
  glSecondaryColor3usEXT = PFNGLSECONDARYCOLOR3USEXTPROC(glfwGetProcAddress("glSecondaryColor3usEXT"));
  glSecondaryColor3usv = PFNGLSECONDARYCOLOR3USVPROC(glfwGetProcAddress("glSecondaryColor3usv"));
  glSecondaryColor3usvEXT = PFNGLSECONDARYCOLOR3USVEXTPROC(glfwGetProcAddress("glSecondaryColor3usvEXT"));
  glSecondaryColorFormatNV = PFNGLSECONDARYCOLORFORMATNVPROC(glfwGetProcAddress("glSecondaryColorFormatNV"));
  glSecondaryColorP3ui = PFNGLSECONDARYCOLORP3UIPROC(glfwGetProcAddress("glSecondaryColorP3ui"));
  glSecondaryColorP3uiv = PFNGLSECONDARYCOLORP3UIVPROC(glfwGetProcAddress("glSecondaryColorP3uiv"));
  glSecondaryColorPointer = PFNGLSECONDARYCOLORPOINTERPROC(glfwGetProcAddress("glSecondaryColorPointer"));
  glSecondaryColorPointerEXT = PFNGLSECONDARYCOLORPOINTEREXTPROC(glfwGetProcAddress("glSecondaryColorPointerEXT"));
  glSecondaryColorPointerListIBM = PFNGLSECONDARYCOLORPOINTERLISTIBMPROC(glfwGetProcAddress("glSecondaryColorPointerListIBM"));
  glSelectPerfMonitorCountersAMD = PFNGLSELECTPERFMONITORCOUNTERSAMDPROC(glfwGetProcAddress("glSelectPerfMonitorCountersAMD"));
  glSeparableFilter2D = PFNGLSEPARABLEFILTER2DPROC(glfwGetProcAddress("glSeparableFilter2D"));
  glSeparableFilter2DEXT = PFNGLSEPARABLEFILTER2DEXTPROC(glfwGetProcAddress("glSeparableFilter2DEXT"));
  glSetFenceAPPLE = PFNGLSETFENCEAPPLEPROC(glfwGetProcAddress("glSetFenceAPPLE"));
  glSetFenceNV = PFNGLSETFENCENVPROC(glfwGetProcAddress("glSetFenceNV"));
  glSetFragmentShaderConstantATI = PFNGLSETFRAGMENTSHADERCONSTANTATIPROC(glfwGetProcAddress("glSetFragmentShaderConstantATI"));
  glSetInvariantEXT = PFNGLSETINVARIANTEXTPROC(glfwGetProcAddress("glSetInvariantEXT"));
  glSetLocalConstantEXT = PFNGLSETLOCALCONSTANTEXTPROC(glfwGetProcAddress("glSetLocalConstantEXT"));
  glSetMultisamplefvAMD = PFNGLSETMULTISAMPLEFVAMDPROC(glfwGetProcAddress("glSetMultisamplefvAMD"));
  glShaderBinary = PFNGLSHADERBINARYPROC(glfwGetProcAddress("glShaderBinary"));
  glShaderOp1EXT = PFNGLSHADEROP1EXTPROC(glfwGetProcAddress("glShaderOp1EXT"));
  glShaderOp2EXT = PFNGLSHADEROP2EXTPROC(glfwGetProcAddress("glShaderOp2EXT"));
  glShaderOp3EXT = PFNGLSHADEROP3EXTPROC(glfwGetProcAddress("glShaderOp3EXT"));
  glShaderSource = PFNGLSHADERSOURCEPROC(glfwGetProcAddress("glShaderSource"));
  glShaderSourceARB = PFNGLSHADERSOURCEARBPROC(glfwGetProcAddress("glShaderSourceARB"));
  glShaderStorageBlockBinding = PFNGLSHADERSTORAGEBLOCKBINDINGPROC(glfwGetProcAddress("glShaderStorageBlockBinding"));
  glSharpenTexFuncSGIS = PFNGLSHARPENTEXFUNCSGISPROC(glfwGetProcAddress("glSharpenTexFuncSGIS"));
  glSignalVkFenceNV = PFNGLSIGNALVKFENCENVPROC(glfwGetProcAddress("glSignalVkFenceNV"));
  glSignalVkSemaphoreNV = PFNGLSIGNALVKSEMAPHORENVPROC(glfwGetProcAddress("glSignalVkSemaphoreNV"));
  glSpecializeShaderARB = PFNGLSPECIALIZESHADERARBPROC(glfwGetProcAddress("glSpecializeShaderARB"));
  glSpriteParameterfSGIX = PFNGLSPRITEPARAMETERFSGIXPROC(glfwGetProcAddress("glSpriteParameterfSGIX"));
  glSpriteParameterfvSGIX = PFNGLSPRITEPARAMETERFVSGIXPROC(glfwGetProcAddress("glSpriteParameterfvSGIX"));
  glSpriteParameteriSGIX = PFNGLSPRITEPARAMETERISGIXPROC(glfwGetProcAddress("glSpriteParameteriSGIX"));
  glSpriteParameterivSGIX = PFNGLSPRITEPARAMETERIVSGIXPROC(glfwGetProcAddress("glSpriteParameterivSGIX"));
  glStartInstrumentsSGIX = PFNGLSTARTINSTRUMENTSSGIXPROC(glfwGetProcAddress("glStartInstrumentsSGIX"));
  glStateCaptureNV = PFNGLSTATECAPTURENVPROC(glfwGetProcAddress("glStateCaptureNV"));
  glStencilClearTagEXT = PFNGLSTENCILCLEARTAGEXTPROC(glfwGetProcAddress("glStencilClearTagEXT"));
  glStencilFillPathInstancedNV = PFNGLSTENCILFILLPATHINSTANCEDNVPROC(glfwGetProcAddress("glStencilFillPathInstancedNV"));
  glStencilFillPathNV = PFNGLSTENCILFILLPATHNVPROC(glfwGetProcAddress("glStencilFillPathNV"));
  glStencilFuncSeparate = PFNGLSTENCILFUNCSEPARATEPROC(glfwGetProcAddress("glStencilFuncSeparate"));
  glStencilFuncSeparateATI = PFNGLSTENCILFUNCSEPARATEATIPROC(glfwGetProcAddress("glStencilFuncSeparateATI"));
  glStencilMaskSeparate = PFNGLSTENCILMASKSEPARATEPROC(glfwGetProcAddress("glStencilMaskSeparate"));
  glStencilOpSeparate = PFNGLSTENCILOPSEPARATEPROC(glfwGetProcAddress("glStencilOpSeparate"));
  glStencilOpSeparateATI = PFNGLSTENCILOPSEPARATEATIPROC(glfwGetProcAddress("glStencilOpSeparateATI"));
  glStencilOpValueAMD = PFNGLSTENCILOPVALUEAMDPROC(glfwGetProcAddress("glStencilOpValueAMD"));
  glStencilStrokePathInstancedNV = PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC(glfwGetProcAddress("glStencilStrokePathInstancedNV"));
  glStencilStrokePathNV = PFNGLSTENCILSTROKEPATHNVPROC(glfwGetProcAddress("glStencilStrokePathNV"));
  glStencilThenCoverFillPathInstancedNV = PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC(glfwGetProcAddress("glStencilThenCoverFillPathInstancedNV"));
  glStencilThenCoverFillPathNV = PFNGLSTENCILTHENCOVERFILLPATHNVPROC(glfwGetProcAddress("glStencilThenCoverFillPathNV"));
  glStencilThenCoverStrokePathInstancedNV = PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC(glfwGetProcAddress("glStencilThenCoverStrokePathInstancedNV"));
  glStencilThenCoverStrokePathNV = PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC(glfwGetProcAddress("glStencilThenCoverStrokePathNV"));
  glStopInstrumentsSGIX = PFNGLSTOPINSTRUMENTSSGIXPROC(glfwGetProcAddress("glStopInstrumentsSGIX"));
  glStringMarkerGREMEDY = PFNGLSTRINGMARKERGREMEDYPROC(glfwGetProcAddress("glStringMarkerGREMEDY"));
  glSubpixelPrecisionBiasNV = PFNGLSUBPIXELPRECISIONBIASNVPROC(glfwGetProcAddress("glSubpixelPrecisionBiasNV"));
  glSwizzleEXT = PFNGLSWIZZLEEXTPROC(glfwGetProcAddress("glSwizzleEXT"));
  glSyncTextureINTEL = PFNGLSYNCTEXTUREINTELPROC(glfwGetProcAddress("glSyncTextureINTEL"));
  glTagSampleBufferSGIX = PFNGLTAGSAMPLEBUFFERSGIXPROC(glfwGetProcAddress("glTagSampleBufferSGIX"));
  glTangent3bEXT = PFNGLTANGENT3BEXTPROC(glfwGetProcAddress("glTangent3bEXT"));
  glTangent3bvEXT = PFNGLTANGENT3BVEXTPROC(glfwGetProcAddress("glTangent3bvEXT"));
  glTangent3dEXT = PFNGLTANGENT3DEXTPROC(glfwGetProcAddress("glTangent3dEXT"));
  glTangent3dvEXT = PFNGLTANGENT3DVEXTPROC(glfwGetProcAddress("glTangent3dvEXT"));
  glTangent3fEXT = PFNGLTANGENT3FEXTPROC(glfwGetProcAddress("glTangent3fEXT"));
  glTangent3fvEXT = PFNGLTANGENT3FVEXTPROC(glfwGetProcAddress("glTangent3fvEXT"));
  glTangent3iEXT = PFNGLTANGENT3IEXTPROC(glfwGetProcAddress("glTangent3iEXT"));
  glTangent3ivEXT = PFNGLTANGENT3IVEXTPROC(glfwGetProcAddress("glTangent3ivEXT"));
  glTangent3sEXT = PFNGLTANGENT3SEXTPROC(glfwGetProcAddress("glTangent3sEXT"));
  glTangent3svEXT = PFNGLTANGENT3SVEXTPROC(glfwGetProcAddress("glTangent3svEXT"));
  glTangentPointerEXT = PFNGLTANGENTPOINTEREXTPROC(glfwGetProcAddress("glTangentPointerEXT"));
  glTbufferMask3DFX = PFNGLTBUFFERMASK3DFXPROC(glfwGetProcAddress("glTbufferMask3DFX"));
  glTessellationFactorAMD = PFNGLTESSELLATIONFACTORAMDPROC(glfwGetProcAddress("glTessellationFactorAMD"));
  glTessellationModeAMD = PFNGLTESSELLATIONMODEAMDPROC(glfwGetProcAddress("glTessellationModeAMD"));
  glTestFenceAPPLE = PFNGLTESTFENCEAPPLEPROC(glfwGetProcAddress("glTestFenceAPPLE"));
  glTestFenceNV = PFNGLTESTFENCENVPROC(glfwGetProcAddress("glTestFenceNV"));
  glTestObjectAPPLE = PFNGLTESTOBJECTAPPLEPROC(glfwGetProcAddress("glTestObjectAPPLE"));
  glTexBuffer = PFNGLTEXBUFFERPROC(glfwGetProcAddress("glTexBuffer"));
  glTexBufferARB = PFNGLTEXBUFFERARBPROC(glfwGetProcAddress("glTexBufferARB"));
  glTexBufferEXT = PFNGLTEXBUFFEREXTPROC(glfwGetProcAddress("glTexBufferEXT"));
  glTexBufferRange = PFNGLTEXBUFFERRANGEPROC(glfwGetProcAddress("glTexBufferRange"));
  glTexBumpParameterfvATI = PFNGLTEXBUMPPARAMETERFVATIPROC(glfwGetProcAddress("glTexBumpParameterfvATI"));
  glTexBumpParameterivATI = PFNGLTEXBUMPPARAMETERIVATIPROC(glfwGetProcAddress("glTexBumpParameterivATI"));
  glTexCoord1bOES = PFNGLTEXCOORD1BOESPROC(glfwGetProcAddress("glTexCoord1bOES"));
  glTexCoord1bvOES = PFNGLTEXCOORD1BVOESPROC(glfwGetProcAddress("glTexCoord1bvOES"));
  glTexCoord1hNV = PFNGLTEXCOORD1HNVPROC(glfwGetProcAddress("glTexCoord1hNV"));
  glTexCoord1hvNV = PFNGLTEXCOORD1HVNVPROC(glfwGetProcAddress("glTexCoord1hvNV"));
  glTexCoord1xOES = PFNGLTEXCOORD1XOESPROC(glfwGetProcAddress("glTexCoord1xOES"));
  glTexCoord1xvOES = PFNGLTEXCOORD1XVOESPROC(glfwGetProcAddress("glTexCoord1xvOES"));
  glTexCoord2bOES = PFNGLTEXCOORD2BOESPROC(glfwGetProcAddress("glTexCoord2bOES"));
  glTexCoord2bvOES = PFNGLTEXCOORD2BVOESPROC(glfwGetProcAddress("glTexCoord2bvOES"));
  glTexCoord2fColor3fVertex3fSUN = PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC(glfwGetProcAddress("glTexCoord2fColor3fVertex3fSUN"));
  glTexCoord2fColor3fVertex3fvSUN = PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC(glfwGetProcAddress("glTexCoord2fColor3fVertex3fvSUN"));
  glTexCoord2fColor4fNormal3fVertex3fSUN = PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glTexCoord2fColor4fNormal3fVertex3fSUN"));
  glTexCoord2fColor4fNormal3fVertex3fvSUN = PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glTexCoord2fColor4fNormal3fVertex3fvSUN"));
  glTexCoord2fColor4ubVertex3fSUN = PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC(glfwGetProcAddress("glTexCoord2fColor4ubVertex3fSUN"));
  glTexCoord2fColor4ubVertex3fvSUN = PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC(glfwGetProcAddress("glTexCoord2fColor4ubVertex3fvSUN"));
  glTexCoord2fNormal3fVertex3fSUN = PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC(glfwGetProcAddress("glTexCoord2fNormal3fVertex3fSUN"));
  glTexCoord2fNormal3fVertex3fvSUN = PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC(glfwGetProcAddress("glTexCoord2fNormal3fVertex3fvSUN"));
  glTexCoord2fVertex3fSUN = PFNGLTEXCOORD2FVERTEX3FSUNPROC(glfwGetProcAddress("glTexCoord2fVertex3fSUN"));
  glTexCoord2fVertex3fvSUN = PFNGLTEXCOORD2FVERTEX3FVSUNPROC(glfwGetProcAddress("glTexCoord2fVertex3fvSUN"));
  glTexCoord2hNV = PFNGLTEXCOORD2HNVPROC(glfwGetProcAddress("glTexCoord2hNV"));
  glTexCoord2hvNV = PFNGLTEXCOORD2HVNVPROC(glfwGetProcAddress("glTexCoord2hvNV"));
  glTexCoord2xOES = PFNGLTEXCOORD2XOESPROC(glfwGetProcAddress("glTexCoord2xOES"));
  glTexCoord2xvOES = PFNGLTEXCOORD2XVOESPROC(glfwGetProcAddress("glTexCoord2xvOES"));
  glTexCoord3bOES = PFNGLTEXCOORD3BOESPROC(glfwGetProcAddress("glTexCoord3bOES"));
  glTexCoord3bvOES = PFNGLTEXCOORD3BVOESPROC(glfwGetProcAddress("glTexCoord3bvOES"));
  glTexCoord3hNV = PFNGLTEXCOORD3HNVPROC(glfwGetProcAddress("glTexCoord3hNV"));
  glTexCoord3hvNV = PFNGLTEXCOORD3HVNVPROC(glfwGetProcAddress("glTexCoord3hvNV"));
  glTexCoord3xOES = PFNGLTEXCOORD3XOESPROC(glfwGetProcAddress("glTexCoord3xOES"));
  glTexCoord3xvOES = PFNGLTEXCOORD3XVOESPROC(glfwGetProcAddress("glTexCoord3xvOES"));
  glTexCoord4bOES = PFNGLTEXCOORD4BOESPROC(glfwGetProcAddress("glTexCoord4bOES"));
  glTexCoord4bvOES = PFNGLTEXCOORD4BVOESPROC(glfwGetProcAddress("glTexCoord4bvOES"));
  glTexCoord4fColor4fNormal3fVertex4fSUN = PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC(glfwGetProcAddress("glTexCoord4fColor4fNormal3fVertex4fSUN"));
  glTexCoord4fColor4fNormal3fVertex4fvSUN = PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC(glfwGetProcAddress("glTexCoord4fColor4fNormal3fVertex4fvSUN"));
  glTexCoord4fVertex4fSUN = PFNGLTEXCOORD4FVERTEX4FSUNPROC(glfwGetProcAddress("glTexCoord4fVertex4fSUN"));
  glTexCoord4fVertex4fvSUN = PFNGLTEXCOORD4FVERTEX4FVSUNPROC(glfwGetProcAddress("glTexCoord4fVertex4fvSUN"));
  glTexCoord4hNV = PFNGLTEXCOORD4HNVPROC(glfwGetProcAddress("glTexCoord4hNV"));
  glTexCoord4hvNV = PFNGLTEXCOORD4HVNVPROC(glfwGetProcAddress("glTexCoord4hvNV"));
  glTexCoord4xOES = PFNGLTEXCOORD4XOESPROC(glfwGetProcAddress("glTexCoord4xOES"));
  glTexCoord4xvOES = PFNGLTEXCOORD4XVOESPROC(glfwGetProcAddress("glTexCoord4xvOES"));
  glTexCoordFormatNV = PFNGLTEXCOORDFORMATNVPROC(glfwGetProcAddress("glTexCoordFormatNV"));
  glTexCoordP1ui = PFNGLTEXCOORDP1UIPROC(glfwGetProcAddress("glTexCoordP1ui"));
  glTexCoordP1uiv = PFNGLTEXCOORDP1UIVPROC(glfwGetProcAddress("glTexCoordP1uiv"));
  glTexCoordP2ui = PFNGLTEXCOORDP2UIPROC(glfwGetProcAddress("glTexCoordP2ui"));
  glTexCoordP2uiv = PFNGLTEXCOORDP2UIVPROC(glfwGetProcAddress("glTexCoordP2uiv"));
  glTexCoordP3ui = PFNGLTEXCOORDP3UIPROC(glfwGetProcAddress("glTexCoordP3ui"));
  glTexCoordP3uiv = PFNGLTEXCOORDP3UIVPROC(glfwGetProcAddress("glTexCoordP3uiv"));
  glTexCoordP4ui = PFNGLTEXCOORDP4UIPROC(glfwGetProcAddress("glTexCoordP4ui"));
  glTexCoordP4uiv = PFNGLTEXCOORDP4UIVPROC(glfwGetProcAddress("glTexCoordP4uiv"));
  glTexCoordPointerEXT = PFNGLTEXCOORDPOINTEREXTPROC(glfwGetProcAddress("glTexCoordPointerEXT"));
  glTexCoordPointerListIBM = PFNGLTEXCOORDPOINTERLISTIBMPROC(glfwGetProcAddress("glTexCoordPointerListIBM"));
  glTexCoordPointervINTEL = PFNGLTEXCOORDPOINTERVINTELPROC(glfwGetProcAddress("glTexCoordPointervINTEL"));
  glTexEnvxOES = PFNGLTEXENVXOESPROC(glfwGetProcAddress("glTexEnvxOES"));
  glTexEnvxvOES = PFNGLTEXENVXVOESPROC(glfwGetProcAddress("glTexEnvxvOES"));
  glTexFilterFuncSGIS = PFNGLTEXFILTERFUNCSGISPROC(glfwGetProcAddress("glTexFilterFuncSGIS"));
  glTexGenxOES = PFNGLTEXGENXOESPROC(glfwGetProcAddress("glTexGenxOES"));
  glTexGenxvOES = PFNGLTEXGENXVOESPROC(glfwGetProcAddress("glTexGenxvOES"));
  glTexImage2DMultisample = PFNGLTEXIMAGE2DMULTISAMPLEPROC(glfwGetProcAddress("glTexImage2DMultisample"));
  glTexImage2DMultisampleCoverageNV = PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC(glfwGetProcAddress("glTexImage2DMultisampleCoverageNV"));
  glTexImage3D = PFNGLTEXIMAGE3DPROC(glfwGetProcAddress("glTexImage3D"));
  glTexImage3DEXT = PFNGLTEXIMAGE3DEXTPROC(glfwGetProcAddress("glTexImage3DEXT"));
  glTexImage3DMultisample = PFNGLTEXIMAGE3DMULTISAMPLEPROC(glfwGetProcAddress("glTexImage3DMultisample"));
  glTexImage3DMultisampleCoverageNV = PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC(glfwGetProcAddress("glTexImage3DMultisampleCoverageNV"));
  glTexImage4DSGIS = PFNGLTEXIMAGE4DSGISPROC(glfwGetProcAddress("glTexImage4DSGIS"));
  glTexPageCommitmentARB = PFNGLTEXPAGECOMMITMENTARBPROC(glfwGetProcAddress("glTexPageCommitmentARB"));
  glTexParameterIiv = PFNGLTEXPARAMETERIIVPROC(glfwGetProcAddress("glTexParameterIiv"));
  glTexParameterIivEXT = PFNGLTEXPARAMETERIIVEXTPROC(glfwGetProcAddress("glTexParameterIivEXT"));
  glTexParameterIuiv = PFNGLTEXPARAMETERIUIVPROC(glfwGetProcAddress("glTexParameterIuiv"));
  glTexParameterIuivEXT = PFNGLTEXPARAMETERIUIVEXTPROC(glfwGetProcAddress("glTexParameterIuivEXT"));
  glTexParameterxOES = PFNGLTEXPARAMETERXOESPROC(glfwGetProcAddress("glTexParameterxOES"));
  glTexParameterxvOES = PFNGLTEXPARAMETERXVOESPROC(glfwGetProcAddress("glTexParameterxvOES"));
  glTexRenderbufferNV = PFNGLTEXRENDERBUFFERNVPROC(glfwGetProcAddress("glTexRenderbufferNV"));
  glTexStorage1D = PFNGLTEXSTORAGE1DPROC(glfwGetProcAddress("glTexStorage1D"));
  glTexStorage2D = PFNGLTEXSTORAGE2DPROC(glfwGetProcAddress("glTexStorage2D"));
  glTexStorage2DMultisample = PFNGLTEXSTORAGE2DMULTISAMPLEPROC(glfwGetProcAddress("glTexStorage2DMultisample"));
  glTexStorage3D = PFNGLTEXSTORAGE3DPROC(glfwGetProcAddress("glTexStorage3D"));
  glTexStorage3DMultisample = PFNGLTEXSTORAGE3DMULTISAMPLEPROC(glfwGetProcAddress("glTexStorage3DMultisample"));
  glTexStorageSparseAMD = PFNGLTEXSTORAGESPARSEAMDPROC(glfwGetProcAddress("glTexStorageSparseAMD"));
  glTexSubImage1DEXT = PFNGLTEXSUBIMAGE1DEXTPROC(glfwGetProcAddress("glTexSubImage1DEXT"));
  glTexSubImage2DEXT = PFNGLTEXSUBIMAGE2DEXTPROC(glfwGetProcAddress("glTexSubImage2DEXT"));
  glTexSubImage3D = PFNGLTEXSUBIMAGE3DPROC(glfwGetProcAddress("glTexSubImage3D"));
  glTexSubImage3DEXT = PFNGLTEXSUBIMAGE3DEXTPROC(glfwGetProcAddress("glTexSubImage3DEXT"));
  glTexSubImage4DSGIS = PFNGLTEXSUBIMAGE4DSGISPROC(glfwGetProcAddress("glTexSubImage4DSGIS"));
  glTextureBarrier = PFNGLTEXTUREBARRIERPROC(glfwGetProcAddress("glTextureBarrier"));
  glTextureBarrierNV = PFNGLTEXTUREBARRIERNVPROC(glfwGetProcAddress("glTextureBarrierNV"));
  glTextureBuffer = PFNGLTEXTUREBUFFERPROC(glfwGetProcAddress("glTextureBuffer"));
  glTextureBufferEXT = PFNGLTEXTUREBUFFEREXTPROC(glfwGetProcAddress("glTextureBufferEXT"));
  glTextureBufferRange = PFNGLTEXTUREBUFFERRANGEPROC(glfwGetProcAddress("glTextureBufferRange"));
  glTextureBufferRangeEXT = PFNGLTEXTUREBUFFERRANGEEXTPROC(glfwGetProcAddress("glTextureBufferRangeEXT"));
  glTextureColorMaskSGIS = PFNGLTEXTURECOLORMASKSGISPROC(glfwGetProcAddress("glTextureColorMaskSGIS"));
  glTextureImage1DEXT = PFNGLTEXTUREIMAGE1DEXTPROC(glfwGetProcAddress("glTextureImage1DEXT"));
  glTextureImage2DEXT = PFNGLTEXTUREIMAGE2DEXTPROC(glfwGetProcAddress("glTextureImage2DEXT"));
  glTextureImage2DMultisampleCoverageNV = PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC(glfwGetProcAddress("glTextureImage2DMultisampleCoverageNV"));
  glTextureImage2DMultisampleNV = PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC(glfwGetProcAddress("glTextureImage2DMultisampleNV"));
  glTextureImage3DEXT = PFNGLTEXTUREIMAGE3DEXTPROC(glfwGetProcAddress("glTextureImage3DEXT"));
  glTextureImage3DMultisampleCoverageNV = PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC(glfwGetProcAddress("glTextureImage3DMultisampleCoverageNV"));
  glTextureImage3DMultisampleNV = PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC(glfwGetProcAddress("glTextureImage3DMultisampleNV"));
  glTextureLightEXT = PFNGLTEXTURELIGHTEXTPROC(glfwGetProcAddress("glTextureLightEXT"));
  glTextureMaterialEXT = PFNGLTEXTUREMATERIALEXTPROC(glfwGetProcAddress("glTextureMaterialEXT"));
  glTextureNormalEXT = PFNGLTEXTURENORMALEXTPROC(glfwGetProcAddress("glTextureNormalEXT"));
  glTexturePageCommitmentEXT = PFNGLTEXTUREPAGECOMMITMENTEXTPROC(glfwGetProcAddress("glTexturePageCommitmentEXT"));
  glTextureParameterf = PFNGLTEXTUREPARAMETERFPROC(glfwGetProcAddress("glTextureParameterf"));
  glTextureParameterfEXT = PFNGLTEXTUREPARAMETERFEXTPROC(glfwGetProcAddress("glTextureParameterfEXT"));
  glTextureParameterfv = PFNGLTEXTUREPARAMETERFVPROC(glfwGetProcAddress("glTextureParameterfv"));
  glTextureParameterfvEXT = PFNGLTEXTUREPARAMETERFVEXTPROC(glfwGetProcAddress("glTextureParameterfvEXT"));
  glTextureParameteri = PFNGLTEXTUREPARAMETERIPROC(glfwGetProcAddress("glTextureParameteri"));
  glTextureParameteriEXT = PFNGLTEXTUREPARAMETERIEXTPROC(glfwGetProcAddress("glTextureParameteriEXT"));
  glTextureParameterIiv = PFNGLTEXTUREPARAMETERIIVPROC(glfwGetProcAddress("glTextureParameterIiv"));
  glTextureParameterIivEXT = PFNGLTEXTUREPARAMETERIIVEXTPROC(glfwGetProcAddress("glTextureParameterIivEXT"));
  glTextureParameterIuiv = PFNGLTEXTUREPARAMETERIUIVPROC(glfwGetProcAddress("glTextureParameterIuiv"));
  glTextureParameterIuivEXT = PFNGLTEXTUREPARAMETERIUIVEXTPROC(glfwGetProcAddress("glTextureParameterIuivEXT"));
  glTextureParameteriv = PFNGLTEXTUREPARAMETERIVPROC(glfwGetProcAddress("glTextureParameteriv"));
  glTextureParameterivEXT = PFNGLTEXTUREPARAMETERIVEXTPROC(glfwGetProcAddress("glTextureParameterivEXT"));
  glTextureRangeAPPLE = PFNGLTEXTURERANGEAPPLEPROC(glfwGetProcAddress("glTextureRangeAPPLE"));
  glTextureRenderbufferEXT = PFNGLTEXTURERENDERBUFFEREXTPROC(glfwGetProcAddress("glTextureRenderbufferEXT"));
  glTextureStorage1D = PFNGLTEXTURESTORAGE1DPROC(glfwGetProcAddress("glTextureStorage1D"));
  glTextureStorage1DEXT = PFNGLTEXTURESTORAGE1DEXTPROC(glfwGetProcAddress("glTextureStorage1DEXT"));
  glTextureStorage2D = PFNGLTEXTURESTORAGE2DPROC(glfwGetProcAddress("glTextureStorage2D"));
  glTextureStorage2DEXT = PFNGLTEXTURESTORAGE2DEXTPROC(glfwGetProcAddress("glTextureStorage2DEXT"));
  glTextureStorage2DMultisample = PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC(glfwGetProcAddress("glTextureStorage2DMultisample"));
  glTextureStorage2DMultisampleEXT = PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC(glfwGetProcAddress("glTextureStorage2DMultisampleEXT"));
  glTextureStorage3D = PFNGLTEXTURESTORAGE3DPROC(glfwGetProcAddress("glTextureStorage3D"));
  glTextureStorage3DEXT = PFNGLTEXTURESTORAGE3DEXTPROC(glfwGetProcAddress("glTextureStorage3DEXT"));
  glTextureStorage3DMultisample = PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC(glfwGetProcAddress("glTextureStorage3DMultisample"));
  glTextureStorage3DMultisampleEXT = PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC(glfwGetProcAddress("glTextureStorage3DMultisampleEXT"));
  glTextureStorageSparseAMD = PFNGLTEXTURESTORAGESPARSEAMDPROC(glfwGetProcAddress("glTextureStorageSparseAMD"));
  glTextureSubImage1D = PFNGLTEXTURESUBIMAGE1DPROC(glfwGetProcAddress("glTextureSubImage1D"));
  glTextureSubImage1DEXT = PFNGLTEXTURESUBIMAGE1DEXTPROC(glfwGetProcAddress("glTextureSubImage1DEXT"));
  glTextureSubImage2D = PFNGLTEXTURESUBIMAGE2DPROC(glfwGetProcAddress("glTextureSubImage2D"));
  glTextureSubImage2DEXT = PFNGLTEXTURESUBIMAGE2DEXTPROC(glfwGetProcAddress("glTextureSubImage2DEXT"));
  glTextureSubImage3D = PFNGLTEXTURESUBIMAGE3DPROC(glfwGetProcAddress("glTextureSubImage3D"));
  glTextureSubImage3DEXT = PFNGLTEXTURESUBIMAGE3DEXTPROC(glfwGetProcAddress("glTextureSubImage3DEXT"));
  glTextureView = PFNGLTEXTUREVIEWPROC(glfwGetProcAddress("glTextureView"));
  glTrackMatrixNV = PFNGLTRACKMATRIXNVPROC(glfwGetProcAddress("glTrackMatrixNV"));
  glTransformFeedbackAttribsNV = PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC(glfwGetProcAddress("glTransformFeedbackAttribsNV"));
  glTransformFeedbackBufferBase = PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC(glfwGetProcAddress("glTransformFeedbackBufferBase"));
  glTransformFeedbackBufferRange = PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC(glfwGetProcAddress("glTransformFeedbackBufferRange"));
  glTransformFeedbackStreamAttribsNV = PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC(glfwGetProcAddress("glTransformFeedbackStreamAttribsNV"));
  glTransformFeedbackVaryings = PFNGLTRANSFORMFEEDBACKVARYINGSPROC(glfwGetProcAddress("glTransformFeedbackVaryings"));
  glTransformFeedbackVaryingsEXT = PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC(glfwGetProcAddress("glTransformFeedbackVaryingsEXT"));
  glTransformFeedbackVaryingsNV = PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC(glfwGetProcAddress("glTransformFeedbackVaryingsNV"));
  glTransformPathNV = PFNGLTRANSFORMPATHNVPROC(glfwGetProcAddress("glTransformPathNV"));
  glTranslatexOES = PFNGLTRANSLATEXOESPROC(glfwGetProcAddress("glTranslatexOES"));
  glUniform1d = PFNGLUNIFORM1DPROC(glfwGetProcAddress("glUniform1d"));
  glUniform1dv = PFNGLUNIFORM1DVPROC(glfwGetProcAddress("glUniform1dv"));
  glUniform1f = PFNGLUNIFORM1FPROC(glfwGetProcAddress("glUniform1f"));
  glUniform1fARB = PFNGLUNIFORM1FARBPROC(glfwGetProcAddress("glUniform1fARB"));
  glUniform1fv = PFNGLUNIFORM1FVPROC(glfwGetProcAddress("glUniform1fv"));
  glUniform1fvARB = PFNGLUNIFORM1FVARBPROC(glfwGetProcAddress("glUniform1fvARB"));
  glUniform1i = PFNGLUNIFORM1IPROC(glfwGetProcAddress("glUniform1i"));
  glUniform1i64ARB = PFNGLUNIFORM1I64ARBPROC(glfwGetProcAddress("glUniform1i64ARB"));
  glUniform1i64NV = PFNGLUNIFORM1I64NVPROC(glfwGetProcAddress("glUniform1i64NV"));
  glUniform1i64vARB = PFNGLUNIFORM1I64VARBPROC(glfwGetProcAddress("glUniform1i64vARB"));
  glUniform1i64vNV = PFNGLUNIFORM1I64VNVPROC(glfwGetProcAddress("glUniform1i64vNV"));
  glUniform1iARB = PFNGLUNIFORM1IARBPROC(glfwGetProcAddress("glUniform1iARB"));
  glUniform1iv = PFNGLUNIFORM1IVPROC(glfwGetProcAddress("glUniform1iv"));
  glUniform1ivARB = PFNGLUNIFORM1IVARBPROC(glfwGetProcAddress("glUniform1ivARB"));
  glUniform1ui = PFNGLUNIFORM1UIPROC(glfwGetProcAddress("glUniform1ui"));
  glUniform1ui64ARB = PFNGLUNIFORM1UI64ARBPROC(glfwGetProcAddress("glUniform1ui64ARB"));
  glUniform1ui64NV = PFNGLUNIFORM1UI64NVPROC(glfwGetProcAddress("glUniform1ui64NV"));
  glUniform1ui64vARB = PFNGLUNIFORM1UI64VARBPROC(glfwGetProcAddress("glUniform1ui64vARB"));
  glUniform1ui64vNV = PFNGLUNIFORM1UI64VNVPROC(glfwGetProcAddress("glUniform1ui64vNV"));
  glUniform1uiEXT = PFNGLUNIFORM1UIEXTPROC(glfwGetProcAddress("glUniform1uiEXT"));
  glUniform1uiv = PFNGLUNIFORM1UIVPROC(glfwGetProcAddress("glUniform1uiv"));
  glUniform1uivEXT = PFNGLUNIFORM1UIVEXTPROC(glfwGetProcAddress("glUniform1uivEXT"));
  glUniform2d = PFNGLUNIFORM2DPROC(glfwGetProcAddress("glUniform2d"));
  glUniform2dv = PFNGLUNIFORM2DVPROC(glfwGetProcAddress("glUniform2dv"));
  glUniform2f = PFNGLUNIFORM2FPROC(glfwGetProcAddress("glUniform2f"));
  glUniform2fARB = PFNGLUNIFORM2FARBPROC(glfwGetProcAddress("glUniform2fARB"));
  glUniform2fv = PFNGLUNIFORM2FVPROC(glfwGetProcAddress("glUniform2fv"));
  glUniform2fvARB = PFNGLUNIFORM2FVARBPROC(glfwGetProcAddress("glUniform2fvARB"));
  glUniform2i = PFNGLUNIFORM2IPROC(glfwGetProcAddress("glUniform2i"));
  glUniform2i64ARB = PFNGLUNIFORM2I64ARBPROC(glfwGetProcAddress("glUniform2i64ARB"));
  glUniform2i64NV = PFNGLUNIFORM2I64NVPROC(glfwGetProcAddress("glUniform2i64NV"));
  glUniform2i64vARB = PFNGLUNIFORM2I64VARBPROC(glfwGetProcAddress("glUniform2i64vARB"));
  glUniform2i64vNV = PFNGLUNIFORM2I64VNVPROC(glfwGetProcAddress("glUniform2i64vNV"));
  glUniform2iARB = PFNGLUNIFORM2IARBPROC(glfwGetProcAddress("glUniform2iARB"));
  glUniform2iv = PFNGLUNIFORM2IVPROC(glfwGetProcAddress("glUniform2iv"));
  glUniform2ivARB = PFNGLUNIFORM2IVARBPROC(glfwGetProcAddress("glUniform2ivARB"));
  glUniform2ui = PFNGLUNIFORM2UIPROC(glfwGetProcAddress("glUniform2ui"));
  glUniform2ui64ARB = PFNGLUNIFORM2UI64ARBPROC(glfwGetProcAddress("glUniform2ui64ARB"));
  glUniform2ui64NV = PFNGLUNIFORM2UI64NVPROC(glfwGetProcAddress("glUniform2ui64NV"));
  glUniform2ui64vARB = PFNGLUNIFORM2UI64VARBPROC(glfwGetProcAddress("glUniform2ui64vARB"));
  glUniform2ui64vNV = PFNGLUNIFORM2UI64VNVPROC(glfwGetProcAddress("glUniform2ui64vNV"));
  glUniform2uiEXT = PFNGLUNIFORM2UIEXTPROC(glfwGetProcAddress("glUniform2uiEXT"));
  glUniform2uiv = PFNGLUNIFORM2UIVPROC(glfwGetProcAddress("glUniform2uiv"));
  glUniform2uivEXT = PFNGLUNIFORM2UIVEXTPROC(glfwGetProcAddress("glUniform2uivEXT"));
  glUniform3d = PFNGLUNIFORM3DPROC(glfwGetProcAddress("glUniform3d"));
  glUniform3dv = PFNGLUNIFORM3DVPROC(glfwGetProcAddress("glUniform3dv"));
  glUniform3f = PFNGLUNIFORM3FPROC(glfwGetProcAddress("glUniform3f"));
  glUniform3fARB = PFNGLUNIFORM3FARBPROC(glfwGetProcAddress("glUniform3fARB"));
  glUniform3fv = PFNGLUNIFORM3FVPROC(glfwGetProcAddress("glUniform3fv"));
  glUniform3fvARB = PFNGLUNIFORM3FVARBPROC(glfwGetProcAddress("glUniform3fvARB"));
  glUniform3i = PFNGLUNIFORM3IPROC(glfwGetProcAddress("glUniform3i"));
  glUniform3i64ARB = PFNGLUNIFORM3I64ARBPROC(glfwGetProcAddress("glUniform3i64ARB"));
  glUniform3i64NV = PFNGLUNIFORM3I64NVPROC(glfwGetProcAddress("glUniform3i64NV"));
  glUniform3i64vARB = PFNGLUNIFORM3I64VARBPROC(glfwGetProcAddress("glUniform3i64vARB"));
  glUniform3i64vNV = PFNGLUNIFORM3I64VNVPROC(glfwGetProcAddress("glUniform3i64vNV"));
  glUniform3iARB = PFNGLUNIFORM3IARBPROC(glfwGetProcAddress("glUniform3iARB"));
  glUniform3iv = PFNGLUNIFORM3IVPROC(glfwGetProcAddress("glUniform3iv"));
  glUniform3ivARB = PFNGLUNIFORM3IVARBPROC(glfwGetProcAddress("glUniform3ivARB"));
  glUniform3ui = PFNGLUNIFORM3UIPROC(glfwGetProcAddress("glUniform3ui"));
  glUniform3ui64ARB = PFNGLUNIFORM3UI64ARBPROC(glfwGetProcAddress("glUniform3ui64ARB"));
  glUniform3ui64NV = PFNGLUNIFORM3UI64NVPROC(glfwGetProcAddress("glUniform3ui64NV"));
  glUniform3ui64vARB = PFNGLUNIFORM3UI64VARBPROC(glfwGetProcAddress("glUniform3ui64vARB"));
  glUniform3ui64vNV = PFNGLUNIFORM3UI64VNVPROC(glfwGetProcAddress("glUniform3ui64vNV"));
  glUniform3uiEXT = PFNGLUNIFORM3UIEXTPROC(glfwGetProcAddress("glUniform3uiEXT"));
  glUniform3uiv = PFNGLUNIFORM3UIVPROC(glfwGetProcAddress("glUniform3uiv"));
  glUniform3uivEXT = PFNGLUNIFORM3UIVEXTPROC(glfwGetProcAddress("glUniform3uivEXT"));
  glUniform4d = PFNGLUNIFORM4DPROC(glfwGetProcAddress("glUniform4d"));
  glUniform4dv = PFNGLUNIFORM4DVPROC(glfwGetProcAddress("glUniform4dv"));
  glUniform4f = PFNGLUNIFORM4FPROC(glfwGetProcAddress("glUniform4f"));
  glUniform4fARB = PFNGLUNIFORM4FARBPROC(glfwGetProcAddress("glUniform4fARB"));
  glUniform4fv = PFNGLUNIFORM4FVPROC(glfwGetProcAddress("glUniform4fv"));
  glUniform4fvARB = PFNGLUNIFORM4FVARBPROC(glfwGetProcAddress("glUniform4fvARB"));
  glUniform4i = PFNGLUNIFORM4IPROC(glfwGetProcAddress("glUniform4i"));
  glUniform4i64ARB = PFNGLUNIFORM4I64ARBPROC(glfwGetProcAddress("glUniform4i64ARB"));
  glUniform4i64NV = PFNGLUNIFORM4I64NVPROC(glfwGetProcAddress("glUniform4i64NV"));
  glUniform4i64vARB = PFNGLUNIFORM4I64VARBPROC(glfwGetProcAddress("glUniform4i64vARB"));
  glUniform4i64vNV = PFNGLUNIFORM4I64VNVPROC(glfwGetProcAddress("glUniform4i64vNV"));
  glUniform4iARB = PFNGLUNIFORM4IARBPROC(glfwGetProcAddress("glUniform4iARB"));
  glUniform4iv = PFNGLUNIFORM4IVPROC(glfwGetProcAddress("glUniform4iv"));
  glUniform4ivARB = PFNGLUNIFORM4IVARBPROC(glfwGetProcAddress("glUniform4ivARB"));
  glUniform4ui = PFNGLUNIFORM4UIPROC(glfwGetProcAddress("glUniform4ui"));
  glUniform4ui64ARB = PFNGLUNIFORM4UI64ARBPROC(glfwGetProcAddress("glUniform4ui64ARB"));
  glUniform4ui64NV = PFNGLUNIFORM4UI64NVPROC(glfwGetProcAddress("glUniform4ui64NV"));
  glUniform4ui64vARB = PFNGLUNIFORM4UI64VARBPROC(glfwGetProcAddress("glUniform4ui64vARB"));
  glUniform4ui64vNV = PFNGLUNIFORM4UI64VNVPROC(glfwGetProcAddress("glUniform4ui64vNV"));
  glUniform4uiEXT = PFNGLUNIFORM4UIEXTPROC(glfwGetProcAddress("glUniform4uiEXT"));
  glUniform4uiv = PFNGLUNIFORM4UIVPROC(glfwGetProcAddress("glUniform4uiv"));
  glUniform4uivEXT = PFNGLUNIFORM4UIVEXTPROC(glfwGetProcAddress("glUniform4uivEXT"));
  glUniformBlockBinding = PFNGLUNIFORMBLOCKBINDINGPROC(glfwGetProcAddress("glUniformBlockBinding"));
  glUniformBufferEXT = PFNGLUNIFORMBUFFEREXTPROC(glfwGetProcAddress("glUniformBufferEXT"));
  glUniformHandleui64ARB = PFNGLUNIFORMHANDLEUI64ARBPROC(glfwGetProcAddress("glUniformHandleui64ARB"));
  glUniformHandleui64NV = PFNGLUNIFORMHANDLEUI64NVPROC(glfwGetProcAddress("glUniformHandleui64NV"));
  glUniformHandleui64vARB = PFNGLUNIFORMHANDLEUI64VARBPROC(glfwGetProcAddress("glUniformHandleui64vARB"));
  glUniformHandleui64vNV = PFNGLUNIFORMHANDLEUI64VNVPROC(glfwGetProcAddress("glUniformHandleui64vNV"));
  glUniformMatrix2dv = PFNGLUNIFORMMATRIX2DVPROC(glfwGetProcAddress("glUniformMatrix2dv"));
  glUniformMatrix2fv = PFNGLUNIFORMMATRIX2FVPROC(glfwGetProcAddress("glUniformMatrix2fv"));
  glUniformMatrix2fvARB = PFNGLUNIFORMMATRIX2FVARBPROC(glfwGetProcAddress("glUniformMatrix2fvARB"));
  glUniformMatrix2x3dv = PFNGLUNIFORMMATRIX2X3DVPROC(glfwGetProcAddress("glUniformMatrix2x3dv"));
  glUniformMatrix2x3fv = PFNGLUNIFORMMATRIX2X3FVPROC(glfwGetProcAddress("glUniformMatrix2x3fv"));
  glUniformMatrix2x4dv = PFNGLUNIFORMMATRIX2X4DVPROC(glfwGetProcAddress("glUniformMatrix2x4dv"));
  glUniformMatrix2x4fv = PFNGLUNIFORMMATRIX2X4FVPROC(glfwGetProcAddress("glUniformMatrix2x4fv"));
  glUniformMatrix3dv = PFNGLUNIFORMMATRIX3DVPROC(glfwGetProcAddress("glUniformMatrix3dv"));
  glUniformMatrix3fv = PFNGLUNIFORMMATRIX3FVPROC(glfwGetProcAddress("glUniformMatrix3fv"));
  glUniformMatrix3fvARB = PFNGLUNIFORMMATRIX3FVARBPROC(glfwGetProcAddress("glUniformMatrix3fvARB"));
  glUniformMatrix3x2dv = PFNGLUNIFORMMATRIX3X2DVPROC(glfwGetProcAddress("glUniformMatrix3x2dv"));
  glUniformMatrix3x2fv = PFNGLUNIFORMMATRIX3X2FVPROC(glfwGetProcAddress("glUniformMatrix3x2fv"));
  glUniformMatrix3x4dv = PFNGLUNIFORMMATRIX3X4DVPROC(glfwGetProcAddress("glUniformMatrix3x4dv"));
  glUniformMatrix3x4fv = PFNGLUNIFORMMATRIX3X4FVPROC(glfwGetProcAddress("glUniformMatrix3x4fv"));
  glUniformMatrix4dv = PFNGLUNIFORMMATRIX4DVPROC(glfwGetProcAddress("glUniformMatrix4dv"));
  glUniformMatrix4fv = PFNGLUNIFORMMATRIX4FVPROC(glfwGetProcAddress("glUniformMatrix4fv"));
  glUniformMatrix4fvARB = PFNGLUNIFORMMATRIX4FVARBPROC(glfwGetProcAddress("glUniformMatrix4fvARB"));
  glUniformMatrix4x2dv = PFNGLUNIFORMMATRIX4X2DVPROC(glfwGetProcAddress("glUniformMatrix4x2dv"));
  glUniformMatrix4x2fv = PFNGLUNIFORMMATRIX4X2FVPROC(glfwGetProcAddress("glUniformMatrix4x2fv"));
  glUniformMatrix4x3dv = PFNGLUNIFORMMATRIX4X3DVPROC(glfwGetProcAddress("glUniformMatrix4x3dv"));
  glUniformMatrix4x3fv = PFNGLUNIFORMMATRIX4X3FVPROC(glfwGetProcAddress("glUniformMatrix4x3fv"));
  glUniformSubroutinesuiv = PFNGLUNIFORMSUBROUTINESUIVPROC(glfwGetProcAddress("glUniformSubroutinesuiv"));
  glUniformui64NV = PFNGLUNIFORMUI64NVPROC(glfwGetProcAddress("glUniformui64NV"));
  glUniformui64vNV = PFNGLUNIFORMUI64VNVPROC(glfwGetProcAddress("glUniformui64vNV"));
  glUnlockArraysEXT = PFNGLUNLOCKARRAYSEXTPROC(glfwGetProcAddress("glUnlockArraysEXT"));
  glUnmapBuffer = PFNGLUNMAPBUFFERPROC(glfwGetProcAddress("glUnmapBuffer"));
  glUnmapBufferARB = PFNGLUNMAPBUFFERARBPROC(glfwGetProcAddress("glUnmapBufferARB"));
  glUnmapNamedBuffer = PFNGLUNMAPNAMEDBUFFERPROC(glfwGetProcAddress("glUnmapNamedBuffer"));
  glUnmapNamedBufferEXT = PFNGLUNMAPNAMEDBUFFEREXTPROC(glfwGetProcAddress("glUnmapNamedBufferEXT"));
  glUnmapObjectBufferATI = PFNGLUNMAPOBJECTBUFFERATIPROC(glfwGetProcAddress("glUnmapObjectBufferATI"));
  glUnmapTexture2DINTEL = PFNGLUNMAPTEXTURE2DINTELPROC(glfwGetProcAddress("glUnmapTexture2DINTEL"));
  glUpdateObjectBufferATI = PFNGLUPDATEOBJECTBUFFERATIPROC(glfwGetProcAddress("glUpdateObjectBufferATI"));
  glUseProgram = PFNGLUSEPROGRAMPROC(glfwGetProcAddress("glUseProgram"));
  glUseProgramObjectARB = PFNGLUSEPROGRAMOBJECTARBPROC(glfwGetProcAddress("glUseProgramObjectARB"));
  glUseProgramStages = PFNGLUSEPROGRAMSTAGESPROC(glfwGetProcAddress("glUseProgramStages"));
  glUseShaderProgramEXT = PFNGLUSESHADERPROGRAMEXTPROC(glfwGetProcAddress("glUseShaderProgramEXT"));
  glValidateProgram = PFNGLVALIDATEPROGRAMPROC(glfwGetProcAddress("glValidateProgram"));
  glValidateProgramARB = PFNGLVALIDATEPROGRAMARBPROC(glfwGetProcAddress("glValidateProgramARB"));
  glValidateProgramPipeline = PFNGLVALIDATEPROGRAMPIPELINEPROC(glfwGetProcAddress("glValidateProgramPipeline"));
  glVariantArrayObjectATI = PFNGLVARIANTARRAYOBJECTATIPROC(glfwGetProcAddress("glVariantArrayObjectATI"));
  glVariantbvEXT = PFNGLVARIANTBVEXTPROC(glfwGetProcAddress("glVariantbvEXT"));
  glVariantdvEXT = PFNGLVARIANTDVEXTPROC(glfwGetProcAddress("glVariantdvEXT"));
  glVariantfvEXT = PFNGLVARIANTFVEXTPROC(glfwGetProcAddress("glVariantfvEXT"));
  glVariantivEXT = PFNGLVARIANTIVEXTPROC(glfwGetProcAddress("glVariantivEXT"));
  glVariantPointerEXT = PFNGLVARIANTPOINTEREXTPROC(glfwGetProcAddress("glVariantPointerEXT"));
  glVariantsvEXT = PFNGLVARIANTSVEXTPROC(glfwGetProcAddress("glVariantsvEXT"));
  glVariantubvEXT = PFNGLVARIANTUBVEXTPROC(glfwGetProcAddress("glVariantubvEXT"));
  glVariantuivEXT = PFNGLVARIANTUIVEXTPROC(glfwGetProcAddress("glVariantuivEXT"));
  glVariantusvEXT = PFNGLVARIANTUSVEXTPROC(glfwGetProcAddress("glVariantusvEXT"));
  glVDPAUFiniNV = PFNGLVDPAUFININVPROC(glfwGetProcAddress("glVDPAUFiniNV"));
  glVDPAUGetSurfaceivNV = PFNGLVDPAUGETSURFACEIVNVPROC(glfwGetProcAddress("glVDPAUGetSurfaceivNV"));
  glVDPAUInitNV = PFNGLVDPAUINITNVPROC(glfwGetProcAddress("glVDPAUInitNV"));
  glVDPAUIsSurfaceNV = PFNGLVDPAUISSURFACENVPROC(glfwGetProcAddress("glVDPAUIsSurfaceNV"));
  glVDPAUMapSurfacesNV = PFNGLVDPAUMAPSURFACESNVPROC(glfwGetProcAddress("glVDPAUMapSurfacesNV"));
  glVDPAURegisterOutputSurfaceNV = PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC(glfwGetProcAddress("glVDPAURegisterOutputSurfaceNV"));
  glVDPAURegisterVideoSurfaceNV = PFNGLVDPAUREGISTERVIDEOSURFACENVPROC(glfwGetProcAddress("glVDPAURegisterVideoSurfaceNV"));
  glVDPAUSurfaceAccessNV = PFNGLVDPAUSURFACEACCESSNVPROC(glfwGetProcAddress("glVDPAUSurfaceAccessNV"));
  glVDPAUUnmapSurfacesNV = PFNGLVDPAUUNMAPSURFACESNVPROC(glfwGetProcAddress("glVDPAUUnmapSurfacesNV"));
  glVDPAUUnregisterSurfaceNV = PFNGLVDPAUUNREGISTERSURFACENVPROC(glfwGetProcAddress("glVDPAUUnregisterSurfaceNV"));
  glVertex2bOES = PFNGLVERTEX2BOESPROC(glfwGetProcAddress("glVertex2bOES"));
  glVertex2bvOES = PFNGLVERTEX2BVOESPROC(glfwGetProcAddress("glVertex2bvOES"));
  glVertex2hNV = PFNGLVERTEX2HNVPROC(glfwGetProcAddress("glVertex2hNV"));
  glVertex2hvNV = PFNGLVERTEX2HVNVPROC(glfwGetProcAddress("glVertex2hvNV"));
  glVertex2xOES = PFNGLVERTEX2XOESPROC(glfwGetProcAddress("glVertex2xOES"));
  glVertex2xvOES = PFNGLVERTEX2XVOESPROC(glfwGetProcAddress("glVertex2xvOES"));
  glVertex3bOES = PFNGLVERTEX3BOESPROC(glfwGetProcAddress("glVertex3bOES"));
  glVertex3bvOES = PFNGLVERTEX3BVOESPROC(glfwGetProcAddress("glVertex3bvOES"));
  glVertex3hNV = PFNGLVERTEX3HNVPROC(glfwGetProcAddress("glVertex3hNV"));
  glVertex3hvNV = PFNGLVERTEX3HVNVPROC(glfwGetProcAddress("glVertex3hvNV"));
  glVertex3xOES = PFNGLVERTEX3XOESPROC(glfwGetProcAddress("glVertex3xOES"));
  glVertex3xvOES = PFNGLVERTEX3XVOESPROC(glfwGetProcAddress("glVertex3xvOES"));
  glVertex4bOES = PFNGLVERTEX4BOESPROC(glfwGetProcAddress("glVertex4bOES"));
  glVertex4bvOES = PFNGLVERTEX4BVOESPROC(glfwGetProcAddress("glVertex4bvOES"));
  glVertex4hNV = PFNGLVERTEX4HNVPROC(glfwGetProcAddress("glVertex4hNV"));
  glVertex4hvNV = PFNGLVERTEX4HVNVPROC(glfwGetProcAddress("glVertex4hvNV"));
  glVertex4xOES = PFNGLVERTEX4XOESPROC(glfwGetProcAddress("glVertex4xOES"));
  glVertex4xvOES = PFNGLVERTEX4XVOESPROC(glfwGetProcAddress("glVertex4xvOES"));
  glVertexArrayAttribBinding = PFNGLVERTEXARRAYATTRIBBINDINGPROC(glfwGetProcAddress("glVertexArrayAttribBinding"));
  glVertexArrayAttribFormat = PFNGLVERTEXARRAYATTRIBFORMATPROC(glfwGetProcAddress("glVertexArrayAttribFormat"));
  glVertexArrayAttribIFormat = PFNGLVERTEXARRAYATTRIBIFORMATPROC(glfwGetProcAddress("glVertexArrayAttribIFormat"));
  glVertexArrayAttribLFormat = PFNGLVERTEXARRAYATTRIBLFORMATPROC(glfwGetProcAddress("glVertexArrayAttribLFormat"));
  glVertexArrayBindingDivisor = PFNGLVERTEXARRAYBINDINGDIVISORPROC(glfwGetProcAddress("glVertexArrayBindingDivisor"));
  glVertexArrayBindVertexBufferEXT = PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC(glfwGetProcAddress("glVertexArrayBindVertexBufferEXT"));
  glVertexArrayColorOffsetEXT = PFNGLVERTEXARRAYCOLOROFFSETEXTPROC(glfwGetProcAddress("glVertexArrayColorOffsetEXT"));
  glVertexArrayEdgeFlagOffsetEXT = PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayEdgeFlagOffsetEXT"));
  glVertexArrayElementBuffer = PFNGLVERTEXARRAYELEMENTBUFFERPROC(glfwGetProcAddress("glVertexArrayElementBuffer"));
  glVertexArrayFogCoordOffsetEXT = PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayFogCoordOffsetEXT"));
  glVertexArrayIndexOffsetEXT = PFNGLVERTEXARRAYINDEXOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayIndexOffsetEXT"));
  glVertexArrayMultiTexCoordOffsetEXT = PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayMultiTexCoordOffsetEXT"));
  glVertexArrayNormalOffsetEXT = PFNGLVERTEXARRAYNORMALOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayNormalOffsetEXT"));
  glVertexArrayParameteriAPPLE = PFNGLVERTEXARRAYPARAMETERIAPPLEPROC(glfwGetProcAddress("glVertexArrayParameteriAPPLE"));
  glVertexArrayRangeAPPLE = PFNGLVERTEXARRAYRANGEAPPLEPROC(glfwGetProcAddress("glVertexArrayRangeAPPLE"));
  glVertexArrayRangeNV = PFNGLVERTEXARRAYRANGENVPROC(glfwGetProcAddress("glVertexArrayRangeNV"));
  glVertexArraySecondaryColorOffsetEXT = PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC(glfwGetProcAddress("glVertexArraySecondaryColorOffsetEXT"));
  glVertexArrayTexCoordOffsetEXT = PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayTexCoordOffsetEXT"));
  glVertexArrayVertexAttribBindingEXT = PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribBindingEXT"));
  glVertexArrayVertexAttribDivisorEXT = PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribDivisorEXT"));
  glVertexArrayVertexAttribFormatEXT = PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribFormatEXT"));
  glVertexArrayVertexAttribIFormatEXT = PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribIFormatEXT"));
  glVertexArrayVertexAttribIOffsetEXT = PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribIOffsetEXT"));
  glVertexArrayVertexAttribLFormatEXT = PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribLFormatEXT"));
  glVertexArrayVertexAttribLOffsetEXT = PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribLOffsetEXT"));
  glVertexArrayVertexAttribOffsetEXT = PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayVertexAttribOffsetEXT"));
  glVertexArrayVertexBindingDivisorEXT = PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC(glfwGetProcAddress("glVertexArrayVertexBindingDivisorEXT"));
  glVertexArrayVertexBuffer = PFNGLVERTEXARRAYVERTEXBUFFERPROC(glfwGetProcAddress("glVertexArrayVertexBuffer"));
  glVertexArrayVertexBuffers = PFNGLVERTEXARRAYVERTEXBUFFERSPROC(glfwGetProcAddress("glVertexArrayVertexBuffers"));
  glVertexArrayVertexOffsetEXT = PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC(glfwGetProcAddress("glVertexArrayVertexOffsetEXT"));
  glVertexAttrib1d = PFNGLVERTEXATTRIB1DPROC(glfwGetProcAddress("glVertexAttrib1d"));
  glVertexAttrib1dARB = PFNGLVERTEXATTRIB1DARBPROC(glfwGetProcAddress("glVertexAttrib1dARB"));
  glVertexAttrib1dNV = PFNGLVERTEXATTRIB1DNVPROC(glfwGetProcAddress("glVertexAttrib1dNV"));
  glVertexAttrib1dv = PFNGLVERTEXATTRIB1DVPROC(glfwGetProcAddress("glVertexAttrib1dv"));
  glVertexAttrib1dvARB = PFNGLVERTEXATTRIB1DVARBPROC(glfwGetProcAddress("glVertexAttrib1dvARB"));
  glVertexAttrib1dvNV = PFNGLVERTEXATTRIB1DVNVPROC(glfwGetProcAddress("glVertexAttrib1dvNV"));
  glVertexAttrib1f = PFNGLVERTEXATTRIB1FPROC(glfwGetProcAddress("glVertexAttrib1f"));
  glVertexAttrib1fARB = PFNGLVERTEXATTRIB1FARBPROC(glfwGetProcAddress("glVertexAttrib1fARB"));
  glVertexAttrib1fNV = PFNGLVERTEXATTRIB1FNVPROC(glfwGetProcAddress("glVertexAttrib1fNV"));
  glVertexAttrib1fv = PFNGLVERTEXATTRIB1FVPROC(glfwGetProcAddress("glVertexAttrib1fv"));
  glVertexAttrib1fvARB = PFNGLVERTEXATTRIB1FVARBPROC(glfwGetProcAddress("glVertexAttrib1fvARB"));
  glVertexAttrib1fvNV = PFNGLVERTEXATTRIB1FVNVPROC(glfwGetProcAddress("glVertexAttrib1fvNV"));
  glVertexAttrib1hNV = PFNGLVERTEXATTRIB1HNVPROC(glfwGetProcAddress("glVertexAttrib1hNV"));
  glVertexAttrib1hvNV = PFNGLVERTEXATTRIB1HVNVPROC(glfwGetProcAddress("glVertexAttrib1hvNV"));
  glVertexAttrib1s = PFNGLVERTEXATTRIB1SPROC(glfwGetProcAddress("glVertexAttrib1s"));
  glVertexAttrib1sARB = PFNGLVERTEXATTRIB1SARBPROC(glfwGetProcAddress("glVertexAttrib1sARB"));
  glVertexAttrib1sNV = PFNGLVERTEXATTRIB1SNVPROC(glfwGetProcAddress("glVertexAttrib1sNV"));
  glVertexAttrib1sv = PFNGLVERTEXATTRIB1SVPROC(glfwGetProcAddress("glVertexAttrib1sv"));
  glVertexAttrib1svARB = PFNGLVERTEXATTRIB1SVARBPROC(glfwGetProcAddress("glVertexAttrib1svARB"));
  glVertexAttrib1svNV = PFNGLVERTEXATTRIB1SVNVPROC(glfwGetProcAddress("glVertexAttrib1svNV"));
  glVertexAttrib2d = PFNGLVERTEXATTRIB2DPROC(glfwGetProcAddress("glVertexAttrib2d"));
  glVertexAttrib2dARB = PFNGLVERTEXATTRIB2DARBPROC(glfwGetProcAddress("glVertexAttrib2dARB"));
  glVertexAttrib2dNV = PFNGLVERTEXATTRIB2DNVPROC(glfwGetProcAddress("glVertexAttrib2dNV"));
  glVertexAttrib2dv = PFNGLVERTEXATTRIB2DVPROC(glfwGetProcAddress("glVertexAttrib2dv"));
  glVertexAttrib2dvARB = PFNGLVERTEXATTRIB2DVARBPROC(glfwGetProcAddress("glVertexAttrib2dvARB"));
  glVertexAttrib2dvNV = PFNGLVERTEXATTRIB2DVNVPROC(glfwGetProcAddress("glVertexAttrib2dvNV"));
  glVertexAttrib2f = PFNGLVERTEXATTRIB2FPROC(glfwGetProcAddress("glVertexAttrib2f"));
  glVertexAttrib2fARB = PFNGLVERTEXATTRIB2FARBPROC(glfwGetProcAddress("glVertexAttrib2fARB"));
  glVertexAttrib2fNV = PFNGLVERTEXATTRIB2FNVPROC(glfwGetProcAddress("glVertexAttrib2fNV"));
  glVertexAttrib2fv = PFNGLVERTEXATTRIB2FVPROC(glfwGetProcAddress("glVertexAttrib2fv"));
  glVertexAttrib2fvARB = PFNGLVERTEXATTRIB2FVARBPROC(glfwGetProcAddress("glVertexAttrib2fvARB"));
  glVertexAttrib2fvNV = PFNGLVERTEXATTRIB2FVNVPROC(glfwGetProcAddress("glVertexAttrib2fvNV"));
  glVertexAttrib2hNV = PFNGLVERTEXATTRIB2HNVPROC(glfwGetProcAddress("glVertexAttrib2hNV"));
  glVertexAttrib2hvNV = PFNGLVERTEXATTRIB2HVNVPROC(glfwGetProcAddress("glVertexAttrib2hvNV"));
  glVertexAttrib2s = PFNGLVERTEXATTRIB2SPROC(glfwGetProcAddress("glVertexAttrib2s"));
  glVertexAttrib2sARB = PFNGLVERTEXATTRIB2SARBPROC(glfwGetProcAddress("glVertexAttrib2sARB"));
  glVertexAttrib2sNV = PFNGLVERTEXATTRIB2SNVPROC(glfwGetProcAddress("glVertexAttrib2sNV"));
  glVertexAttrib2sv = PFNGLVERTEXATTRIB2SVPROC(glfwGetProcAddress("glVertexAttrib2sv"));
  glVertexAttrib2svARB = PFNGLVERTEXATTRIB2SVARBPROC(glfwGetProcAddress("glVertexAttrib2svARB"));
  glVertexAttrib2svNV = PFNGLVERTEXATTRIB2SVNVPROC(glfwGetProcAddress("glVertexAttrib2svNV"));
  glVertexAttrib3d = PFNGLVERTEXATTRIB3DPROC(glfwGetProcAddress("glVertexAttrib3d"));
  glVertexAttrib3dARB = PFNGLVERTEXATTRIB3DARBPROC(glfwGetProcAddress("glVertexAttrib3dARB"));
  glVertexAttrib3dNV = PFNGLVERTEXATTRIB3DNVPROC(glfwGetProcAddress("glVertexAttrib3dNV"));
  glVertexAttrib3dv = PFNGLVERTEXATTRIB3DVPROC(glfwGetProcAddress("glVertexAttrib3dv"));
  glVertexAttrib3dvARB = PFNGLVERTEXATTRIB3DVARBPROC(glfwGetProcAddress("glVertexAttrib3dvARB"));
  glVertexAttrib3dvNV = PFNGLVERTEXATTRIB3DVNVPROC(glfwGetProcAddress("glVertexAttrib3dvNV"));
  glVertexAttrib3f = PFNGLVERTEXATTRIB3FPROC(glfwGetProcAddress("glVertexAttrib3f"));
  glVertexAttrib3fARB = PFNGLVERTEXATTRIB3FARBPROC(glfwGetProcAddress("glVertexAttrib3fARB"));
  glVertexAttrib3fNV = PFNGLVERTEXATTRIB3FNVPROC(glfwGetProcAddress("glVertexAttrib3fNV"));
  glVertexAttrib3fv = PFNGLVERTEXATTRIB3FVPROC(glfwGetProcAddress("glVertexAttrib3fv"));
  glVertexAttrib3fvARB = PFNGLVERTEXATTRIB3FVARBPROC(glfwGetProcAddress("glVertexAttrib3fvARB"));
  glVertexAttrib3fvNV = PFNGLVERTEXATTRIB3FVNVPROC(glfwGetProcAddress("glVertexAttrib3fvNV"));
  glVertexAttrib3hNV = PFNGLVERTEXATTRIB3HNVPROC(glfwGetProcAddress("glVertexAttrib3hNV"));
  glVertexAttrib3hvNV = PFNGLVERTEXATTRIB3HVNVPROC(glfwGetProcAddress("glVertexAttrib3hvNV"));
  glVertexAttrib3s = PFNGLVERTEXATTRIB3SPROC(glfwGetProcAddress("glVertexAttrib3s"));
  glVertexAttrib3sARB = PFNGLVERTEXATTRIB3SARBPROC(glfwGetProcAddress("glVertexAttrib3sARB"));
  glVertexAttrib3sNV = PFNGLVERTEXATTRIB3SNVPROC(glfwGetProcAddress("glVertexAttrib3sNV"));
  glVertexAttrib3sv = PFNGLVERTEXATTRIB3SVPROC(glfwGetProcAddress("glVertexAttrib3sv"));
  glVertexAttrib3svARB = PFNGLVERTEXATTRIB3SVARBPROC(glfwGetProcAddress("glVertexAttrib3svARB"));
  glVertexAttrib3svNV = PFNGLVERTEXATTRIB3SVNVPROC(glfwGetProcAddress("glVertexAttrib3svNV"));
  glVertexAttrib4bv = PFNGLVERTEXATTRIB4BVPROC(glfwGetProcAddress("glVertexAttrib4bv"));
  glVertexAttrib4bvARB = PFNGLVERTEXATTRIB4BVARBPROC(glfwGetProcAddress("glVertexAttrib4bvARB"));
  glVertexAttrib4d = PFNGLVERTEXATTRIB4DPROC(glfwGetProcAddress("glVertexAttrib4d"));
  glVertexAttrib4dARB = PFNGLVERTEXATTRIB4DARBPROC(glfwGetProcAddress("glVertexAttrib4dARB"));
  glVertexAttrib4dNV = PFNGLVERTEXATTRIB4DNVPROC(glfwGetProcAddress("glVertexAttrib4dNV"));
  glVertexAttrib4dv = PFNGLVERTEXATTRIB4DVPROC(glfwGetProcAddress("glVertexAttrib4dv"));
  glVertexAttrib4dvARB = PFNGLVERTEXATTRIB4DVARBPROC(glfwGetProcAddress("glVertexAttrib4dvARB"));
  glVertexAttrib4dvNV = PFNGLVERTEXATTRIB4DVNVPROC(glfwGetProcAddress("glVertexAttrib4dvNV"));
  glVertexAttrib4f = PFNGLVERTEXATTRIB4FPROC(glfwGetProcAddress("glVertexAttrib4f"));
  glVertexAttrib4fARB = PFNGLVERTEXATTRIB4FARBPROC(glfwGetProcAddress("glVertexAttrib4fARB"));
  glVertexAttrib4fNV = PFNGLVERTEXATTRIB4FNVPROC(glfwGetProcAddress("glVertexAttrib4fNV"));
  glVertexAttrib4fv = PFNGLVERTEXATTRIB4FVPROC(glfwGetProcAddress("glVertexAttrib4fv"));
  glVertexAttrib4fvARB = PFNGLVERTEXATTRIB4FVARBPROC(glfwGetProcAddress("glVertexAttrib4fvARB"));
  glVertexAttrib4fvNV = PFNGLVERTEXATTRIB4FVNVPROC(glfwGetProcAddress("glVertexAttrib4fvNV"));
  glVertexAttrib4hNV = PFNGLVERTEXATTRIB4HNVPROC(glfwGetProcAddress("glVertexAttrib4hNV"));
  glVertexAttrib4hvNV = PFNGLVERTEXATTRIB4HVNVPROC(glfwGetProcAddress("glVertexAttrib4hvNV"));
  glVertexAttrib4iv = PFNGLVERTEXATTRIB4IVPROC(glfwGetProcAddress("glVertexAttrib4iv"));
  glVertexAttrib4ivARB = PFNGLVERTEXATTRIB4IVARBPROC(glfwGetProcAddress("glVertexAttrib4ivARB"));
  glVertexAttrib4Nbv = PFNGLVERTEXATTRIB4NBVPROC(glfwGetProcAddress("glVertexAttrib4Nbv"));
  glVertexAttrib4NbvARB = PFNGLVERTEXATTRIB4NBVARBPROC(glfwGetProcAddress("glVertexAttrib4NbvARB"));
  glVertexAttrib4Niv = PFNGLVERTEXATTRIB4NIVPROC(glfwGetProcAddress("glVertexAttrib4Niv"));
  glVertexAttrib4NivARB = PFNGLVERTEXATTRIB4NIVARBPROC(glfwGetProcAddress("glVertexAttrib4NivARB"));
  glVertexAttrib4Nsv = PFNGLVERTEXATTRIB4NSVPROC(glfwGetProcAddress("glVertexAttrib4Nsv"));
  glVertexAttrib4NsvARB = PFNGLVERTEXATTRIB4NSVARBPROC(glfwGetProcAddress("glVertexAttrib4NsvARB"));
  glVertexAttrib4Nub = PFNGLVERTEXATTRIB4NUBPROC(glfwGetProcAddress("glVertexAttrib4Nub"));
  glVertexAttrib4NubARB = PFNGLVERTEXATTRIB4NUBARBPROC(glfwGetProcAddress("glVertexAttrib4NubARB"));
  glVertexAttrib4Nubv = PFNGLVERTEXATTRIB4NUBVPROC(glfwGetProcAddress("glVertexAttrib4Nubv"));
  glVertexAttrib4NubvARB = PFNGLVERTEXATTRIB4NUBVARBPROC(glfwGetProcAddress("glVertexAttrib4NubvARB"));
  glVertexAttrib4Nuiv = PFNGLVERTEXATTRIB4NUIVPROC(glfwGetProcAddress("glVertexAttrib4Nuiv"));
  glVertexAttrib4NuivARB = PFNGLVERTEXATTRIB4NUIVARBPROC(glfwGetProcAddress("glVertexAttrib4NuivARB"));
  glVertexAttrib4Nusv = PFNGLVERTEXATTRIB4NUSVPROC(glfwGetProcAddress("glVertexAttrib4Nusv"));
  glVertexAttrib4NusvARB = PFNGLVERTEXATTRIB4NUSVARBPROC(glfwGetProcAddress("glVertexAttrib4NusvARB"));
  glVertexAttrib4s = PFNGLVERTEXATTRIB4SPROC(glfwGetProcAddress("glVertexAttrib4s"));
  glVertexAttrib4sARB = PFNGLVERTEXATTRIB4SARBPROC(glfwGetProcAddress("glVertexAttrib4sARB"));
  glVertexAttrib4sNV = PFNGLVERTEXATTRIB4SNVPROC(glfwGetProcAddress("glVertexAttrib4sNV"));
  glVertexAttrib4sv = PFNGLVERTEXATTRIB4SVPROC(glfwGetProcAddress("glVertexAttrib4sv"));
  glVertexAttrib4svARB = PFNGLVERTEXATTRIB4SVARBPROC(glfwGetProcAddress("glVertexAttrib4svARB"));
  glVertexAttrib4svNV = PFNGLVERTEXATTRIB4SVNVPROC(glfwGetProcAddress("glVertexAttrib4svNV"));
  glVertexAttrib4ubNV = PFNGLVERTEXATTRIB4UBNVPROC(glfwGetProcAddress("glVertexAttrib4ubNV"));
  glVertexAttrib4ubv = PFNGLVERTEXATTRIB4UBVPROC(glfwGetProcAddress("glVertexAttrib4ubv"));
  glVertexAttrib4ubvARB = PFNGLVERTEXATTRIB4UBVARBPROC(glfwGetProcAddress("glVertexAttrib4ubvARB"));
  glVertexAttrib4ubvNV = PFNGLVERTEXATTRIB4UBVNVPROC(glfwGetProcAddress("glVertexAttrib4ubvNV"));
  glVertexAttrib4uiv = PFNGLVERTEXATTRIB4UIVPROC(glfwGetProcAddress("glVertexAttrib4uiv"));
  glVertexAttrib4uivARB = PFNGLVERTEXATTRIB4UIVARBPROC(glfwGetProcAddress("glVertexAttrib4uivARB"));
  glVertexAttrib4usv = PFNGLVERTEXATTRIB4USVPROC(glfwGetProcAddress("glVertexAttrib4usv"));
  glVertexAttrib4usvARB = PFNGLVERTEXATTRIB4USVARBPROC(glfwGetProcAddress("glVertexAttrib4usvARB"));
  glVertexAttribArrayObjectATI = PFNGLVERTEXATTRIBARRAYOBJECTATIPROC(glfwGetProcAddress("glVertexAttribArrayObjectATI"));
  glVertexAttribBinding = PFNGLVERTEXATTRIBBINDINGPROC(glfwGetProcAddress("glVertexAttribBinding"));
  glVertexAttribDivisor = PFNGLVERTEXATTRIBDIVISORPROC(glfwGetProcAddress("glVertexAttribDivisor"));
  glVertexAttribDivisorARB = PFNGLVERTEXATTRIBDIVISORARBPROC(glfwGetProcAddress("glVertexAttribDivisorARB"));
  glVertexAttribFormat = PFNGLVERTEXATTRIBFORMATPROC(glfwGetProcAddress("glVertexAttribFormat"));
  glVertexAttribFormatNV = PFNGLVERTEXATTRIBFORMATNVPROC(glfwGetProcAddress("glVertexAttribFormatNV"));
  glVertexAttribI1i = PFNGLVERTEXATTRIBI1IPROC(glfwGetProcAddress("glVertexAttribI1i"));
  glVertexAttribI1iEXT = PFNGLVERTEXATTRIBI1IEXTPROC(glfwGetProcAddress("glVertexAttribI1iEXT"));
  glVertexAttribI1iv = PFNGLVERTEXATTRIBI1IVPROC(glfwGetProcAddress("glVertexAttribI1iv"));
  glVertexAttribI1ivEXT = PFNGLVERTEXATTRIBI1IVEXTPROC(glfwGetProcAddress("glVertexAttribI1ivEXT"));
  glVertexAttribI1ui = PFNGLVERTEXATTRIBI1UIPROC(glfwGetProcAddress("glVertexAttribI1ui"));
  glVertexAttribI1uiEXT = PFNGLVERTEXATTRIBI1UIEXTPROC(glfwGetProcAddress("glVertexAttribI1uiEXT"));
  glVertexAttribI1uiv = PFNGLVERTEXATTRIBI1UIVPROC(glfwGetProcAddress("glVertexAttribI1uiv"));
  glVertexAttribI1uivEXT = PFNGLVERTEXATTRIBI1UIVEXTPROC(glfwGetProcAddress("glVertexAttribI1uivEXT"));
  glVertexAttribI2i = PFNGLVERTEXATTRIBI2IPROC(glfwGetProcAddress("glVertexAttribI2i"));
  glVertexAttribI2iEXT = PFNGLVERTEXATTRIBI2IEXTPROC(glfwGetProcAddress("glVertexAttribI2iEXT"));
  glVertexAttribI2iv = PFNGLVERTEXATTRIBI2IVPROC(glfwGetProcAddress("glVertexAttribI2iv"));
  glVertexAttribI2ivEXT = PFNGLVERTEXATTRIBI2IVEXTPROC(glfwGetProcAddress("glVertexAttribI2ivEXT"));
  glVertexAttribI2ui = PFNGLVERTEXATTRIBI2UIPROC(glfwGetProcAddress("glVertexAttribI2ui"));
  glVertexAttribI2uiEXT = PFNGLVERTEXATTRIBI2UIEXTPROC(glfwGetProcAddress("glVertexAttribI2uiEXT"));
  glVertexAttribI2uiv = PFNGLVERTEXATTRIBI2UIVPROC(glfwGetProcAddress("glVertexAttribI2uiv"));
  glVertexAttribI2uivEXT = PFNGLVERTEXATTRIBI2UIVEXTPROC(glfwGetProcAddress("glVertexAttribI2uivEXT"));
  glVertexAttribI3i = PFNGLVERTEXATTRIBI3IPROC(glfwGetProcAddress("glVertexAttribI3i"));
  glVertexAttribI3iEXT = PFNGLVERTEXATTRIBI3IEXTPROC(glfwGetProcAddress("glVertexAttribI3iEXT"));
  glVertexAttribI3iv = PFNGLVERTEXATTRIBI3IVPROC(glfwGetProcAddress("glVertexAttribI3iv"));
  glVertexAttribI3ivEXT = PFNGLVERTEXATTRIBI3IVEXTPROC(glfwGetProcAddress("glVertexAttribI3ivEXT"));
  glVertexAttribI3ui = PFNGLVERTEXATTRIBI3UIPROC(glfwGetProcAddress("glVertexAttribI3ui"));
  glVertexAttribI3uiEXT = PFNGLVERTEXATTRIBI3UIEXTPROC(glfwGetProcAddress("glVertexAttribI3uiEXT"));
  glVertexAttribI3uiv = PFNGLVERTEXATTRIBI3UIVPROC(glfwGetProcAddress("glVertexAttribI3uiv"));
  glVertexAttribI3uivEXT = PFNGLVERTEXATTRIBI3UIVEXTPROC(glfwGetProcAddress("glVertexAttribI3uivEXT"));
  glVertexAttribI4bv = PFNGLVERTEXATTRIBI4BVPROC(glfwGetProcAddress("glVertexAttribI4bv"));
  glVertexAttribI4bvEXT = PFNGLVERTEXATTRIBI4BVEXTPROC(glfwGetProcAddress("glVertexAttribI4bvEXT"));
  glVertexAttribI4i = PFNGLVERTEXATTRIBI4IPROC(glfwGetProcAddress("glVertexAttribI4i"));
  glVertexAttribI4iEXT = PFNGLVERTEXATTRIBI4IEXTPROC(glfwGetProcAddress("glVertexAttribI4iEXT"));
  glVertexAttribI4iv = PFNGLVERTEXATTRIBI4IVPROC(glfwGetProcAddress("glVertexAttribI4iv"));
  glVertexAttribI4ivEXT = PFNGLVERTEXATTRIBI4IVEXTPROC(glfwGetProcAddress("glVertexAttribI4ivEXT"));
  glVertexAttribI4sv = PFNGLVERTEXATTRIBI4SVPROC(glfwGetProcAddress("glVertexAttribI4sv"));
  glVertexAttribI4svEXT = PFNGLVERTEXATTRIBI4SVEXTPROC(glfwGetProcAddress("glVertexAttribI4svEXT"));
  glVertexAttribI4ubv = PFNGLVERTEXATTRIBI4UBVPROC(glfwGetProcAddress("glVertexAttribI4ubv"));
  glVertexAttribI4ubvEXT = PFNGLVERTEXATTRIBI4UBVEXTPROC(glfwGetProcAddress("glVertexAttribI4ubvEXT"));
  glVertexAttribI4ui = PFNGLVERTEXATTRIBI4UIPROC(glfwGetProcAddress("glVertexAttribI4ui"));
  glVertexAttribI4uiEXT = PFNGLVERTEXATTRIBI4UIEXTPROC(glfwGetProcAddress("glVertexAttribI4uiEXT"));
  glVertexAttribI4uiv = PFNGLVERTEXATTRIBI4UIVPROC(glfwGetProcAddress("glVertexAttribI4uiv"));
  glVertexAttribI4uivEXT = PFNGLVERTEXATTRIBI4UIVEXTPROC(glfwGetProcAddress("glVertexAttribI4uivEXT"));
  glVertexAttribI4usv = PFNGLVERTEXATTRIBI4USVPROC(glfwGetProcAddress("glVertexAttribI4usv"));
  glVertexAttribI4usvEXT = PFNGLVERTEXATTRIBI4USVEXTPROC(glfwGetProcAddress("glVertexAttribI4usvEXT"));
  glVertexAttribIFormat = PFNGLVERTEXATTRIBIFORMATPROC(glfwGetProcAddress("glVertexAttribIFormat"));
  glVertexAttribIFormatNV = PFNGLVERTEXATTRIBIFORMATNVPROC(glfwGetProcAddress("glVertexAttribIFormatNV"));
  glVertexAttribIPointer = PFNGLVERTEXATTRIBIPOINTERPROC(glfwGetProcAddress("glVertexAttribIPointer"));
  glVertexAttribIPointerEXT = PFNGLVERTEXATTRIBIPOINTEREXTPROC(glfwGetProcAddress("glVertexAttribIPointerEXT"));
  glVertexAttribL1d = PFNGLVERTEXATTRIBL1DPROC(glfwGetProcAddress("glVertexAttribL1d"));
  glVertexAttribL1dEXT = PFNGLVERTEXATTRIBL1DEXTPROC(glfwGetProcAddress("glVertexAttribL1dEXT"));
  glVertexAttribL1dv = PFNGLVERTEXATTRIBL1DVPROC(glfwGetProcAddress("glVertexAttribL1dv"));
  glVertexAttribL1dvEXT = PFNGLVERTEXATTRIBL1DVEXTPROC(glfwGetProcAddress("glVertexAttribL1dvEXT"));
  glVertexAttribL1i64NV = PFNGLVERTEXATTRIBL1I64NVPROC(glfwGetProcAddress("glVertexAttribL1i64NV"));
  glVertexAttribL1i64vNV = PFNGLVERTEXATTRIBL1I64VNVPROC(glfwGetProcAddress("glVertexAttribL1i64vNV"));
  glVertexAttribL1ui64ARB = PFNGLVERTEXATTRIBL1UI64ARBPROC(glfwGetProcAddress("glVertexAttribL1ui64ARB"));
  glVertexAttribL1ui64NV = PFNGLVERTEXATTRIBL1UI64NVPROC(glfwGetProcAddress("glVertexAttribL1ui64NV"));
  glVertexAttribL1ui64vARB = PFNGLVERTEXATTRIBL1UI64VARBPROC(glfwGetProcAddress("glVertexAttribL1ui64vARB"));
  glVertexAttribL1ui64vNV = PFNGLVERTEXATTRIBL1UI64VNVPROC(glfwGetProcAddress("glVertexAttribL1ui64vNV"));
  glVertexAttribL2d = PFNGLVERTEXATTRIBL2DPROC(glfwGetProcAddress("glVertexAttribL2d"));
  glVertexAttribL2dEXT = PFNGLVERTEXATTRIBL2DEXTPROC(glfwGetProcAddress("glVertexAttribL2dEXT"));
  glVertexAttribL2dv = PFNGLVERTEXATTRIBL2DVPROC(glfwGetProcAddress("glVertexAttribL2dv"));
  glVertexAttribL2dvEXT = PFNGLVERTEXATTRIBL2DVEXTPROC(glfwGetProcAddress("glVertexAttribL2dvEXT"));
  glVertexAttribL2i64NV = PFNGLVERTEXATTRIBL2I64NVPROC(glfwGetProcAddress("glVertexAttribL2i64NV"));
  glVertexAttribL2i64vNV = PFNGLVERTEXATTRIBL2I64VNVPROC(glfwGetProcAddress("glVertexAttribL2i64vNV"));
  glVertexAttribL2ui64NV = PFNGLVERTEXATTRIBL2UI64NVPROC(glfwGetProcAddress("glVertexAttribL2ui64NV"));
  glVertexAttribL2ui64vNV = PFNGLVERTEXATTRIBL2UI64VNVPROC(glfwGetProcAddress("glVertexAttribL2ui64vNV"));
  glVertexAttribL3d = PFNGLVERTEXATTRIBL3DPROC(glfwGetProcAddress("glVertexAttribL3d"));
  glVertexAttribL3dEXT = PFNGLVERTEXATTRIBL3DEXTPROC(glfwGetProcAddress("glVertexAttribL3dEXT"));
  glVertexAttribL3dv = PFNGLVERTEXATTRIBL3DVPROC(glfwGetProcAddress("glVertexAttribL3dv"));
  glVertexAttribL3dvEXT = PFNGLVERTEXATTRIBL3DVEXTPROC(glfwGetProcAddress("glVertexAttribL3dvEXT"));
  glVertexAttribL3i64NV = PFNGLVERTEXATTRIBL3I64NVPROC(glfwGetProcAddress("glVertexAttribL3i64NV"));
  glVertexAttribL3i64vNV = PFNGLVERTEXATTRIBL3I64VNVPROC(glfwGetProcAddress("glVertexAttribL3i64vNV"));
  glVertexAttribL3ui64NV = PFNGLVERTEXATTRIBL3UI64NVPROC(glfwGetProcAddress("glVertexAttribL3ui64NV"));
  glVertexAttribL3ui64vNV = PFNGLVERTEXATTRIBL3UI64VNVPROC(glfwGetProcAddress("glVertexAttribL3ui64vNV"));
  glVertexAttribL4d = PFNGLVERTEXATTRIBL4DPROC(glfwGetProcAddress("glVertexAttribL4d"));
  glVertexAttribL4dEXT = PFNGLVERTEXATTRIBL4DEXTPROC(glfwGetProcAddress("glVertexAttribL4dEXT"));
  glVertexAttribL4dv = PFNGLVERTEXATTRIBL4DVPROC(glfwGetProcAddress("glVertexAttribL4dv"));
  glVertexAttribL4dvEXT = PFNGLVERTEXATTRIBL4DVEXTPROC(glfwGetProcAddress("glVertexAttribL4dvEXT"));
  glVertexAttribL4i64NV = PFNGLVERTEXATTRIBL4I64NVPROC(glfwGetProcAddress("glVertexAttribL4i64NV"));
  glVertexAttribL4i64vNV = PFNGLVERTEXATTRIBL4I64VNVPROC(glfwGetProcAddress("glVertexAttribL4i64vNV"));
  glVertexAttribL4ui64NV = PFNGLVERTEXATTRIBL4UI64NVPROC(glfwGetProcAddress("glVertexAttribL4ui64NV"));
  glVertexAttribL4ui64vNV = PFNGLVERTEXATTRIBL4UI64VNVPROC(glfwGetProcAddress("glVertexAttribL4ui64vNV"));
  glVertexAttribLFormat = PFNGLVERTEXATTRIBLFORMATPROC(glfwGetProcAddress("glVertexAttribLFormat"));
  glVertexAttribLFormatNV = PFNGLVERTEXATTRIBLFORMATNVPROC(glfwGetProcAddress("glVertexAttribLFormatNV"));
  glVertexAttribLPointer = PFNGLVERTEXATTRIBLPOINTERPROC(glfwGetProcAddress("glVertexAttribLPointer"));
  glVertexAttribLPointerEXT = PFNGLVERTEXATTRIBLPOINTEREXTPROC(glfwGetProcAddress("glVertexAttribLPointerEXT"));
  glVertexAttribP1ui = PFNGLVERTEXATTRIBP1UIPROC(glfwGetProcAddress("glVertexAttribP1ui"));
  glVertexAttribP1uiv = PFNGLVERTEXATTRIBP1UIVPROC(glfwGetProcAddress("glVertexAttribP1uiv"));
  glVertexAttribP2ui = PFNGLVERTEXATTRIBP2UIPROC(glfwGetProcAddress("glVertexAttribP2ui"));
  glVertexAttribP2uiv = PFNGLVERTEXATTRIBP2UIVPROC(glfwGetProcAddress("glVertexAttribP2uiv"));
  glVertexAttribP3ui = PFNGLVERTEXATTRIBP3UIPROC(glfwGetProcAddress("glVertexAttribP3ui"));
  glVertexAttribP3uiv = PFNGLVERTEXATTRIBP3UIVPROC(glfwGetProcAddress("glVertexAttribP3uiv"));
  glVertexAttribP4ui = PFNGLVERTEXATTRIBP4UIPROC(glfwGetProcAddress("glVertexAttribP4ui"));
  glVertexAttribP4uiv = PFNGLVERTEXATTRIBP4UIVPROC(glfwGetProcAddress("glVertexAttribP4uiv"));
  glVertexAttribParameteriAMD = PFNGLVERTEXATTRIBPARAMETERIAMDPROC(glfwGetProcAddress("glVertexAttribParameteriAMD"));
  glVertexAttribPointer = PFNGLVERTEXATTRIBPOINTERPROC(glfwGetProcAddress("glVertexAttribPointer"));
  glVertexAttribPointerARB = PFNGLVERTEXATTRIBPOINTERARBPROC(glfwGetProcAddress("glVertexAttribPointerARB"));
  glVertexAttribPointerNV = PFNGLVERTEXATTRIBPOINTERNVPROC(glfwGetProcAddress("glVertexAttribPointerNV"));
  glVertexAttribs1dvNV = PFNGLVERTEXATTRIBS1DVNVPROC(glfwGetProcAddress("glVertexAttribs1dvNV"));
  glVertexAttribs1fvNV = PFNGLVERTEXATTRIBS1FVNVPROC(glfwGetProcAddress("glVertexAttribs1fvNV"));
  glVertexAttribs1hvNV = PFNGLVERTEXATTRIBS1HVNVPROC(glfwGetProcAddress("glVertexAttribs1hvNV"));
  glVertexAttribs1svNV = PFNGLVERTEXATTRIBS1SVNVPROC(glfwGetProcAddress("glVertexAttribs1svNV"));
  glVertexAttribs2dvNV = PFNGLVERTEXATTRIBS2DVNVPROC(glfwGetProcAddress("glVertexAttribs2dvNV"));
  glVertexAttribs2fvNV = PFNGLVERTEXATTRIBS2FVNVPROC(glfwGetProcAddress("glVertexAttribs2fvNV"));
  glVertexAttribs2hvNV = PFNGLVERTEXATTRIBS2HVNVPROC(glfwGetProcAddress("glVertexAttribs2hvNV"));
  glVertexAttribs2svNV = PFNGLVERTEXATTRIBS2SVNVPROC(glfwGetProcAddress("glVertexAttribs2svNV"));
  glVertexAttribs3dvNV = PFNGLVERTEXATTRIBS3DVNVPROC(glfwGetProcAddress("glVertexAttribs3dvNV"));
  glVertexAttribs3fvNV = PFNGLVERTEXATTRIBS3FVNVPROC(glfwGetProcAddress("glVertexAttribs3fvNV"));
  glVertexAttribs3hvNV = PFNGLVERTEXATTRIBS3HVNVPROC(glfwGetProcAddress("glVertexAttribs3hvNV"));
  glVertexAttribs3svNV = PFNGLVERTEXATTRIBS3SVNVPROC(glfwGetProcAddress("glVertexAttribs3svNV"));
  glVertexAttribs4dvNV = PFNGLVERTEXATTRIBS4DVNVPROC(glfwGetProcAddress("glVertexAttribs4dvNV"));
  glVertexAttribs4fvNV = PFNGLVERTEXATTRIBS4FVNVPROC(glfwGetProcAddress("glVertexAttribs4fvNV"));
  glVertexAttribs4hvNV = PFNGLVERTEXATTRIBS4HVNVPROC(glfwGetProcAddress("glVertexAttribs4hvNV"));
  glVertexAttribs4svNV = PFNGLVERTEXATTRIBS4SVNVPROC(glfwGetProcAddress("glVertexAttribs4svNV"));
  glVertexAttribs4ubvNV = PFNGLVERTEXATTRIBS4UBVNVPROC(glfwGetProcAddress("glVertexAttribs4ubvNV"));
  glVertexBindingDivisor = PFNGLVERTEXBINDINGDIVISORPROC(glfwGetProcAddress("glVertexBindingDivisor"));
  glVertexBlendARB = PFNGLVERTEXBLENDARBPROC(glfwGetProcAddress("glVertexBlendARB"));
  glVertexBlendEnvfATI = PFNGLVERTEXBLENDENVFATIPROC(glfwGetProcAddress("glVertexBlendEnvfATI"));
  glVertexBlendEnviATI = PFNGLVERTEXBLENDENVIATIPROC(glfwGetProcAddress("glVertexBlendEnviATI"));
  glVertexFormatNV = PFNGLVERTEXFORMATNVPROC(glfwGetProcAddress("glVertexFormatNV"));
  glVertexP2ui = PFNGLVERTEXP2UIPROC(glfwGetProcAddress("glVertexP2ui"));
  glVertexP2uiv = PFNGLVERTEXP2UIVPROC(glfwGetProcAddress("glVertexP2uiv"));
  glVertexP3ui = PFNGLVERTEXP3UIPROC(glfwGetProcAddress("glVertexP3ui"));
  glVertexP3uiv = PFNGLVERTEXP3UIVPROC(glfwGetProcAddress("glVertexP3uiv"));
  glVertexP4ui = PFNGLVERTEXP4UIPROC(glfwGetProcAddress("glVertexP4ui"));
  glVertexP4uiv = PFNGLVERTEXP4UIVPROC(glfwGetProcAddress("glVertexP4uiv"));
  glVertexPointerEXT = PFNGLVERTEXPOINTEREXTPROC(glfwGetProcAddress("glVertexPointerEXT"));
  glVertexPointerListIBM = PFNGLVERTEXPOINTERLISTIBMPROC(glfwGetProcAddress("glVertexPointerListIBM"));
  glVertexPointervINTEL = PFNGLVERTEXPOINTERVINTELPROC(glfwGetProcAddress("glVertexPointervINTEL"));
  glVertexStream1dATI = PFNGLVERTEXSTREAM1DATIPROC(glfwGetProcAddress("glVertexStream1dATI"));
  glVertexStream1dvATI = PFNGLVERTEXSTREAM1DVATIPROC(glfwGetProcAddress("glVertexStream1dvATI"));
  glVertexStream1fATI = PFNGLVERTEXSTREAM1FATIPROC(glfwGetProcAddress("glVertexStream1fATI"));
  glVertexStream1fvATI = PFNGLVERTEXSTREAM1FVATIPROC(glfwGetProcAddress("glVertexStream1fvATI"));
  glVertexStream1iATI = PFNGLVERTEXSTREAM1IATIPROC(glfwGetProcAddress("glVertexStream1iATI"));
  glVertexStream1ivATI = PFNGLVERTEXSTREAM1IVATIPROC(glfwGetProcAddress("glVertexStream1ivATI"));
  glVertexStream1sATI = PFNGLVERTEXSTREAM1SATIPROC(glfwGetProcAddress("glVertexStream1sATI"));
  glVertexStream1svATI = PFNGLVERTEXSTREAM1SVATIPROC(glfwGetProcAddress("glVertexStream1svATI"));
  glVertexStream2dATI = PFNGLVERTEXSTREAM2DATIPROC(glfwGetProcAddress("glVertexStream2dATI"));
  glVertexStream2dvATI = PFNGLVERTEXSTREAM2DVATIPROC(glfwGetProcAddress("glVertexStream2dvATI"));
  glVertexStream2fATI = PFNGLVERTEXSTREAM2FATIPROC(glfwGetProcAddress("glVertexStream2fATI"));
  glVertexStream2fvATI = PFNGLVERTEXSTREAM2FVATIPROC(glfwGetProcAddress("glVertexStream2fvATI"));
  glVertexStream2iATI = PFNGLVERTEXSTREAM2IATIPROC(glfwGetProcAddress("glVertexStream2iATI"));
  glVertexStream2ivATI = PFNGLVERTEXSTREAM2IVATIPROC(glfwGetProcAddress("glVertexStream2ivATI"));
  glVertexStream2sATI = PFNGLVERTEXSTREAM2SATIPROC(glfwGetProcAddress("glVertexStream2sATI"));
  glVertexStream2svATI = PFNGLVERTEXSTREAM2SVATIPROC(glfwGetProcAddress("glVertexStream2svATI"));
  glVertexStream3dATI = PFNGLVERTEXSTREAM3DATIPROC(glfwGetProcAddress("glVertexStream3dATI"));
  glVertexStream3dvATI = PFNGLVERTEXSTREAM3DVATIPROC(glfwGetProcAddress("glVertexStream3dvATI"));
  glVertexStream3fATI = PFNGLVERTEXSTREAM3FATIPROC(glfwGetProcAddress("glVertexStream3fATI"));
  glVertexStream3fvATI = PFNGLVERTEXSTREAM3FVATIPROC(glfwGetProcAddress("glVertexStream3fvATI"));
  glVertexStream3iATI = PFNGLVERTEXSTREAM3IATIPROC(glfwGetProcAddress("glVertexStream3iATI"));
  glVertexStream3ivATI = PFNGLVERTEXSTREAM3IVATIPROC(glfwGetProcAddress("glVertexStream3ivATI"));
  glVertexStream3sATI = PFNGLVERTEXSTREAM3SATIPROC(glfwGetProcAddress("glVertexStream3sATI"));
  glVertexStream3svATI = PFNGLVERTEXSTREAM3SVATIPROC(glfwGetProcAddress("glVertexStream3svATI"));
  glVertexStream4dATI = PFNGLVERTEXSTREAM4DATIPROC(glfwGetProcAddress("glVertexStream4dATI"));
  glVertexStream4dvATI = PFNGLVERTEXSTREAM4DVATIPROC(glfwGetProcAddress("glVertexStream4dvATI"));
  glVertexStream4fATI = PFNGLVERTEXSTREAM4FATIPROC(glfwGetProcAddress("glVertexStream4fATI"));
  glVertexStream4fvATI = PFNGLVERTEXSTREAM4FVATIPROC(glfwGetProcAddress("glVertexStream4fvATI"));
  glVertexStream4iATI = PFNGLVERTEXSTREAM4IATIPROC(glfwGetProcAddress("glVertexStream4iATI"));
  glVertexStream4ivATI = PFNGLVERTEXSTREAM4IVATIPROC(glfwGetProcAddress("glVertexStream4ivATI"));
  glVertexStream4sATI = PFNGLVERTEXSTREAM4SATIPROC(glfwGetProcAddress("glVertexStream4sATI"));
  glVertexStream4svATI = PFNGLVERTEXSTREAM4SVATIPROC(glfwGetProcAddress("glVertexStream4svATI"));
  glVertexWeightfEXT = PFNGLVERTEXWEIGHTFEXTPROC(glfwGetProcAddress("glVertexWeightfEXT"));
  glVertexWeightfvEXT = PFNGLVERTEXWEIGHTFVEXTPROC(glfwGetProcAddress("glVertexWeightfvEXT"));
  glVertexWeighthNV = PFNGLVERTEXWEIGHTHNVPROC(glfwGetProcAddress("glVertexWeighthNV"));
  glVertexWeighthvNV = PFNGLVERTEXWEIGHTHVNVPROC(glfwGetProcAddress("glVertexWeighthvNV"));
  glVertexWeightPointerEXT = PFNGLVERTEXWEIGHTPOINTEREXTPROC(glfwGetProcAddress("glVertexWeightPointerEXT"));
  glVideoCaptureNV = PFNGLVIDEOCAPTURENVPROC(glfwGetProcAddress("glVideoCaptureNV"));
  glVideoCaptureStreamParameterdvNV = PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC(glfwGetProcAddress("glVideoCaptureStreamParameterdvNV"));
  glVideoCaptureStreamParameterfvNV = PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC(glfwGetProcAddress("glVideoCaptureStreamParameterfvNV"));
  glVideoCaptureStreamParameterivNV = PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC(glfwGetProcAddress("glVideoCaptureStreamParameterivNV"));
  glViewportArrayv = PFNGLVIEWPORTARRAYVPROC(glfwGetProcAddress("glViewportArrayv"));
  glViewportIndexedf = PFNGLVIEWPORTINDEXEDFPROC(glfwGetProcAddress("glViewportIndexedf"));
  glViewportIndexedfv = PFNGLVIEWPORTINDEXEDFVPROC(glfwGetProcAddress("glViewportIndexedfv"));
  glViewportPositionWScaleNV = PFNGLVIEWPORTPOSITIONWSCALENVPROC(glfwGetProcAddress("glViewportPositionWScaleNV"));
  glViewportSwizzleNV = PFNGLVIEWPORTSWIZZLENVPROC(glfwGetProcAddress("glViewportSwizzleNV"));
  glWaitSync = PFNGLWAITSYNCPROC(glfwGetProcAddress("glWaitSync"));
  glWaitVkSemaphoreNV = PFNGLWAITVKSEMAPHORENVPROC(glfwGetProcAddress("glWaitVkSemaphoreNV"));
  glWeightbvARB = PFNGLWEIGHTBVARBPROC(glfwGetProcAddress("glWeightbvARB"));
  glWeightdvARB = PFNGLWEIGHTDVARBPROC(glfwGetProcAddress("glWeightdvARB"));
  glWeightfvARB = PFNGLWEIGHTFVARBPROC(glfwGetProcAddress("glWeightfvARB"));
  glWeightivARB = PFNGLWEIGHTIVARBPROC(glfwGetProcAddress("glWeightivARB"));
  glWeightPathsNV = PFNGLWEIGHTPATHSNVPROC(glfwGetProcAddress("glWeightPathsNV"));
  glWeightPointerARB = PFNGLWEIGHTPOINTERARBPROC(glfwGetProcAddress("glWeightPointerARB"));
  glWeightsvARB = PFNGLWEIGHTSVARBPROC(glfwGetProcAddress("glWeightsvARB"));
  glWeightubvARB = PFNGLWEIGHTUBVARBPROC(glfwGetProcAddress("glWeightubvARB"));
  glWeightuivARB = PFNGLWEIGHTUIVARBPROC(glfwGetProcAddress("glWeightuivARB"));
  glWeightusvARB = PFNGLWEIGHTUSVARBPROC(glfwGetProcAddress("glWeightusvARB"));
  glWindowPos2d = PFNGLWINDOWPOS2DPROC(glfwGetProcAddress("glWindowPos2d"));
  glWindowPos2dARB = PFNGLWINDOWPOS2DARBPROC(glfwGetProcAddress("glWindowPos2dARB"));
  glWindowPos2dMESA = PFNGLWINDOWPOS2DMESAPROC(glfwGetProcAddress("glWindowPos2dMESA"));
  glWindowPos2dv = PFNGLWINDOWPOS2DVPROC(glfwGetProcAddress("glWindowPos2dv"));
  glWindowPos2dvARB = PFNGLWINDOWPOS2DVARBPROC(glfwGetProcAddress("glWindowPos2dvARB"));
  glWindowPos2dvMESA = PFNGLWINDOWPOS2DVMESAPROC(glfwGetProcAddress("glWindowPos2dvMESA"));
  glWindowPos2f = PFNGLWINDOWPOS2FPROC(glfwGetProcAddress("glWindowPos2f"));
  glWindowPos2fARB = PFNGLWINDOWPOS2FARBPROC(glfwGetProcAddress("glWindowPos2fARB"));
  glWindowPos2fMESA = PFNGLWINDOWPOS2FMESAPROC(glfwGetProcAddress("glWindowPos2fMESA"));
  glWindowPos2fv = PFNGLWINDOWPOS2FVPROC(glfwGetProcAddress("glWindowPos2fv"));
  glWindowPos2fvARB = PFNGLWINDOWPOS2FVARBPROC(glfwGetProcAddress("glWindowPos2fvARB"));
  glWindowPos2fvMESA = PFNGLWINDOWPOS2FVMESAPROC(glfwGetProcAddress("glWindowPos2fvMESA"));
  glWindowPos2i = PFNGLWINDOWPOS2IPROC(glfwGetProcAddress("glWindowPos2i"));
  glWindowPos2iARB = PFNGLWINDOWPOS2IARBPROC(glfwGetProcAddress("glWindowPos2iARB"));
  glWindowPos2iMESA = PFNGLWINDOWPOS2IMESAPROC(glfwGetProcAddress("glWindowPos2iMESA"));
  glWindowPos2iv = PFNGLWINDOWPOS2IVPROC(glfwGetProcAddress("glWindowPos2iv"));
  glWindowPos2ivARB = PFNGLWINDOWPOS2IVARBPROC(glfwGetProcAddress("glWindowPos2ivARB"));
  glWindowPos2ivMESA = PFNGLWINDOWPOS2IVMESAPROC(glfwGetProcAddress("glWindowPos2ivMESA"));
  glWindowPos2s = PFNGLWINDOWPOS2SPROC(glfwGetProcAddress("glWindowPos2s"));
  glWindowPos2sARB = PFNGLWINDOWPOS2SARBPROC(glfwGetProcAddress("glWindowPos2sARB"));
  glWindowPos2sMESA = PFNGLWINDOWPOS2SMESAPROC(glfwGetProcAddress("glWindowPos2sMESA"));
  glWindowPos2sv = PFNGLWINDOWPOS2SVPROC(glfwGetProcAddress("glWindowPos2sv"));
  glWindowPos2svARB = PFNGLWINDOWPOS2SVARBPROC(glfwGetProcAddress("glWindowPos2svARB"));
  glWindowPos2svMESA = PFNGLWINDOWPOS2SVMESAPROC(glfwGetProcAddress("glWindowPos2svMESA"));
  glWindowPos3d = PFNGLWINDOWPOS3DPROC(glfwGetProcAddress("glWindowPos3d"));
  glWindowPos3dARB = PFNGLWINDOWPOS3DARBPROC(glfwGetProcAddress("glWindowPos3dARB"));
  glWindowPos3dMESA = PFNGLWINDOWPOS3DMESAPROC(glfwGetProcAddress("glWindowPos3dMESA"));
  glWindowPos3dv = PFNGLWINDOWPOS3DVPROC(glfwGetProcAddress("glWindowPos3dv"));
  glWindowPos3dvARB = PFNGLWINDOWPOS3DVARBPROC(glfwGetProcAddress("glWindowPos3dvARB"));
  glWindowPos3dvMESA = PFNGLWINDOWPOS3DVMESAPROC(glfwGetProcAddress("glWindowPos3dvMESA"));
  glWindowPos3f = PFNGLWINDOWPOS3FPROC(glfwGetProcAddress("glWindowPos3f"));
  glWindowPos3fARB = PFNGLWINDOWPOS3FARBPROC(glfwGetProcAddress("glWindowPos3fARB"));
  glWindowPos3fMESA = PFNGLWINDOWPOS3FMESAPROC(glfwGetProcAddress("glWindowPos3fMESA"));
  glWindowPos3fv = PFNGLWINDOWPOS3FVPROC(glfwGetProcAddress("glWindowPos3fv"));
  glWindowPos3fvARB = PFNGLWINDOWPOS3FVARBPROC(glfwGetProcAddress("glWindowPos3fvARB"));
  glWindowPos3fvMESA = PFNGLWINDOWPOS3FVMESAPROC(glfwGetProcAddress("glWindowPos3fvMESA"));
  glWindowPos3i = PFNGLWINDOWPOS3IPROC(glfwGetProcAddress("glWindowPos3i"));
  glWindowPos3iARB = PFNGLWINDOWPOS3IARBPROC(glfwGetProcAddress("glWindowPos3iARB"));
  glWindowPos3iMESA = PFNGLWINDOWPOS3IMESAPROC(glfwGetProcAddress("glWindowPos3iMESA"));
  glWindowPos3iv = PFNGLWINDOWPOS3IVPROC(glfwGetProcAddress("glWindowPos3iv"));
  glWindowPos3ivARB = PFNGLWINDOWPOS3IVARBPROC(glfwGetProcAddress("glWindowPos3ivARB"));
  glWindowPos3ivMESA = PFNGLWINDOWPOS3IVMESAPROC(glfwGetProcAddress("glWindowPos3ivMESA"));
  glWindowPos3s = PFNGLWINDOWPOS3SPROC(glfwGetProcAddress("glWindowPos3s"));
  glWindowPos3sARB = PFNGLWINDOWPOS3SARBPROC(glfwGetProcAddress("glWindowPos3sARB"));
  glWindowPos3sMESA = PFNGLWINDOWPOS3SMESAPROC(glfwGetProcAddress("glWindowPos3sMESA"));
  glWindowPos3sv = PFNGLWINDOWPOS3SVPROC(glfwGetProcAddress("glWindowPos3sv"));
  glWindowPos3svARB = PFNGLWINDOWPOS3SVARBPROC(glfwGetProcAddress("glWindowPos3svARB"));
  glWindowPos3svMESA = PFNGLWINDOWPOS3SVMESAPROC(glfwGetProcAddress("glWindowPos3svMESA"));
  glWindowPos4dMESA = PFNGLWINDOWPOS4DMESAPROC(glfwGetProcAddress("glWindowPos4dMESA"));
  glWindowPos4dvMESA = PFNGLWINDOWPOS4DVMESAPROC(glfwGetProcAddress("glWindowPos4dvMESA"));
  glWindowPos4fMESA = PFNGLWINDOWPOS4FMESAPROC(glfwGetProcAddress("glWindowPos4fMESA"));
  glWindowPos4fvMESA = PFNGLWINDOWPOS4FVMESAPROC(glfwGetProcAddress("glWindowPos4fvMESA"));
  glWindowPos4iMESA = PFNGLWINDOWPOS4IMESAPROC(glfwGetProcAddress("glWindowPos4iMESA"));
  glWindowPos4ivMESA = PFNGLWINDOWPOS4IVMESAPROC(glfwGetProcAddress("glWindowPos4ivMESA"));
  glWindowPos4sMESA = PFNGLWINDOWPOS4SMESAPROC(glfwGetProcAddress("glWindowPos4sMESA"));
  glWindowPos4svMESA = PFNGLWINDOWPOS4SVMESAPROC(glfwGetProcAddress("glWindowPos4svMESA"));
  glWindowRectanglesEXT = PFNGLWINDOWRECTANGLESEXTPROC(glfwGetProcAddress("glWindowRectanglesEXT"));
  glWriteMaskEXT = PFNGLWRITEMASKEXTPROC(glfwGetProcAddress("glWriteMaskEXT"));
#endif
}

/*!
** \brief OpenGL のエラーをチェックする.
**
**   OpenGL の API を呼び出し直後に実行すればエラーのあるときにメッセージを表示する.
**
**   \param msg エラー発生時に標準エラー出力に出力する文字列. NULL なら何も出力しない.
*/
void gg::ggError(const char *name, unsigned int line)
{
  const GLenum error(glGetError());

  if (error != GL_NO_ERROR)
  {
    if (name)
    {
      std::cerr << name;
      if (line > 0) std::cerr << " (" << line << ")";
      std::cerr << ": ";
    }

    switch (error)
    {
    case GL_INVALID_ENUM:
      std::cerr << "An unacceptable value is specified for an enumerated argument" << std::endl;
      break;
    case GL_INVALID_VALUE:
      std::cerr << "A numeric argument is out of range" << std::endl;
      break;
    case GL_INVALID_OPERATION:
      std::cerr << "The specified operation is not allowed in the current state" << std::endl;
      break;
    case GL_OUT_OF_MEMORY:
      std::cerr << "There is not enough memory left to execute the command" << std::endl;
      break;
    case GL_INVALID_FRAMEBUFFER_OPERATION:
      std::cerr << "The specified operation is not allowed current frame buffer" << std::endl;
      break;
    default:
      std::cerr << "An OpenGL error has occured: " << std::hex << std::showbase << error << std::endl;
      break;
    }
  }
}

/*!
** \brief FBO のエラーをチェックする.
**
**   FBO の API を呼び出し直後に実行すればエラーのあるときにメッセージを表示する.
**
**   \param msg エラー発生時に標準エラー出力に出力する文字列. NULL なら何も出力しない.
*/
void gg::ggFBOError(const char *name, unsigned int line)
{
  const GLenum status(glCheckFramebufferStatus(GL_FRAMEBUFFER));

  if (status != GL_FRAMEBUFFER_COMPLETE)
  {
    if (name)
    {
      std::cerr << name;
      if (line > 0) std::cerr << " (" << line << ")";
      std::cerr << ": ";
    }

    switch (status)
    {
    case GL_FRAMEBUFFER_UNSUPPORTED:
      std::cerr << "Unsupported framebuffer internal" << std::endl;
      break;
    case GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
      std::cerr << "Framebuffer incomplete, missing attachment" << std::endl;
      break;
    case GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
      std::cerr << "Framebuffer incomplete, duplicate attachment" << std::endl;
      break;
    case GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER:
      std::cerr << "Framebuffer incomplete, missing draw buffer" << std::endl;
      break;
    case GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER:
      std::cerr << "Framebuffer incomplete, missing read buffer" << std::endl;
      break;
    default:
      std::cerr << "Programming error; will fail on all hardware: " << std::hex << std::showbase << status << std::endl;
      break;
    }
  }
}

/*!
** \brief 配列に格納された画像の内容を TGA ファイルに保存する.
**
**   \param sx 画像の幅.
**   \param sy 画像の高さ.
**   \param depth 画像の 1 画素のバイト数.
**   \param buffer 画像データ.
**   \param name ファイル名.
**   \return 保存に成功したら true.
*/
bool gg::ggSaveTga(GLsizei sx, GLsizei sy, unsigned int depth,
  const void *buffer, const char *name)
{
  // ファイルを開く
  std::ofstream file(name, std::ios::binary);

  // ファイルが開けなかったら戻る
  if (!file)
  {
    std::cerr << "Error: Can't open file: " << name << std::endl;
    return false;
  }

  // 画像のヘッダ
  const unsigned char type(depth == 0 ? 0 : depth < 3 ? 3 : 2);
  const unsigned char alpha(depth == 2 || depth == 4 ? 8 : 0);
  const unsigned char header[18] =
  {
    0,          // ID length
    0,          // Color map type (none)
    type,       // Image Type (2:RGB, 3:Grayscale)
    0, 0,       // Offset into the color map table
    0, 0,       // Number of color map entries
    0,          // Number of a color map entry bits per pixel
    0, 0,       // Horizontal image position
    0, 0,       // Vertical image position
    (unsigned char)(sx & 0xff),
    (unsigned char)(sx >> 8),
    (unsigned char)(sy & 0xff),
    (unsigned char)(sy >> 8),
    (unsigned char)(depth * 8),  // Pixel depth (bits per pixel)
    alpha       // Image descriptor
  };

  // ヘッダを書き込む
  file.write(reinterpret_cast<const char *>(header), sizeof header);

  // ヘッダの書き込みチェック
  if (file.bad())
  {
    // ヘッダの書き込みに失敗した
    std::cerr << "Error: Can't write file header: " << name << std::endl;
    file.close();
    return false;
  }

  // データを書き込む
  size_t size(sx * sy * depth);
  if (type == 2)
  {
    // フルカラー
    std::vector<char> temp(size);
    for (size_t i = 0; i < size; i += depth)
    {
      temp[i + 2] = static_cast<const char *>(buffer)[i + 0];
      temp[i + 1] = static_cast<const char *>(buffer)[i + 1];
      temp[i + 0] = static_cast<const char *>(buffer)[i + 2];
      if (depth == 4) temp[i + 3] = static_cast<const char *>(buffer)[i + 3];
    }
    file.write(&temp[0], size);
  }
  else if (type == 3)
  {
    // グレースケール
    file.write(static_cast<const char *>(buffer), size);
  }

  // フッタを書き込む
  static const char footer[] = "\0\0\0\0\0\0\0\0TRUEVISION-XFILE.";
  file.write(footer, sizeof footer);

  // データの書き込みチェック
  if (file.bad())
  {
    // データの書き込みに失敗した
    std::cerr << "Error: Can't write image data: " << name << std::endl;
    file.close();
    return false;
  }

  // ファイルを閉じる
  file.close();

  return true;
}

/*!
** \brief カラーバッファの内容を TGA ファイルに保存する.
**
**   \param name 保存するファイル名.
**   \return 保存に成功したら true.
*/
bool gg::ggSaveColor(const char *name)
{
  // 現在のビューポートのサイズを得る
  GLint viewport[4];
  glGetIntegerv(GL_VIEWPORT, viewport);

  // ビューポートのサイズ分のメモリを確保する
  const size_t size(viewport[2] * viewport[3] * 3);
  std::vector<GLubyte> buffer(size);

  // 画面表示の完了を待つ
  glFinish();

  // カラーバッファを読み込む
  glReadPixels(viewport[0], viewport[1], viewport[2], viewport[3],
    GL_BGR, GL_UNSIGNED_BYTE, &buffer[0]);

  // 読み込んだデータをファイルに書き込む
  return ggSaveTga(viewport[2], viewport[3], 3, &buffer[0], name);
}

/*!
** \brief デプスバッファの内容を TGA ファイルに保存する.
**
**   \param name 保存するファイル名.
**   \return 保存に成功したら true.
*/
bool gg::ggSaveDepth(const char *name)
{
  // 現在のビューポートのサイズを得る
  GLint viewport[4];
  glGetIntegerv(GL_VIEWPORT, viewport);

  // ビューポートのサイズ分のメモリを確保する
  const size_t size(viewport[2] * viewport[3]);
  std::vector<GLubyte> buffer(size);

  // 画面表示の完了を待つ
  glFinish();

  // デプスバッファを読み込む
  glReadPixels(viewport[0], viewport[1], viewport[2], viewport[3],
    GL_DEPTH_COMPONENT, GL_UNSIGNED_BYTE, &buffer[0]);

  // 読み込んだデータをファイルに書き込む
  return ggSaveTga(viewport[2], viewport[3], 1, &buffer[0], name);
}

/*!
** \brief TGA ファイル (8/16/24/32bit) を読み込む.
**
**   \param name 読み込むファイル名.
**   \param width 読み込んだファイルの幅.
**   \param height 読み込んだファイルの高さ.
**   \param format 読み込んだファイルのフォーマット.
**   \return 読み込んだ画像データのポインタ (要 delete, 読み込めなければ NULL)
*/
GLubyte *gg::ggLoadTga(const char *name, GLsizei *width, GLsizei *height, GLenum *format)
{
  // ファイルを開く
  std::ifstream file(name, std::ios::binary);

  // ファイルが開けなかったら戻る
  if (!file)
  {
    std::cerr << "Error: Can't open file: " << name << std::endl;
    return NULL;
  }

  // ヘッダを読み込む
  unsigned char header[18];
  file.read(reinterpret_cast<char *>(header), sizeof header);

  // ヘッダの読み込みに失敗したら戻る
  if (file.bad())
  {
    std::cerr << "Error: Can't read file header: " << name << std::endl;
    file.close();
    return NULL;
  }

  // 幅と高さ
  *width = header[13] << 8 | header[12];
  *height = header[15] << 8 | header[14];

  // 深度
  const size_t depth(header[16] / 8);
  switch (depth)
  {
  case 1:
    *format = GL_RED;
    break;
  case 2:
    *format = GL_RG;
    break;
  case 3:
    *format = GL_BGR;
    break;
  case 4:
    *format = GL_BGRA;
    break;
  default:
    // 取り扱えないフォーマットだったら戻る
    std::cerr << "Error: Unusable format: " << depth << std::endl;
    file.close();
    return NULL;
  }

  // データサイズ
  const size_t size(*width * *height * depth);
  if (size < 2) return NULL;

  // 読み込みに使うメモリを確保する
  GLubyte *const buffer(new(std::nothrow) GLubyte[size]);

  // メモリが確保できなければ戻る
  if (buffer == NULL)
  {
    std::cerr << "Error: Too large file: " << name << std::endl;
    file.close();
    return NULL;
  }

  // データを読み込む
  if (header[2] & 8)
  {
    // RLE
    size_t p(0);
    char c;
    while (file.get(c))
    {
      if (c & 0x80)
      {
        // run-length packet
        const size_t count((c & 0x7f) + 1);
        if (p + count * depth > size) break;
        char temp[4];
        file.read(temp, depth);
        for (size_t i = 0; i < count; ++i)
        {
          for (size_t j = 0; j < depth;) buffer[p++] = temp[j++];
        }
      }
      else
      {
        // raw packet
        const size_t count((c + 1) * depth);
        if (p + count > size) break;
        file.read(reinterpret_cast<char *>(buffer + p), count);
        p += count;
      }
    }
  }
  else
  {
    // 非圧縮
    file.read(reinterpret_cast<char *>(buffer), size);
  }

  // 読み込みに失敗していたら警告を出す
  if (file.bad())
  {
    std::cerr << "Waring: Can't read image data: " << name << std::endl;
  }

  // ファイルを閉じる
  file.close();

  // 画像を読み込んだメモリを返す
  return buffer;
}

/*!
** \brief テクスチャメモリを確保して画像を読み込む.
**
**   \param width 画像の幅.
**   \param height 画像の高さ.
**   \param internal テクスチャの内部フォーマット.
**   \param format 画像データのフォーマット.
**   \param image 画像データ.
**   \return テクスチャオブジェクト名.
*/
GLuint gg::ggLoadTexture(GLsizei width, GLsizei height, GLenum internal,
  GLenum format, const GLvoid *image)
{
  // テクスチャオブジェクト
  GLuint tex;
  glGenTextures(1, &tex);
  glBindTexture(GL_TEXTURE_2D, tex);

  // アルファチャンネルがついていれば 4 バイト境界に設定する
  glPixelStorei(GL_UNPACK_ALIGNMENT, (format == GL_BGRA || format == GL_RGBA) ? 4 : 1);

  // テクスチャを割り当てる
  glTexImage2D(GL_TEXTURE_2D, 0, internal, width, height, 0, format, GL_UNSIGNED_BYTE, image);

  // バイリニア（ミップマップなし），エッジでクランプ
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);

  // テクスチャオブジェクト名を返す
  return tex;
}

/*!
** \brief TGA ファイルをテクスチャメモリに読み込む.
**
**   \param name TGA ファイル名.
**   \param internal テクスチャの内部フォーマット.
**   \return テクスチャオブジェクト名.
*/
GLuint gg::ggLoadImage(const char *name, GLenum internal)
{
  // 画像サイズ
  GLsizei width, height;

  // 画像フォーマット
  GLenum format;

  // 画像を読み込む
  const GLubyte *const image(ggLoadTga(name, &width, &height, &format));

  // 画像が読み込めなかったら戻る
  if (image == NULL) return 0;

  // internal == 0 なら内部フォーマットを読み込んだファイルに合わせる
  if (internal == 0)
  {
    switch (format)
    {
    case GL_BGR:
      internal = GL_RGB;
      break;
    case GL_BGRA:
      internal = GL_RGBA;
      break;
    default:
      internal = format;
      break;
    }
  }

  // テクスチャメモリに読み込む
  const GLuint tex(ggLoadTexture(width, height, internal, format, image));

  // 画像の読み込みに使ったメモリを解放する
  delete[] image;

  // テクスチャオブジェクト名を返す
  return tex;
}

/*!
** \brief TGA 画像ファイルの高さマップ読み込んでテクスチャメモリに法線マップを作成する.
**
**   \param name TGA ファイル名.
**   \param nz 作成した法線ベクトルの z 成分の割合.
**   \param internal テクスチャの内部フォーマット.
**   \return テクスチャオブジェクト名.
*/
GLuint gg::ggLoadHeight(const char *name, float nz, GLenum internal)
{
  // 画像サイズ
  GLsizei width, height;

  // 画像フォーマット
  GLenum format;

  // 高さマップの画像を読み込む
  const GLubyte *const hmap(ggLoadTga(name, &width, &height, &format));

  // 画像が読み込めなかったら戻る
  if (hmap == NULL) return 0;

  // 画素のバイト数
  int bytes;
  switch (format)
  {
  case GL_RED:
    bytes = 1;
    break;
  case GL_RG:
    bytes = 2;
    break;
  case GL_BGR:
    bytes = 3;
    break;
  case GL_BGRA:
    bytes = 4;
    break;
  default:
    bytes = 1;
    break;
  }

  // メモリサイズ
  const GLsizei maxsize(width * height);

  // 法線マップのメモリを確保する
  GLfloat (*const nmap)[4](new(std::nothrow) GLfloat[maxsize][4]);

  // メモリが確保できなければ戻る
  if (nmap == NULL)
  {
    delete[] hmap;
    return 0;
  }

  // 法線マップの作成
  for (GLsizei i = 0; i < maxsize; ++i)
  {
    const int x(i % width);
    const int y(i - x);
    const int o(i * bytes);
    const int u((y + (x + 1) % width) * bytes);
    const int v(((y + width) % maxsize + x) * bytes);

    // 隣接する画素との値の差を法線の成分に用いる
    const float n[] = { static_cast<float>(hmap[u] - hmap[o]), static_cast<float>(hmap[v] - hmap[o]), nz };

    // 法線の長さを求めておく
    const float nl(ggLength3(n));

    // 法線を求める
    nmap[i][0] = n[0] / nl;
    nmap[i][1] = n[1] / nl;
    nmap[i][2] = n[2] / nl;
    nmap[i][3] = hmap[o];
  }

  // 高さマップの画像の読み込みに使ったメモリを解放する
  delete[] hmap;

  // 内部フォーマットが浮動小数点テクスチャでなければ [0,1] に変換する
  if (
    internal != GL_RGB16F  &&
    internal != GL_RGBA16F &&
    internal != GL_RGB32F  &&
    internal != GL_RGBA32F
    )
  {
    for (GLsizei i = 0; i < maxsize; ++i)
    {
      nmap[i][0] = nmap[i][0] * 0.5f + 0.5f;
      nmap[i][1] = nmap[i][1] * 0.5f + 0.5f;
      nmap[i][2] = nmap[i][2] * 0.5f + 0.5f;
      nmap[i][3] *= 0.0039215686f; // == 1/255
    }
  }

  // テクスチャオブジェクト
  GLuint tex;
  glGenTextures(1, &tex);
  glBindTexture(GL_TEXTURE_2D, tex);

  // nmap が GLfloat なので 4 バイト境界に設定する
  glPixelStorei(GL_UNPACK_ALIGNMENT, 4);

  // テクスチャを割り当てる
  glTexImage2D(GL_TEXTURE_2D, 0, internal, width, height, 0, GL_RGBA, GL_FLOAT, nmap);

  // バイリニア（ミップマップなし），エッジでクランプ
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);

  // 法線マップの作成に使ったメモリを解放する
  delete[] nmap;

  // テクスチャオブジェクト名を返す
  return tex;
}

// \cond STRUCT
/*
** OBJ ファイルの読み込みに使うデータ型
**
**     Vine Linux 6.1 の gcc 4.4.5 だと, ローカルに定義
**     したクラス・構造体を template で使うとエラーになる.
*/
namespace gg
{
  // 色
  struct rgb
  {
    float r, g, b;
  };

  // マテリアル
  struct mat
  {
    rgb amb;      // ambient
    rgb diff;     // diffuse
    rgb spec;     // specular
    float shi;    // shininess
    float dis;    // dissolve
  };

  // ベクトル
  struct vec
  {
    float x, y, z;
  };

  // 面データ
  struct idx
  {
    GLuint p[3];  // 頂点座標番号
    GLuint n[3];  // 頂点法線番号
    GLuint t[3];  // テクスチャ座標番号
    bool smooth;  // スムーズシェーディングの有無
  };

  // 面グループ
  struct grp
  {
    GLuint b;     // 面グループの開始番号
    GLuint c;     // 面グループの頂点数
    const mat *m; // 面グループのマテリアル
    grp(GLuint begin, GLuint count, const mat &material)
      : b(begin), c(count), m(&material) {}
  };
}
// \endcond

/*!
** \brief 三角形分割された OBJ ファイルを読み込む.
**
**   \param name OBJ ファイル名.
**   \param nv 読み込んだデータの頂点数を格納する変数.
**   \param pos 頂点の位置のデータを格納したメモリのポインタを格納する変数.
**   \param norm 頂点の法線データの格納したメモリのポインタを格納する変数.
**   \param nf 読み込んだデータの面数を格納する変数.
**   \param face 面のデータを格納したメモリのポインタを格納する変数.
**   \param normalize true ならサイズを正規化する.
**   \return 読み込みに成功したら true.
*/
bool gg::ggLoadObj(const char *name, GLuint &nv, GLfloat (*&pos)[3], GLfloat (*&norm)[3],
  GLuint &nf, GLuint (*&face)[3], bool normalize)
{
  // OBJ ファイルの読み込み
  std::ifstream file(name, std::ios::binary);

  // ファイルが開けなかったら戻る
  if (!file)
  {
    std::cerr << "Error: Can't open OBJ file: " << name << std::endl;
    return false;
  }

  // 一行読み込み用のバッファ
  std::string line;

  // データの数と座標値の最小値・最大値
  float xmin, xmax, ymin, ymax, zmin, zmax;
  xmax = ymax = zmax = -(xmin = ymin = zmin = FLT_MAX);

  // 頂点位置の一時保存
  std::vector<vec> tpos;
  std::vector<idx> tface;

  // データを読み込む
  while (std::getline(file, line))
  {
    std::istringstream str(line);
    std::string op;
    str >> op;

    if (op == "v")
    {
      // 頂点位置
      vec v;

      // 頂点位置はスペースで区切られている
      str >> v.x >> v.y >> v.z;

      // 位置の最大値と最小値を求める (AABB)
      xmin = std::min(xmin, v.x);
      xmax = std::max(xmax, v.x);
      ymin = std::min(ymin, v.y);
      ymax = std::max(ymax, v.y);
      zmin = std::min(zmin, v.z);
      zmax = std::max(zmax, v.z);

      // 頂点データを保存する
      tpos.push_back(v);
    }
    else if (op == "f")
    {
      // 面データ
      idx f;

      // 頂点座標番号を取り出す
      for (int i = 0; i < 3; ++i)
      {
        // 1行をスペースで区切って個々の要素の最初の数値を取り出す
        std::string s;
        str >> s;
        f.p[i] = atoi(s.c_str());
      }

      // 面データを保存する
      tface.push_back(f);
    }
  }

  // ファイルの読み込みチェック
  if (file.bad())
  {
    // うまく読み込めなかった
    std::cerr << "Warning: Can't read OBJ file: " << name << std::endl;
  }

  // ファイルを閉じる
  file.close();

  // メモリの確保
  pos = norm = NULL;
  face = NULL;
  nv = static_cast<GLuint>(tpos.size());
  nf = static_cast<GLuint>(tface.size());
  try
  {
    pos = new GLfloat[nv][3];
    norm = new GLfloat[nv][3];
    face = new GLuint[nf][3];
  }
  catch (std::bad_alloc e)
  {
    delete[] pos;
    delete[] norm;
    delete[] face;

    pos = norm = NULL;
    face = NULL;

    return false;
  }

  // 位置と大きさの正規化のための係数
  GLfloat scale, cx, cy, cz;
  if (normalize)
  {
    const float sx(xmax - xmin);
    const float sy(ymax - ymin);
    const float sz(zmax - zmin);

    scale = sx;
    if (sy > scale) scale = sy;
    if (sz > scale) scale = sz;
    scale = (scale != 0.0f) ? 2.0f / scale : 1.0f;

    cx = (xmax + xmin) * 0.5f;
    cy = (ymax + ymin) * 0.5f;
    cz = (zmax + zmin) * 0.5f;
  }
  else
  {
    scale = 1.0f;
    cx = cy = cz = 0.0f;
  }

  // 図形の大きさと位置の正規化とデータのコピー
  for (std::vector<vec>::const_iterator it = tpos.begin(); it != tpos.end(); ++it)
  {
    const size_t v = it - tpos.begin();

    pos[v][0] = (it->x - cx) * scale;
    pos[v][1] = (it->y - cy) * scale;
    pos[v][2] = (it->z - cz) * scale;
  }

  // 頂点法線の値を 0 にしておく
  for (GLuint i = 0; i < nv; ++i) norm[i][0] = norm[i][1] = norm[i][2] = 0.0f;

  // 面の法線の算出とデータのコピー
  for (std::vector<idx>::const_iterator it = tface.begin(); it != tface.end(); ++it)
  {
    const size_t f(it - tface.begin());

    // 頂点座標番号を取り出す
    const GLuint v0(face[f][0] = it->p[0] - 1);
    const GLuint v1(face[f][1] = it->p[1] - 1);
    const GLuint v2(face[f][2] = it->p[2] - 1);

    // v1 - v0, v2 - v0 を求める
    const GLfloat d1[] = { pos[v1][0] - pos[v0][0], pos[v1][1] - pos[v0][1], pos[v1][2] - pos[v0][2] };
    const GLfloat d2[] = { pos[v2][0] - pos[v0][0], pos[v2][1] - pos[v0][1], pos[v2][2] - pos[v0][2] };

    // 外積により面法線を求める
    GLfloat n[3];
    ggCross(n, d1, d2);

    // 面法線を頂点法線に積算する
    norm[v0][0] += n[0];
    norm[v0][1] += n[1];
    norm[v0][2] += n[2];
    norm[v1][0] += n[0];
    norm[v1][1] += n[1];
    norm[v1][2] += n[2];
    norm[v2][0] += n[0];
    norm[v2][1] += n[1];
    norm[v2][2] += n[2];
  }

  // 頂点法線の正規化
  for (GLuint v = 0; v < nv; ++v)
  {
    // 頂点法線の長さ
    GLfloat a(ggLength3(norm[v]));

    // 頂点法線の正規化
    if (a != 0.0)
    {
      norm[v][0] /= a;
      norm[v][1] /= a;
      norm[v][2] /= a;
    }
  }

  return true;
}

/*!
** \brief 三角形分割された OBJ ファイルと MTL ファイルを読み込む.
**
**   \param name OBJ ファイル名.
**   \param ng 読み込んだデータの面のグループ数.
**   \param group 面の各グループの最初の面の番号と面の数.
**   \param amb グループごとの環境光に対する反射係数.
**   \param diff グループごとの拡散反射係数.
**   \param spec グループごとの鏡面反射係数.
**   \param shi グループごとの輝き係数.
**   \param nv 読み込んだデータの頂点数を格納する変数.
**   \param pos 頂点の位置のデータを格納したメモリのポインタを格納する変数.
**   \param norm 頂点の法線データの格納したメモリのポインタを格納する変数.
**   \param normalize true ならサイズを正規化する.
**   \return 読み込みに成功したら true.
*/
bool gg::ggLoadObj(const char *name, GLuint &ng, GLuint (*&group)[2],
  GLfloat (*&amb)[4], GLfloat (*&diff)[4], GLfloat (*&spec)[4], GLfloat *&shi,
  GLuint &nv, GLfloat (*&pos)[3], GLfloat (*&norm)[3], bool normalize)
{
  // 引数に初期値を設定する
  ng = 0;
  group = NULL;
  amb = diff = spec = NULL;
  shi = NULL;
  nv = 0;
  pos = norm = NULL;

  // ファイルパスからディレクトリ名を取り出す
  std::string path(name);
  const size_t base(path.find_last_of("/\\"));
  std::string dirname((base == std::string::npos) ? "" : path.substr(base + 1));

  // OBJ ファイルを読み込む
  std::ifstream file(path.c_str());

  // 読み込みに失敗したら戻る
  if (!file)
  {
    std::cerr << "Error: Can't open OBJ file: " << path << std::endl;
    return false;
  }

  // マテリアル
  std::map<std::string, mat> mtl;
  static const char defmtl[] = "Default";
  std::string mtlname(defmtl);

  // デフォルトのマテリアル
  mtl[mtlname].amb.r = 0.1f;
  mtl[mtlname].amb.g = 0.1f;
  mtl[mtlname].amb.b = 0.1f;
  mtl[mtlname].diff.r = 0.6f;
  mtl[mtlname].diff.g = 0.6f;
  mtl[mtlname].diff.b = 0.6f;
  mtl[mtlname].spec.r = 0.3f;
  mtl[mtlname].spec.g = 0.3f;
  mtl[mtlname].spec.b = 0.3f;
  mtl[mtlname].shi = 60.0f;
  mtl[mtlname].dis = 1.0f;

  // 読み込み用の一時記憶領域
  std::vector<vec> tpos;
  std::vector<vec> ttex;
  std::vector<vec> tnorm;
  std::vector<idx> tface;
  std::vector<grp> tgroup;

  // グループの開始番号
  GLuint groupbegin(0);

  // スムーズシェーディングのスイッチ
  bool smooth(false);

  // 座標値の最小値・最大値
  float xmin, xmax, ymin, ymax, zmin, zmax;
  xmax = ymax = zmax = -(xmin = ymin = zmin = FLT_MAX);

  // 一行読み込み用のバッファ
  std::string line;

  // データの読み込み
  while (std::getline(file, line))
  {
    // 最後の文字が \r なら削除する
    if (*(line.end() - 1) == '\r') line.erase(--line.end());

    // 一行を文字列ストリームに入れる
    std::istringstream str(line);

    // 最初のトークンを命令 (op) とみなす
    std::string op;
    str >> op;

    if (op == "v")
    {
      // 頂点位置
      vec v;

      // 頂点位置はスペースで区切られている
      str >> v.x >> v.y >> v.z;

      // 頂点位置の最小値と最大値を求める (AABB)
      xmin = std::min(xmin, v.x);
      xmax = std::max(xmax, v.x);
      ymin = std::min(ymin, v.y);
      ymax = std::max(ymax, v.y);
      zmin = std::min(zmin, v.z);
      zmax = std::max(zmax, v.z);

      // 頂点位置を記録する
      tpos.push_back(v);
    }
    else if (op == "vt")
    {
      // テクスチャ座標
      vec t;

      // 頂点位置はスペースで区切られている
      str >> t.x >> t.y;

      // テクスチャ座標を記録する
      ttex.push_back(t);
    }
    else if (op == "vn")
    {
      // 頂点法線
      vec n;

      // 頂点法線はスペースで区切られている
      str >> n.x >> n.y >> n.z;

      // 頂点法線を記録する
      tnorm.push_back(n);
    }
    else if (op == "f")
    {
      // 面 (三角形) データ
      idx f;

      // スムースシェーディング
      f.smooth = smooth;

      //　三頂点のそれぞれについて
      for (int i = 0; i < 3; ++i)
      {
        // １項目取り出す
        std::string s;
        str >> s;

        // 項目の最初の要素は頂点座標番号
        f.p[i] = atoi(s.c_str());
        f.t[i] = f.n[i] = 0;

        // 残りの項目を取り出す
        size_t l(s.find('/', 0));
        if (l != std::string::npos)
        {
          // 二つ目の項目の先頭の位置
          ++l;

          // 二つ目の項目はテクスチャ座標
          f.t[i] = atoi(s.c_str() + l);

          // 三つ目の項目
          l = s.find('/', l);
          if (l != std::string::npos)
          {
            // 三つ目の項目の先頭の位置
            ++l;

            // 三つ目の項目は法線番号
            f.n[i] = atoi(s.c_str() + l);
          }
        }
      }

      // 面データの記録ｊ
      tface.push_back(f);
    }
    else if (op == "s")
    {
      // '1' だったらスムースシェーディング有効
      std::string s;
      str >> s;
      smooth = s == "1";
    }
    else if (op == "usemtl")
    {
      // 面グループの面数
      GLuint groupcount(static_cast<GLuint>(tface.size()) * 3 - groupbegin);
      if (groupcount > 0)
      {
        // 面グループの頂点データの開始番号と数，およびそのマテリアルを記録する
        grp b(groupbegin, groupcount, mtl[mtlname]);
        tgroup.push_back(b);

        // 次の面グループの開始番号を求めておく
        groupbegin += groupcount;
      }

      // マテリアル名の取り出し
      str >> mtlname;

      // マテリアルの存在チェック
      if (mtl.find(mtlname) == mtl.end())
      {
        std::cerr << "Warning: Undefined material: " << mtlname << std::endl;
        mtlname = defmtl;
      }
      else
      {
        std::cerr << "usemtl: " << mtlname << std::endl;
      }
    }
    else if (op == "mtllib")
    {
      // MTL ファイルのパス名を作る
      str >> std::ws;
      std::string mtlpath;
      std::getline(str, mtlpath);
      mtlpath = dirname + mtlpath;

      // MTL ファイルを開く
      std::ifstream mtlfile(mtlpath.c_str(), std::ios::binary);
      if (!mtlfile)
      {
        // MTL ファイルが無いとき
        std::cerr << "Warning: Can't open MTL file: " << mtlpath << std::endl;
      }
      else
      {
        // 一行読み込み用のバッファ
        std::string mtlline;

        // マテリアルデータを読み込む
        while (std::getline(mtlfile, mtlline))
        {
          std::istringstream mtlstr(mtlline);
          std::string mtlop;
          mtlstr >> mtlop;

          if (mtlop == "newmtl")
          {
            // 新規マテリアル名を出力する
            mtlstr >> mtlname;
            std::cerr << "newmtl: " << mtlname << std::endl;
          }
          else if (mtlop == "Ka")
          {
            // 環境光の反射係数を登録する
            mtlstr >> mtl[mtlname].amb.r >> mtl[mtlname].amb.g >> mtl[mtlname].amb.b;
          }
          else if (mtlop == "Kd")
          {
            // 拡散反射係数を登録する
            mtlstr >> mtl[mtlname].diff.r >> mtl[mtlname].diff.g >> mtl[mtlname].diff.b;
          }
          else if (mtlop == "Ks")
          {
            // 鏡面反射係数を登録する
            mtlstr >> mtl[mtlname].spec.r >> mtl[mtlname].spec.g >> mtl[mtlname].spec.b;
          }
          else if (mtlop == "Ns")
          {
            // 輝き係数を登録する
            float shi;
            mtlstr >> shi;
            mtl[mtlname].shi = shi * 0.1f;
          }
          else if (mtlop == "d")
          {
            // 不透明度を登録する
            mtlstr >> mtl[mtlname].dis;
          }
        }

        // MTL ファイルの読み込みチェック
        if (mtlfile.bad())
        {
          // MTL ファイルをうまく読み込めなかった
          std::cerr << "Warning: Can't read MTL file: " << mtlpath << std::endl;
        }
        mtlfile.close();
      }
    }
  }

  // ファイルの読み込みチェック
  if (file.bad())
  {
    // OBJ ファイルをうまく読み込めなかった
    std::cerr << "Error: Can't read OBJ file: " << path << std::endl;
    file.close();
    return false;
  }

  // ファイルを閉じる
  file.close();

  // 最後の面グループの面数
  GLuint groupcount(static_cast<GLuint>(tface.size()) * 3 - groupbegin);
  if (groupcount > 0)
  {
    // 最後の面グループの頂点データの開始番号と数，およびそのマテリアルを記録する
    grp b(groupbegin, groupcount, mtl[mtlname]);
    tgroup.push_back(b);
  }

  // 必要な面数
  const GLuint nf(static_cast<GLuint>(tface.size()));

  // メモリの確保
  try
  {
    // 必要な頂点数
    nv = nf * 3;
    pos = norm = NULL;

    pos = new GLfloat[nv][3];
    norm = new GLfloat[nv][3];

    // 必要なグループ数
    ng = static_cast<GLuint>(tgroup.size());
    group = NULL;
    amb = diff = spec = NULL;
    shi = NULL;

    group = new GLuint[ng][2];
    amb = new GLfloat[ng][4];
    diff = new GLfloat[ng][4];
    spec = new GLfloat[ng][4];
    shi = new GLfloat[ng];
  }
  catch (std::bad_alloc e)
  {
    delete[] pos;
    delete[] norm;

    nv = 0;
    pos = norm = NULL;

    delete[] group;
    delete[] amb;
    delete[] diff;
    delete[] spec;
    delete[] shi;

    ng = 0;
    group = NULL;
    amb = diff = spec = NULL;
    shi = NULL;

    return false;
  }

  // 位置と大きさを正規化するための係数
  GLfloat scale, cx, cy, cz;
  if (normalize)
  {
    const float sx(xmax - xmin);
    const float sy(ymax - ymin);
    const float sz(zmax - zmin);

    scale = sx;
    if (sy > scale) scale = sy;
    if (sz > scale) scale = sz;
    scale = (scale != 0.0f) ? 2.0f / scale : 1.0f;

    cx = (xmax + xmin) * 0.5f;
    cy = (ymax + ymin) * 0.5f;
    cz = (zmax + zmin) * 0.5f;
  }
  else
  {
    scale = 1.0f;
    cx = cy = cz = 0.0f;
  }

  // 法線データがなければ算出しておく
  if (tnorm.empty())
  {
    // 法線データ数の初期値は頂点数と同じでスムーズシェーディングのために初期値は 0
    static const vec zero = { 0.0f, 0.0f, 0.0f };
    tnorm.resize(tpos.size(), zero);

    // 面の法線の算出と頂点法線の算出
    for (std::vector<idx>::iterator it = tface.begin(); it != tface.end(); ++it)
    {
      // 頂点座標番号
      const GLuint v0(it->p[0] - 1);
      const GLuint v1(it->p[1] - 1);
      const GLuint v2(it->p[2] - 1);

      // v1 - v0, v2 - v0 を求める
      const GLfloat d1[] = { tpos[v1].x - tpos[v0].x, tpos[v1].y - tpos[v0].y, tpos[v1].z - tpos[v0].z };
      const GLfloat d2[] = { tpos[v2].x - tpos[v0].x, tpos[v2].y - tpos[v0].y, tpos[v2].z - tpos[v0].z };

      // 外積により面法線を求める
      GLfloat n[3];
      ggCross(n, d1, d2);

      if (it->smooth)
      {
        // 面法線を頂点法線に積算する
        tnorm[v0].x += n[0];
        tnorm[v0].y += n[1];
        tnorm[v0].z += n[2];
        tnorm[v1].x += n[0];
        tnorm[v1].y += n[1];
        tnorm[v1].z += n[2];
        tnorm[v2].x += n[0];
        tnorm[v2].y += n[1];
        tnorm[v2].z += n[2];

        // 面データを更新する
        it->n[0] = it->p[0];
        it->n[1] = it->p[1];
        it->n[2] = it->p[2];
      }
      else
      {
        // 面法線を正規化する
        const GLfloat a(ggLength3(n));
        if (a != 0.0f)
        {
          n[0] /= a;
          n[1] /= a;
          n[2] /= a;
        }

        // 3 頂点追加
        const GLuint v(static_cast<GLuint>(tnorm.size()));
        tnorm.resize(v + 3);

        // 正規化した面法線をそのまま頂点法線にする
        tnorm[v + 0].x = n[0];
        tnorm[v + 0].y = n[1];
        tnorm[v + 0].z = n[2];
        tnorm[v + 1].x = n[0];
        tnorm[v + 1].y = n[1];
        tnorm[v + 1].z = n[2];
        tnorm[v + 2].x = n[0];
        tnorm[v + 2].y = n[1];
        tnorm[v + 2].z = n[2];

        // 面データを更新する
        it->n[0] = v + 1;
        it->n[1] = v + 2;
        it->n[2] = v + 3;
      }
    }
  }

  // 面ごとの頂点データの作成
  for (std::vector<idx>::const_iterator it = tface.begin(); it != tface.end(); ++it)
  {
    const GLuint f(static_cast<GLuint>((it - tface.begin()) * 3));

    // 三頂点のそれぞれについて
    for (int i = 0; i < 3; ++i)
    {
      const unsigned int v(f + i);

      // 頂点座標番号
      GLuint p(it->p[i]);
      if (p > 0)
      {
        --p;

        // 頂点座標を正規化して登録する
        pos[v][0] = (tpos[p].x - cx) * scale;
        pos[v][1] = (tpos[p].y - cy) * scale;
        pos[v][2] = (tpos[p].z - cz) * scale;
      }

#if 0
      // テクスチャ座標番号
      GLuint t(it->t[i]);
      if (t > 0)
      {
        --t;

        // テクスチャ座標を登録する
        tex[v][0] = ttex[t].x;
        tex[v][1] = ttex[t].y;
      }
#endif

      // 頂点法線番号
      GLuint n(it->n[i]);
      if (n > 0)
      {
        --n;

        GLfloat nx(tnorm[n].x);
        GLfloat ny(tnorm[n].y);
        GLfloat nz(tnorm[n].z);

        if (it->smooth)
        {
          GLfloat a(sqrt(nx * nx + ny * ny + nz * nz));
          if (a != 0.0f)
          {
            nx /= a;
            ny /= a;
            nz /= a;
          }
        }

        // 頂点法線を登録する
        norm[v][0] = nx;
        norm[v][1] = ny;
        norm[v][2] = nz;
      }
    }
  }

  // 面グループデータの作成
  for (std::vector<grp>::const_iterator it = tgroup.begin(); it != tgroup.end(); ++it)
  {
    const size_t g(it - tgroup.begin());

    // 面グループの最初の頂点位置番号
    group[g][0] = it->b;

    // 面グループの頂点データの数
    group[g][1] = it->c;

    // 面グループの環境光に対する反射係数
    amb[g][0] = it->m->amb.r;
    amb[g][1] = it->m->amb.g;
    amb[g][2] = it->m->amb.b;
    amb[g][3] = 1.0f;

    // 面グループの拡散反射係数
    diff[g][0] = it->m->diff.r;
    diff[g][1] = it->m->diff.g;
    diff[g][2] = it->m->diff.b;
    diff[g][3] = it->m->dis;

    // 面グループの鏡面反射係数
    spec[g][0] = it->m->spec.r;
    spec[g][1] = it->m->spec.g;
    spec[g][2] = it->m->spec.b;
    spec[g][3] = 1.0f;

    // 面グループの輝き係数
    shi[g] = it->m->shi;
  }

  return true;
}

/*
** シェーダオブジェクトのコンパイル結果を表示する
*/
static GLboolean printShaderInfoLog(GLuint shader, const char *str)
{
  // コンパイル結果を取得する
  GLint status;
  glGetShaderiv(shader, GL_COMPILE_STATUS, &status);
  if (status == GL_FALSE) std::cerr << "Compile Error in " << str << std::endl;

  // シェーダのコンパイル時のログの長さを取得する
  GLsizei bufSize;
  glGetShaderiv(shader, GL_INFO_LOG_LENGTH, &bufSize);

  if (bufSize > 1)
  {
    // シェーダのコンパイル時のログの内容を取得する
    std::vector<GLchar> infoLog(bufSize);
    GLsizei length;
    glGetShaderInfoLog(shader, bufSize, &length, &infoLog[0]);
    std::cerr << &infoLog[0] << std::endl;
  }

  return static_cast<GLboolean>(status);
}

/*
** プログラムオブジェクトのリンク結果を表示する
*/
static GLboolean printProgramInfoLog(GLuint program)
{
  // リンク結果を取得する
  GLint status;
  glGetProgramiv(program, GL_LINK_STATUS, &status);
  if (status == GL_FALSE) std::cerr << "Link Error." << std::endl;

  // シェーダのリンク時のログの長さを取得する
  GLsizei bufSize;
  glGetProgramiv(program, GL_INFO_LOG_LENGTH, &bufSize);

  // シェーダのリンク時のログの内容を取得する
  if (bufSize > 1)
  {
    std::vector<GLchar> infoLog(bufSize);
    GLsizei length;
    glGetProgramInfoLog(program, bufSize, &length, &infoLog[0]);
    std::cerr << &infoLog[0] << std::endl;
  }

  // リンク結果を返す
  return static_cast<GLboolean>(status);
}

/*!
** \brief シェーダのソースプログラムの文字列を読み込んでプログラムオブジェクトを作成する.
**
**   \param vsrc バーテックスシェーダのソースプログラムの文字列.
**   \param fsrc フラグメントシェーダのソースプログラムの文字列 (NULL なら不使用).
**   \param gsrc ジオメトリシェーダのソースプログラムの文字列 (NULL なら不使用).
**   \param nvarying フィードバックする varying 変数の数 (0 なら不使用).
**   \param varyings フィードバックする varying 変数のリスト (NULL なら不使用).
**   \param vtext バーテックスシェーダのコンパイル時のメッセージに追加する文字列.
**   \param ftext フラグメントシェーダのコンパイル時のメッセージに追加する文字列.
**   \param gtext ジオメトリシェーダのコンパイル時のメッセージに追加する文字列.
**   \return シェーダプログラムのプログラム名 (作成できなければ 0).
*/
GLuint gg::ggCreateShader(const char *vsrc, const char *fsrc, const char *gsrc,
  GLint nvarying, const char *const varyings[],
  const char *vtext, const char *ftext, const char *gtext)
{
  // シェーダプログラムの作成
  const GLuint program(glCreateProgram());

  if (program > 0)
  {
    if (vsrc)
    {
      // バーテックスシェーダのシェーダオブジェクトを作成する
      const GLuint vertShader(glCreateShader(GL_VERTEX_SHADER));
      glShaderSource(vertShader, 1, &vsrc, NULL);
      glCompileShader(vertShader);

      // バーテックスシェーダのシェーダオブジェクトをプログラムオブジェクトに組み込む
      if (printShaderInfoLog(vertShader, vtext))
        glAttachShader(program, vertShader);
      glDeleteShader(vertShader);
    }

    if (fsrc)
    {
      // フラグメントシェーダのシェーダオブジェクトを作成する
      const GLuint fragShader(glCreateShader(GL_FRAGMENT_SHADER));
      glShaderSource(fragShader, 1, &fsrc, NULL);
      glCompileShader(fragShader);

      // フラグメントシェーダのシェーダオブジェクトをプログラムオブジェクトに組み込む
      if (printShaderInfoLog(fragShader, ftext))
        glAttachShader(program, fragShader);
      glDeleteShader(fragShader);
    }

    if (gsrc)
    {
      // ジオメトリシェーダのシェーダオブジェクトを作成する
      const GLuint geomShader(glCreateShader(GL_GEOMETRY_SHADER));
      glShaderSource(geomShader, 1, &gsrc, NULL);
      glCompileShader(geomShader);

      // ジオメトリシェーダのシェーダオブジェクトをプログラムオブジェクトに組み込む
      if (printShaderInfoLog(geomShader, gtext))
        glAttachShader(program, geomShader);
      glDeleteShader(geomShader);
    }

    // feedback に使う varying 変数を指定する
    if (nvarying > 0)
      glTransformFeedbackVaryings(program, nvarying, varyings, GL_SEPARATE_ATTRIBS);

    // シェーダプログラムをリンクする
    glLinkProgram(program);

    // プログラムオブジェクトが作成できなければ 0 を返す
    if (printProgramInfoLog(program) == GL_FALSE)
    {
      glDeleteProgram(program);
      return 0;
    }
  }

  // プログラムオブジェクトを返す
  return program;
}

/*
** シェーダのソースファイルを読み込んだメモリを返す
*/
static GLchar *readShaderSource(const char *name)
{
  // ファイル名が NULL なら NULL を返す
  if (name == NULL) return NULL;

  // ソースファイルを開く
  std::ifstream file(name, std::ios::binary);

  // ファイルが開けなければ戻る
  if (!file)
  {
    std::cerr << "Error: Can't open source file: " << name << std::endl;
    return NULL;
  }

  // ファイルの末尾に移動し現在位置（＝ファイルサイズ）を得る
  file.seekg(0L, std::ios::end);
  const GLsizei length(static_cast<GLsizei>(file.tellg()));

  // ファイルサイズのメモリを確保する
  GLchar *buffer(new(std::nothrow) GLchar[length + 1]);

  // メモリが確保できなければ戻る
  if (buffer == NULL)
  {
    std::cerr << "Error: Too large file: " << name << std::endl;
    file.close();
    return NULL;
  }

  // ファイルを先頭から読み込む
  file.seekg(0L, std::ios::beg);
  file.read(buffer, length);
  buffer[length] = '\0';

  // ファイルがうまく読み込めなければ戻る
  if (file.bad())
  {
    std::cerr << "Error: Could not read souce file: " << name << std::endl;
    delete[] buffer;
    buffer = NULL;
  }

  // ファイルを閉じる
  file.close();

  // ソースプログラムを読み込んだメモリを返す
  return buffer;
}

/*!
** \brief シェーダのソースファイルを読み込んでプログラムオブジェクトを作成する.
**
**   \param vert バーテックスシェーダのソースファイル名.
**   \param frag フラグメントシェーダのソースファイル名 (NULL なら不使用).
**   \param geom ジオメトリシェーダのソースファイル名 (NULL なら不使用).
**   \param nvarying フィードバックする varying 変数の数 (0 なら不使用).
**   \param varyings フィードバックする varying 変数のリスト (NULL なら不使用).
**   \return シェーダプログラムのプログラム名 (作成できなければ 0).
*/
GLuint gg::ggLoadShader(const char *vert, const char *frag, const char *geom,
  GLint nvarying, const char *const varyings[])
{
  // シェーダのソースファイルを読み込む
  const GLchar *const vsrc(readShaderSource(vert));
  const GLchar *const fsrc(readShaderSource(frag));
  const GLchar *const gsrc(readShaderSource(geom));

  // プログラムオブジェクトを作成する
  const GLuint program(ggCreateShader(vsrc, fsrc, gsrc, nvarying, varyings, vert, frag, geom));

  // ソースファイルの読み込みに使ったメモリを解放する
  delete[] vsrc;
  delete[] fsrc;
  delete[] gsrc;

  // 作成したプログラムオブジェクトを返す
  return program;
}

/*!
** \brief 3 要素の長さ.
**
**   \param a GLfloat 型の 3 要素の配列.
*/
GLfloat gg::ggLength3(const GLfloat *a)
{
  return sqrt(ggDot3(a, a));
}

/*!
** \brief 4 要素の長さ.
**
**   \param a GLfloat 型の 4 要素の配列.
*/
GLfloat gg::ggLength4(const GLfloat *a)
{
  return sqrt(ggDot4(a, a));
}

/*
** 変換行列：行列とベクトルの積 c ← a × b
*/
void gg::GgMatrix::projection(GLfloat *c, const GLfloat *a, const GLfloat *b) const
{
  for (int i = 0; i < 4; ++i)
  {
    c[i] = a[0 + i] * b[0] + a[4 + i] * b[1] + a[8 + i] * b[2] + a[12 + i] * b[3];
  }
}

/*
** 変換行列：行列と行列の積 c ← a × b
*/
void gg::GgMatrix::multiply(GLfloat *c, const GLfloat *a, const GLfloat *b) const
{
  for (int i = 0; i < 16; ++i)
  {
    int j = i & 3, k = i & ~3;

    c[i] = a[0 + j] * b[k + 0] + a[4 + j] * b[k + 1] + a[8 + j] * b[k + 2] + a[12 + j] * b[k + 3];
  }
}

/*
** 変換行列：単位行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadIdentity()
{
  array[ 1] = array[ 2] = array[ 3] = array[ 4] =
  array[ 6] = array[ 7] = array[ 8] = array[ 9] =
  array[11] = array[12] = array[13] = array[14] = 0.0f;
  array[ 0] = array[ 5] = array[10] = array[15] = 1.0f;

  return *this;
}

/*
** 変換行列：平行移動変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadTranslate(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  array[12] = x;
  array[13] = y;
  array[14] = z;
  array[ 0] = array[ 5] = array[10] = array[15] = w;
  array[ 1] = array[ 2] = array[ 3] = array[ 4] =
  array[ 6] = array[ 7] = array[ 8] = array[ 9] =
  array[11] = 0.0f;

  return *this;
}

/*
** 変換行列：拡大縮小変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadScale(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  array[ 0] = x;
  array[ 5] = y;
  array[10] = z;
  array[15] = w;
  array[ 1] = array[ 2] = array[ 3] = array[ 4] =
  array[ 6] = array[ 7] = array[ 8] = array[ 9] =
  array[11] = array[12] = array[13] = array[14] = 0.0f;

  return *this;
}

/*
** 変換行列：x 軸中心の回転変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadRotateX(GLfloat a)
{
  const GLfloat c(cos(a));
  const GLfloat s(sin(a));

  array[ 0] = 1.0f; array[ 1] = 0.0f; array[ 2] = 0.0f; array[ 3] = 0.0f;
  array[ 4] = 0.0f; array[ 5] = c;    array[ 6] = s;    array[ 7] = 0.0f;
  array[ 8] = 0.0f; array[ 9] = -s;   array[10] = c;    array[11] = 0.0f;
  array[12] = 0.0f; array[13] = 0.0f; array[14] = 0.0f; array[15] = 1.0f;

  return *this;
}

/*
** 変換行列：y 軸中心の回転変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadRotateY(GLfloat a)
{
  const GLfloat c(cos(a));
  const GLfloat s(sin(a));

  array[ 0] = c;    array[ 1] = 0.0f; array[ 2] = -s;   array[ 3] = 0.0f;
  array[ 4] = 0.0f; array[ 5] = 1.0f; array[ 6] = 0.0f; array[ 7] = 0.0f;
  array[ 8] = s;    array[ 9] = 0.0f; array[10] = c;    array[11] = 0.0f;
  array[12] = 0.0f; array[13] = 0.0f; array[14] = 0.0f; array[15] = 1.0f;

  return *this;
}

/*
** 変換行列：z 軸中心の回転変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadRotateZ(GLfloat a)
{
  const GLfloat c(cos(a));
  const GLfloat s(sin(a));

  array[ 0] = c;    array[ 1] = s;    array[ 2] = 0.0f; array[ 3] = 0.0f;
  array[ 4] = -s;   array[ 5] = c;    array[ 6] = 0.0f; array[ 7] = 0.0f;
  array[ 8] = 0.0f; array[ 9] = 0.0f; array[10] = 1.0f; array[11] = 0.0f;
  array[12] = 0.0f; array[13] = 0.0f; array[14] = 0.0f; array[15] = 1.0f;

  return *this;
}

/*
** 変換行列：任意軸中心の回転変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadRotate(GLfloat x, GLfloat y, GLfloat z, GLfloat a)
{
  const GLfloat d(sqrt(x * x + y * y + z * z));

  if (d > 0.0f)
  {
    const GLfloat l(x / d),  m(y / d),  n(z / d);
    const GLfloat l2(l * l), m2(m * m), n2(n * n);
    const GLfloat lm(l * m), mn(m * n), nl(n * l);
    const GLfloat c(cos(a)), c1(1.0f - c);
    const GLfloat s(sin(a));

    array[ 0] = (1.0f - l2) * c + l2;
    array[ 1] = lm * c1 + n * s;
    array[ 2] = nl * c1 - m * s;
    array[ 3] = 0.0f;

    array[ 4] = lm * c1 - n * s;
    array[ 5] = (1.0f - m2) * c + m2;
    array[ 6] = mn * c1 + l * s;
    array[ 7] = 0.0f;

    array[ 8] = nl * c1 + m * s;
    array[ 9] = mn * c1 - l * s;
    array[10] = (1.0f - n2) * c + n2;
    array[11] = 0.0f;

    array[12] = 0.0f;
    array[13] = 0.0f;
    array[14] = 0.0f;
    array[15] = 1.0f;
  }

  return *this;
}

/*
** 変換行列：転置行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadTranspose(const GLfloat *marray)
{
  array[ 0] = marray[ 0];
  array[ 1] = marray[ 4];
  array[ 2] = marray[ 8];
  array[ 3] = marray[12];
  array[ 4] = marray[ 1];
  array[ 5] = marray[ 5];
  array[ 6] = marray[ 9];
  array[ 7] = marray[13];
  array[ 8] = marray[ 2];
  array[ 9] = marray[ 6];
  array[10] = marray[10];
  array[11] = marray[14];
  array[12] = marray[ 3];
  array[13] = marray[ 7];
  array[14] = marray[11];
  array[15] = marray[15];

  return *this;
}

/*
** 変換行列：逆行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadInvert(const GLfloat *marray)
{
  GLfloat lu[20], *plu[4];

  // j 行の要素の値の絶対値の最大値を plu[j][4] に求める
  for (int j = 0; j < 4; ++j)
  {
    GLfloat max(fabs(*(plu[j] = lu + 5 * j) = *(marray++)));

    for (int i = 0; ++i < 4;)
    {
      GLfloat a(fabs(plu[j][i] = *(marray++)));
      if (a > max) max = a;
    }
    if (max == 0.0f) return *this;
    plu[j][4] = 1.0f / max;
  }

  // ピボットを考慮した LU 分解
  for (int j = 0; j < 4; ++j)
  {
    GLfloat max(fabs(plu[j][j] * plu[j][4]));
    int i = j;

    for (int k = j; ++k < 4;)
    {
      GLfloat a(fabs(plu[k][j] * plu[k][4]));
      if (a > max)
      {
        max = a;
        i = k;
      }
    }
    if (i > j)
    {
      GLfloat *t(plu[j]);
      plu[j] = plu[i];
      plu[i] = t;
    }
    if (plu[j][j] == 0.0f) return *this;
    for (int k = j; ++k < 4;)
    {
      plu[k][j] /= plu[j][j];
      for (int i = j; ++i < 4;)
      {
        plu[k][i] -= plu[j][i] * plu[k][j];
      }
    }
  }

  // LU 分解から逆行列を求める
  for (int k = 0; k < 4; ++k)
  {
    // array に単位行列を設定する
    for (int i = 0; i < 4; ++i)
    {
      array[i * 4 + k] = (plu[i] == lu + k * 5) ? 1.0f : 0.0f;
    }
    // lu から逆行列を求める
    for (int i = 0; i < 4; ++i)
    {
      for (int j = i; ++j < 4;)
      {
        array[j * 4 + k] -= array[i * 4 + k] * plu[j][i];
      }
    }
    for (int i = 4; --i >= 0;)
    {
      for (int j = i; ++j < 4;)
      {
        array[i * 4 + k] -= plu[i][j] * array[j * 4 + k];
      }
      array[i * 4 + k] /= plu[i][i];
    }
  }

  return *this;
}

/*
** 変換行列：法線変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadNormal(const GLfloat *marray)
{
  array[ 0] = marray[ 5] * marray[10] - marray[ 6] * marray[ 9];
  array[ 1] = marray[ 6] * marray[ 8] - marray[ 4] * marray[10];
  array[ 2] = marray[ 4] * marray[ 9] - marray[ 5] * marray[ 8];
  array[ 4] = marray[ 9] * marray[ 2] - marray[10] * marray[ 1];
  array[ 5] = marray[10] * marray[ 0] - marray[ 8] * marray[ 2];
  array[ 6] = marray[ 8] * marray[ 1] - marray[ 9] * marray[ 0];
  array[ 8] = marray[ 1] * marray[ 6] - marray[ 2] * marray[ 5];
  array[ 9] = marray[ 2] * marray[ 4] - marray[ 0] * marray[ 6];
  array[10] = marray[ 0] * marray[ 5] - marray[ 1] * marray[ 4];
  array[ 3] = array[ 7] = array[11] = array[12] = array[13] = array[14] = 0.0f;
  array[15] = 1.0f;

  return *this;
}

/*
** 変換行列：ビュー変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadLookat(GLfloat ex, GLfloat ey, GLfloat ez,
  GLfloat tx, GLfloat ty, GLfloat tz,
  GLfloat ux, GLfloat uy, GLfloat uz)
{
  // z 軸 = e - t
  const GLfloat zx(ex - tx);
  const GLfloat zy(ey - ty);
  const GLfloat zz(ez - tz);

  // x 軸 = u x z 軸
  const GLfloat xx(uy * zz - uz * zy);
  const GLfloat xy(uz * zx - ux * zz);
  const GLfloat xz(ux * zy - uy * zx);

  // y 軸 = z 軸 x x 軸
  const GLfloat yx(zy * xz - zz * xy);
  const GLfloat yy(zz * xx - zx * xz);
  const GLfloat yz(zx * xy - zy * xx);

  // y 軸の長さをチェック
  GLfloat y(yx * yx + yy * yy + yz * yz);
  if (y == 0.0f) return *this;

  // x 軸の正規化
  const GLfloat x(sqrt(xx * xx + xy * xy + xz * xz));
  array[ 0] = xx / x;
  array[ 4] = xy / x;
  array[ 8] = xz / x;

  // y 軸の正規化
  y = sqrt(y);
  array[ 1] = yx / y;
  array[ 5] = yy / y;
  array[ 9] = yz / y;

  // z 軸の正規化
  const GLfloat z(sqrt(zx * zx + zy * zy + zz * zz));
  array[ 2] = zx / z;
  array[ 6] = zy / z;
  array[10] = zz / z;

  // 平行移動
  array[12] = -(ex * array[ 0] + ey * array[ 4] + ez * array[ 8]);
  array[13] = -(ex * array[ 1] + ey * array[ 5] + ez * array[ 9]);
  array[14] = -(ex * array[ 2] + ey * array[ 6] + ez * array[10]);

  // 残り
  array[ 3] = array[ 7] = array[11] = 0.0f;
  array[15] = 1.0f;

  return *this;
}

/*
** 変換行列：平行投影変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadOrthogonal(GLfloat left, GLfloat right,
  GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
  const GLfloat dx(right - left);
  const GLfloat dy(top - bottom);
  const GLfloat dz(zFar - zNear);

  if (dx != 0.0f && dy != 0.0f && dz != 0.0f)
  {
    array[ 0] = 2.0f / dx;
    array[ 5] = 2.0f / dy;
    array[10] = -2.0f / dz;
    array[12] = -(right + left) / dx;
    array[13] = -(top + bottom) / dy;
    array[14] = -(zFar + zNear) / dz;
    array[15] = 1.0f;
    array[ 1] = array[ 2] = array[ 3] = array[ 4] =
    array[ 6] = array[ 7] = array[ 8] = array[ 9] =
    array[11] = 0.0f;
  }

  return *this;
}

/*
** 変換行列：透視投影変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadFrustum(GLfloat left, GLfloat right,
  GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
  const GLfloat dx(right - left);
  const GLfloat dy(top - bottom);
  const GLfloat dz(zFar - zNear);

  if (dx != 0.0f && dy != 0.0f && dz != 0.0f)
  {
    array[ 0] = 2.0f * zNear / dx;
    array[ 5] = 2.0f * zNear / dy;
    array[ 8] = (right + left) / dx;
    array[ 9] = (top + bottom) / dy;
    array[10] = -(zFar + zNear) / dz;
    array[11] = -1.0f;
    array[14] = -2.0f * zFar * zNear / dz;
    array[ 1] = array[ 2] = array[ 3] = array[ 4] =
    array[ 6] = array[ 7] = array[12] = array[13] =
    array[15] = 0.0f;
  }

  return *this;
}

/*
** 変換行列：画角から透視投影変換行列を設定する
*/
gg::GgMatrix &gg::GgMatrix::loadPerspective(GLfloat fovy, GLfloat aspect,
  GLfloat zNear, GLfloat zFar)
{
  const GLfloat dz(zFar - zNear);

  if (dz != 0.0f)
  {
    array[ 5] = 1.0f / tan(fovy * 0.5f);
    array[ 0] = array[ 5] / aspect;
    array[10] = -(zFar + zNear) / dz;
    array[11] = -1.0f;
    array[14] = -2.0f * zFar * zNear / dz;
    array[ 1] = array[ 2] = array[ 3] = array[ 4] =
    array[ 6] = array[ 7] = array[ 8] = array[ 9] =
    array[12] = array[13] = array[15] = 0.0f;
  }

  return *this;
}

/*
** 四元数：GgQuaternion 型の四元数 p, q の積を r に求める
*/
void gg::GgQuaternion::multiply(GLfloat *r, const GLfloat *p, const GLfloat *q) const
{
  r[0] = p[1] * q[2] - p[2] * q[1] + p[0] * q[3] + p[3] * q[0];
  r[1] = p[2] * q[0] - p[0] * q[2] + p[1] * q[3] + p[3] * q[1];
  r[2] = p[0] * q[1] - p[1] * q[0] + p[2] * q[3] + p[3] * q[2];
  r[3] = p[3] * q[3] - p[0] * q[0] - p[1] * q[1] - p[2] * q[2];
}

/*
** 四元数：GgQuaternion 型の四元数 q が表す変換行列を m に求める
*/
void gg::GgQuaternion::toMatrix(GLfloat *m, const GLfloat *q) const
{
  const GLfloat xx(q[0] * q[0] * 2.0f);
  const GLfloat yy(q[1] * q[1] * 2.0f);
  const GLfloat zz(q[2] * q[2] * 2.0f);
  const GLfloat xy(q[0] * q[1] * 2.0f);
  const GLfloat yz(q[1] * q[2] * 2.0f);
  const GLfloat zx(q[2] * q[0] * 2.0f);
  const GLfloat xw(q[0] * q[3] * 2.0f);
  const GLfloat yw(q[1] * q[3] * 2.0f);
  const GLfloat zw(q[2] * q[3] * 2.0f);

  m[ 0] = 1.0f - yy - zz;
  m[ 1] = xy + zw;
  m[ 2] = zx - yw;
  m[ 4] = xy - zw;
  m[ 5] = 1.0f - zz - xx;
  m[ 6] = yz + xw;
  m[ 8] = zx + yw;
  m[ 9] = yz - xw;
  m[10] = 1.0f - xx - yy;
  m[ 3] = m[ 7] = m[11] = m[12] = m[13] = m[14] = 0.0f;
  m[15] = 1.0f;
}

/*
** 四元数：回転変換行列 a が表す四元数を q に求める
*/
void gg::GgQuaternion::toQuaternion(GLfloat *q, const GLfloat *a) const
{
  const GLfloat tr(a[0] + a[5] + a[10] + a[15]);

  if (tr > 0.0f)
  {
    q[3] = sqrt(tr) * 0.5f;
    q[0] = (a[6] - a[9]) * 0.25f / q[3];
    q[1] = (a[8] - a[2]) * 0.25f / q[3];
    q[2] = (a[1] - a[4]) * 0.25f / q[3];
  }
}

/*
** 四元数：球面線形補間 p に q と r を t で補間した四元数を求める
*/
void gg::GgQuaternion::slerp(GLfloat *p, const GLfloat *q, const GLfloat *r, GLfloat t) const
{
  const GLfloat qr(ggDot3(q, r));
  const GLfloat ss(1.0f - qr * qr);

  if (ss == 0.0f)
  {
    if (p != q)
    {
      p[0] = q[0];
      p[1] = q[1];
      p[2] = q[2];
      p[3] = q[3];
    }
  }
  else
  {
    const GLfloat sp(sqrt(ss));
    const GLfloat ph(acos(qr));
    const GLfloat pt(ph * t);
    const GLfloat t1(sin(pt) / sp);
    const GLfloat t0(sin(ph - pt) / sp);

    p[0] = q[0] * t0 + r[0] * t1;
    p[1] = q[1] * t0 + r[1] * t1;
    p[2] = q[2] * t0 + r[2] * t1;
    p[3] = q[3] * t0 + r[3] * t1;
  }
}

/*
** 四元数：(x, y, z) を軸とし角度 a 回転する四元数を求める
*/
gg::GgQuaternion &gg::GgQuaternion::loadRotate(GLfloat x, GLfloat y, GLfloat z, GLfloat a)
{
  const GLfloat l(x * x + y * y + z * z);

  if (l != 0.0)
  {
    GLfloat s(sin(a *= 0.5f) / sqrt(l));

    array[0] = x * s;
    array[1] = y * s;
    array[2] = z * s;
  }
  else
  {
    array[0] = array[1] = array[2] = 0.0f;
  }
  array[3] = cos(a);

  return *this;
}

/*
** x 軸中心に角度 a 回転する四元数を格納する
*/
gg::GgQuaternion &gg::GgQuaternion::loadRotateX(GLfloat a)
{
  const GLfloat t(a * 0.5f);

  array[0] = sin(t);
  array[3] = cos(t);
  array[1] = array[2] = 0.0f;

  return *this;
}

/*
** y 軸中心に角度 a 回転する四元数を格納する
*/
gg::GgQuaternion &gg::GgQuaternion::loadRotateY(GLfloat a)
{
  const GLfloat t(a * 0.5f);

  array[1] = sin(t);
  array[3] = cos(t);
  array[0] = array[2] = 0.0f;

  return *this;
}

/*
** z 軸中心に角度 a 回転する四元数を格納する
*/
gg::GgQuaternion &gg::GgQuaternion::loadRotateZ(GLfloat a)
{
  const GLfloat t(a * 0.5f);

  array[2] = sin(t);
  array[3] = cos(t);
  array[0] = array[1] = 0.0f;

  return *this;
}

/*
** 四元数：オイラー角 (heading, pitch, roll) にもとづいて四元数を求める
*/
gg::GgQuaternion &gg::GgQuaternion::loadEuler(GLfloat heading, GLfloat pitch, GLfloat roll)
{
  GgQuaternion h, p, r;

  h.loadRotateY(heading);
  p.loadRotateX(pitch);
  r.loadRotateZ(roll);

  *this = h * p * r;

  return *this;
}

/*
** 四元数：正規化して格納する
*/
gg::GgQuaternion &gg::GgQuaternion::loadNormalize(const GLfloat *a)
{
  // ノルムを求める
  const GLfloat l(ggLength4(a));

  if (l > 0.0f)
  {
    // ノルムで各要素を割る
    array[0] = a[0] / l;
    array[1] = a[1] / l;
    array[2] = a[2] / l;
    array[3] = a[3] / l;
  }

  return *this;
}

/*
** 四元数：共役四元数を格納する
*/
gg::GgQuaternion &gg::GgQuaternion::loadConjugate(const GLfloat *a)
{
  // 軸ベクトルを反転する
  array[0] = -a[0];
  array[1] = -a[1];
  array[2] = -a[2];
  array[3] =  a[3];

  return *this;
}

/*
** 四元数：逆元を格納する
*/
gg::GgQuaternion &gg::GgQuaternion::loadInvert(const GLfloat *a)
{
  // ノルムの二乗を求める
  const GLfloat l(ggDot4(a, a));

  if (l > 0.0f)
  {
    // 共役四元数を求める
    GgQuaternion r;
    r.loadConjugate(a);

    // ノルムの二乗で割る
    array[0] = r.array[0] / l;
    array[1] = r.array[1] / l;
    array[2] = r.array[2] / l;
    array[3] = r.array[3] / l;
  }

  return *this;
}

/*
** 簡易トラックボール処理：リセット
*/
void gg::GgTrackball::reset()
{
  // ドラッグ中ではない
  drag = false;

  // 単位クォーターニオンで初期化する
  tq = cq.loadIdentity();

  // 回転行列を初期化する
  tq.getMatrix(rt);
}

/*
** 簡易トラックボール処理：トラックボールする領域の設定
**
**   Reshape コールバック (resize) の中で実行する
**   (w, h): ウィンドウサイズ
*/
void gg::GgTrackball::region(float w, float h)
{
  // マウスポインタ位置のウィンドウ内の相対的位置への換算用
  sx = 1.0f / w;
  sy = 1.0f / h;
}

/*
** 簡易トラックボール処理：ドラッグ開始時の処理
**
**   マウスボタンを押したときに実行する
**   (x, y): 現在のマウス位置
*/
void gg::GgTrackball::start(float x, float y)
{
  // ドラッグ開始
  drag = true;

  // ドラッグ開始点を記録する
  cx = x;
  cy = y;
}

/*
** 簡易トラックボール処理：ドラッグ中の処理
**
**   マウスのドラッグ中に実行する
**   (x, y): 現在のマウス位置
*/
void gg::GgTrackball::motion(float x, float y)
{
  if (drag)
  {
    // マウスポインタの位置のドラッグ開始位置からの変位
    const float dx((x - cx) * sx);
    const float dy((y - cy) * sy);

    // マウスポインタの位置のドラッグ開始位置からの距離
    const float a(sqrt(dx * dx + dy * dy));

    if (a != 0.0)
    {
      // 現在の回転の四元数に作った四元数を掛けて合成する
      tq = ggRotateQuaternion(dy, dx, 0.0f, a * 6.283185f) * cq;

      // 合成した四元数から回転の変換行列を求める
      tq.getMatrix(rt);
    }
  }
}

/*
** 簡易トラックボール処理：回転角の修正
**
**   現在の回転角を修正する
**   q: 修正分の回転角を表す四元数
*/
void gg::GgTrackball::rotate(const GgQuaternion &q)
{
  if (!drag)
  {
    // 保存されている四元数に修正分の四元数を掛けて合成する
    tq = q * cq;

    // 合成した四元数から回転の変換行列を求める
    tq.getMatrix(rt);

    // 誤差を吸収するために正規化して保存する
    cq = tq.normalize();
  }
}

/*
** 簡易トラックボール処理：停止時の処理
**
**   マウスボタンを離したときに実行する
**   (x, y): 現在のマウス位置
*/
void gg::GgTrackball::stop(float x, float y)
{
  // ドラッグ終了点における回転を求める
  motion(x, y);

  // 誤差を吸収するために正規化して保存する
  cq = tq.normalize();

  // ドラッグ終了
  drag = false;
}

/*
** ポイント：描画
*/
void gg::GgPoints::draw(GLint first, GLsizei count) const
{
  // 頂点配列オブジェクトを指定する
  use();

  // 図形を描画する
  glDrawArrays(getMode(), first, count > 0 ? count : pnum() - first);
}

/*
** オブジェクト：描画
*/
void gg::GgElements::draw(GLint first, GLsizei count) const
{
  // 頂点配列オブジェクトを指定する
  use();

  // 図形を描画する
  glDrawElements(getMode(), (count > 0 ? count : fnum() - first) * 3,
    GL_UNSIGNED_INT, static_cast<GLuint (*)[3]>(0) + first);
}

/*!
** \brief 点群を立方体状に生成する.
**
**    \param nv 生成する点の数.
**    \param cx 点群の中心の x 座標.
**    \param cy 点群の中心の y 座標.
**    \param cz 点群の中心の z 座標.
**    \param length 点群を生成する立方体の一辺の長さ.
*/
gg::GgPoints *gg::ggPointsCube(GLuint nv, GLfloat length, GLfloat cx, GLfloat cy, GLfloat cz)
{
  // メモリを確保する
  GLfloat (*const pos)[3](new(std::nothrow) GLfloat[nv][3]);

  // メモリが確保できなければ戻る
  if (pos == NULL) return NULL;

  // 点を生成する
  for (GLuint v = 0; v < nv; ++v)
  {
    pos[v][0] = (static_cast<float>(rand()) / static_cast<float>(RAND_MAX) - 0.5f) * length + cx;
    pos[v][1] = (static_cast<float>(rand()) / static_cast<float>(RAND_MAX) - 0.5f) * length + cy;
    pos[v][2] = (static_cast<float>(rand()) / static_cast<float>(RAND_MAX) - 0.5f) * length + cz;
  }

  // ポイントデータの GgPoints オブジェクトを作成する
  GgPoints *const points(new GgPoints(nv, pos, GL_POINTS));

  // 作業用のメモリを解放する
  delete[] pos;

  // GgPoints オブジェクトを返す
  return points;
}

/*!
** \brief 点群を球状に生成する.
**
**    \param nv 生成する点の数.
**    \param cx 点群の中心の x 座標.
**    \param cy 点群の中心の y 座標.
**    \param cz 点群の中心の z 座標.
**    \param radius 点群を生成する半径.
*/
gg::GgPoints *gg::ggPointsSphere(GLuint nv, GLfloat radius,
  GLfloat cx, GLfloat cy, GLfloat cz)
{
  // メモリを確保する
  GLfloat (*const pos)[3](new(std::nothrow) GLfloat[nv][3]);

  // メモリが確保できなければ戻る
  if (pos == NULL) return NULL;

  // 点を生成する
  for (GLuint v = 0; v < nv; ++v)
  {
    const float r(radius * static_cast<float>(rand()) / static_cast<float>(RAND_MAX));
    const float t(6.2831853f * static_cast<float>(rand()) / (static_cast<float>(RAND_MAX) + 1.0f));
    const float cp(2.0f * static_cast<float>(rand()) / static_cast<float>(RAND_MAX) - 1.0f);
    const float sp(sqrt(1.0f - cp * cp));
    const float ct(cos(t));
    const float st(sin(t));

    pos[v][0] = r * sp * ct + cx;
    pos[v][1] = r * sp * st + cy;
    pos[v][2] = r * cp + cz;
  }

  // ポイントデータの GgPoints オブジェクトを作成する
  GgPoints *const points(new GgPoints(nv, pos, GL_POINTS));

  // 作業用のメモリを解放する
  delete[] pos;

  // GgPoints オブジェクトを返す
  return points;
}

/*!
** \brief 矩形状に 2 枚の三角形を生成する.
**
**   \param width 矩形の幅.
**   \param height 矩形の高さ.
*/
gg::GgTriangles *gg::ggRectangle(GLfloat width, GLfloat height)
{
  // 基準となる形状
  static const GLfloat p[][2] =
  {
    { -0.5f, -0.5f },
    {  0.5f, -0.5f },
    {  0.5f,  0.5f },
    { -0.5f,  0.5f },
  };

  // 作業用のメモリ
  GLfloat pos[4][3];
  GLfloat norm[4][3];

  // 頂点位置と法線ベクトルを求める
  for (int v = 0; v < 4; ++v)
  {
    pos[v][0] = p[v][0] * width;
    pos[v][1] = p[v][1] * height;
    pos[v][2] = 0.0f;

    norm[v][0] = 0.0f;
    norm[v][1] = 0.0f;
    norm[v][2] = 1.0f;
  }

  // 矩形の GgTrianges オブジェクトを作成する
  return new GgTriangles(4, pos, norm, GL_TRIANGLE_FAN);
}

/*!
** \brief 楕円状に三角形を生成する.
**
**   \param width 楕円の幅.
**   \param height 楕円の高さ.
**   \param slices 楕円の分割数.
*/
gg::GgTriangles *gg::ggEllipse(GLfloat width, GLfloat height, GLuint slices)
{
  // 作業用のメモリ
  std::vector<GLfloat> pos, norm;

  // 頂点位置と法線ベクトルを求める
  for (GLuint v = 0; v < slices; ++v)
  {
    const float t(6.2831853f * static_cast<float>(v) / static_cast<float>(slices));

    pos.push_back(cos(t) * width * 0.5f);
    pos.push_back(sin(t) * height * 0.5f);
    pos.push_back(0.0f);

    norm.push_back(0.0f);
    norm.push_back(0.0f);
    norm.push_back(1.0f);
  }

  // GgTriangles オブジェクトを作成する
  return new GgTriangles(slices, reinterpret_cast<GLfloat (*)[3]>(&pos[0]),
    reinterpret_cast<GLfloat (*)[3]>(&norm[0]), GL_TRIANGLE_FAN);
}

/*!
** \brief Wavefront OBJ ファイルを読み込む (Arrays 形式).
**
**   三角形分割された Wavefront OBJ ファイルを読み込んで
**   GgArrays 形式の三角形データを生成する.
**
**   \param name ファイル名.
**   \param normalize true なら大きさを正規化.
*/
gg::GgTriangles *gg::ggArraysObj(const char *name, bool normalize)
{
  GLuint ng, nv;
  GLuint (*group)[2];
  GLfloat (*amb)[4], (*diff)[4], (*spec)[4], *shi;
  GLfloat (*pos)[3], (*norm)[3];

  // ファイルを読み込む
  if (!ggLoadObj(name, ng, group, amb, diff, spec, shi, nv, pos, norm, normalize)) return 0;

  // GgTriangles オブジェクトを作成する
  GgTriangles *const obj(new GgTriangles(nv, pos, norm, GL_TRIANGLES));

  // 作業用に使ったメモリを解放する
  delete[] group;
  delete[] amb;
  delete[] diff;
  delete[] spec;
  delete[] shi;
  delete[] pos;
  delete[] norm;

  // GgTriangles オブジェクトを返す
  return obj;
}

/*!
** \brief Wavefront OBJ ファイル を読み込む (Elements 形式).
**
**   三角形分割された Wavefront OBJ ファイル を読み込んで
**   GgElements 形式の三角形データを生成する.
**
**   \param name ファイル名.
**   \param normalize true なら大きさを正規化.
*/
gg::GgElements *gg::ggElementsObj(const char *name, bool normalize)
{
  GLuint nv, nf;
  GLfloat (*pos)[3], (*norm)[3];
  GLuint (*face)[3];

  // ファイルを読み込む
  if (!ggLoadObj(name, nv, pos, norm, nf, face, normalize)) return 0;

  // GgElements オブジェクトを作成する
  GgElements *const obj(new GgElements(nv, pos, norm, nf, face, GL_TRIANGLES));

  // 作業用に使ったメモリを解放する
  delete[] pos;
  delete[] norm;
  delete[] face;

  // GgElement オブジェクトを返す
  return obj;
}

/*!
** \brief メッシュ形状を作成する (Elements 形式).
**
**   メッシュ状に GgElements 形式の三角形データを生成する.
**
**   \param slices メッシュの横方向の分割数.
**   \param stacks メッシュの縦方向の分割数.
**   \param pos メッシュの頂点の位置.
**   \param norm メッシュの頂点の法線ベクトル.
*/
gg::GgElements *gg::ggElementsMesh(int slices, int stacks, const GLfloat (*pos)[3], const GLfloat (*norm)[3])
{
  // 頂点の法線ベクトル
  std::vector<GLfloat> tnorm;

  // 頂点の法線ベクトルの初期設定
  if (norm == NULL)
  {
    // 頂点の法線ベクトルを求める
    for (int j = 0; j <= stacks; ++j)
    {
      for (int i = 0; i <= slices; ++i)
      {
        // 処理対象の頂点番号
        const int k(j * (slices + 1) + i);

        // 処理対象の頂点の周囲の頂点番号
        const int kim(i > 0 ? k - 1 : k);
        const int kip(i < slices ? k + 1 : k);
        const int kjm(j > 0 ? k - slices - 1 : k);
        const int kjp(j < stacks ? k + slices + 1 : k);

        // 接線ベクトル
        const GLfloat t[] =
        {
          pos[kip][0] - pos[kim][0],
          pos[kip][1] - pos[kim][1],
          pos[kip][2] - pos[kim][2]
        };

        // 従接線ベクトル
        const GLfloat b[] =
        {
          pos[kjp][0] - pos[kjm][0],
          pos[kjp][1] - pos[kjm][1],
          pos[kjp][2] - pos[kjm][2]
        };

        // 法線ベクトル
        const GLfloat n[] =
        {
          t[1] * b[2] - t[2] * b[1],
          t[2] * b[0] - t[0] * b[2],
          t[0] * b[1] - t[1] * b[0]
        };

        // 法線ベクトルの正規化
        const GLfloat l = n[0] * n[0] + n[1] * n[1] + n[2] * n[2];
        if (l > 0.0f)
        {
          tnorm.push_back(n[0] / l);
          tnorm.push_back(n[1] / l);
          tnorm.push_back(n[2] / l);
        }
        else {
          tnorm.push_back(0.0f);
          tnorm.push_back(0.0f);
          tnorm.push_back(0.0f);
        }
      }
    }

    norm = reinterpret_cast<GLfloat (*)[3]>(&tnorm[0]);
  }

  // 頂点のインデックス (面データ)
  std::vector<GLuint> f;

  // 頂点のインデックスを求める
  for (int j = 0; j < stacks; ++j)
  {
    for (int i = 0; i < slices; ++i)
    {
      const int k((slices + 1) * j + i);

      // 上半分の三角形
      f.push_back(k);
      f.push_back(k + slices + 2);
      f.push_back(k + 1);

      // 下半分の三角形
      f.push_back(k);
      f.push_back(k + slices + 1);
      f.push_back(k + slices + 2);
    }
  }

  // GgElements オブジェクトを作成する
  return new GgElements((slices + 1) * (stacks + 1), pos, norm,
    static_cast<GLuint>(f.size()) / 3, reinterpret_cast<GLuint (*)[3]>(&f[0]), GL_TRIANGLES);
}

/*!
** \brief 球状に三角形データを生成する (Elements 形式).
**
**   球状に GgElements 形式の三角形データを生成する.
**
**   \param radius 球の半径.
**   \param slices 球の経度方向の分割数.
**   \param stacks 球の緯度方向の分割数.
*/
gg::GgElements *gg::ggElementsSphere(GLfloat radius, int slices, int stacks)
{
  // 頂点の位置と法線ベクトル
  std::vector<GLfloat> p, n;

  // 頂点の位置と法線ベクトルを求める
  for (int j = 0; j <= stacks; ++j)
  {
    const float t(static_cast<float>(j) / static_cast<float>(stacks));
    const float ph(3.141593f * t);
    const float y(cosf(ph));
    const float r(sinf(ph));

    for (int i = 0; i <= slices; ++i)
    {
      const float s(static_cast<float>(i) / static_cast<float>(slices));
      const float th(-2.0f * 3.141593f * s);
      const float x(r * cosf(th));
      const float z(r * sinf(th));

      // 頂点の座標値
      p.push_back(x * radius);
      p.push_back(y * radius);
      p.push_back(z * radius);

      // 頂点の法線ベクトル
      n.push_back(x);
      n.push_back(y);
      n.push_back(z);
    }
  }

  // オブジェクトの作成
  return ggElementsMesh(slices, stacks, reinterpret_cast<GLfloat (*)[3]>(&p[0]),
    reinterpret_cast<GLfloat (*)[3]>(&n[0]));
}

/*
** 三角形に単純な陰影付けを行うシェーダ
*/
gg::GgSimpleShader::GgSimpleShader(const char *vert, const char *frag,
  const char *geom, GLint nvarying, const char **varyings)
  : GgPointShader(vert, frag, geom, nvarying, varyings)
{
  // プログラム名
  GLuint program(get());

  // 光源のパラメータの uniform 変数の場所
  loc.lamb = glGetUniformLocation(program, "lamb");
  loc.ldiff = glGetUniformLocation(program, "ldiff");
  loc.lspec = glGetUniformLocation(program, "lspec");
  loc.lpos = glGetUniformLocation(program, "lpos");

  // 材質のパラメータの uniform 変数の場所
  loc.kamb = glGetUniformLocation(program, "kamb");
  loc.kdiff = glGetUniformLocation(program, "kdiff");
  loc.kspec = glGetUniformLocation(program, "kspec");
  loc.kshi = glGetUniformLocation(program, "kshi");

  // 変換行列の uniform 変数の場所
  loc.mn = glGetUniformLocation(program, "mn");
}

/*
** Wavefront OBJ 形式のデータ：デストラクタ
*/
gg::GgObj::~GgObj()
{
  delete[] group;
  delete[] amb;
  delete[] diff;
  delete[] spec;
  delete[] shi;
  delete data;
}

/*
** Wavefront OBJ 形式のデータ：コンストラクタ
*/
gg::GgObj::GgObj(const char *name, bool normalize)
  : data(NULL)
{
  GLuint nv;
  GLfloat (*pos)[3], (*norm)[3];

  // ファイルを読み込む
  if (ggLoadObj(name, ng, group, amb, diff, spec, shi, nv, pos, norm, normalize))
  {
    // 頂点バッファオブジェクトを作成する
    data = new GgTriangles(nv, pos, norm);

    // 作業用に確保したメモリを解放する
    delete[] pos;
    delete[] norm;
  }
}

/*
** Wavefront OBJ 形式のデータ：図形の描画
*/
void gg::GgObj::draw(const GgSimpleShader *shader, GLint first, GLsizei count) const
{
  // 描画するグループの数
  if (count <= 0) count = ng - first;

  for (int g = first; g < count; ++g)
  {
    if (shader)
    {
      // 材質を設定する
      shader->loadMaterialAmbient(amb[g]);
      shader->loadMaterialDiffuse(diff[g]);
      shader->loadMaterialSpecular(spec[g]);
      shader->loadMaterialShininess(shi[g]);
    }

    // 図形を描画する
    data->draw(group[g][0], group[g][1]);
  }
}
